<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>BaseSpring</title>
    <url>/2017/07/22/BaseSpring/</url>
    <content><![CDATA[<p>楼主以前每次撸一个 web project 都需要把 spring 以及相关的框架（像 tiles 、 mybatis、hibernate）都配置一遍，<span id="more"></span>虽然说可以提高写代码的熟练度，但是有时候的确是不想在这上面浪费时间，所以楼主撸了一个 BaseSpring，以后需要快速搭建 spring web 的时候就直接把这个 project pull 下来，删除 .gitignore 文件，去掉不需要的组件就行了。</p>
<p>github url：需要自取
<a href="https://github.com/Knight-JNXU/SpringStudy/tree/BaseSpring">https://github.com/Knight-JNXU/SpringStudy/tree/BaseSpring</a></p>
]]></content>
      <categories>
        <category>开发</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>srping</tag>
      </tags>
  </entry>
  <entry>
    <title>Cisco Packet Tracer 思科模拟器 搭建DNS服务</title>
    <url>/2024/10/19/Cisco%20Packet%20Tracer%20%E6%80%9D%E7%A7%91%E6%A8%A1%E6%8B%9F%E5%99%A8%20%E6%90%AD%E5%BB%BADNS%E6%9C%8D%E5%8A%A1/</url>
    <content><![CDATA[<p>网络技术课程实操训练。</p>
<span id="more"></span>

<p>拓扑结构如下：</p>
<p><img src="./1729330119339.png" alt="Alt text"></p>
<p>配置如下：</p>
<p><img src="./1729330148190.png" alt="Alt text"></p>
<p><img src="./1729330167354.png" alt="Alt text"></p>
<p><img src="./1729330183232.png" alt="Alt text"></p>
<p><img src="./1729330202644.png" alt="Alt text"></p>
<p><img src="./1729330222148.png" alt="Alt text"></p>
<p>这样既可以通过 IP 访问网页，也可以使用 域名 访问网页</p>
<p><img src="./1729330242609.png" alt="Alt text"></p>
<p><img src="./1729330295918.png" alt="Alt text"></p>
]]></content>
      <categories>
        <category>Cisco Packet Tracer</category>
        <category>思科模拟器</category>
      </categories>
      <tags>
        <tag>网络技术</tag>
      </tags>
  </entry>
  <entry>
    <title>Cisco Packet Tracer 思科模拟器 搭建Email服务</title>
    <url>/2024/10/19/Cisco%20Packet%20Tracer%20%E6%80%9D%E7%A7%91%E6%A8%A1%E6%8B%9F%E5%99%A8%20%E6%90%AD%E5%BB%BAEmail%E6%9C%8D%E5%8A%A1/</url>
    <content><![CDATA[<p>网络技术课程实操训练。</p>
<span id="more"></span>

<p>拓扑结构如下：</p>
<p><img src="./1729330932980.png" alt="Alt text"></p>
<p>配置如下：</p>
<p><img src="./1729330946291.png" alt="Alt text"></p>
<p><img src="./1729330966395.png" alt="Alt text"></p>
<p><img src="./1729330980147.png" alt="Alt text"></p>
<p><img src="./1729330992073.png" alt="Alt text"></p>
<p><img src="./1729331007301.png" alt="Alt text"></p>
<p><img src="./1729331023903.png" alt="Alt text"></p>
<p><img src="./1729331039521.png" alt="Alt text"></p>
<p><img src="./1729331052131.png" alt="Alt text"></p>
<p>可以收发邮件了</p>
<p><img src="./1729331072786.png" alt="Alt text"></p>
<p><img src="./1729331093997.png" alt="Alt text"></p>
]]></content>
      <categories>
        <category>Cisco Packet Tracer</category>
        <category>思科模拟器</category>
      </categories>
      <tags>
        <tag>网络技术</tag>
      </tags>
  </entry>
  <entry>
    <title>Hadoop 高可用集群部署</title>
    <url>/2024/06/15/Hadoop%20%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2/</url>
    <content><![CDATA[<p>使用 VMware Workstation + centos 实现 hadoop 的高可用集群部署。</p>
<span id="more"></span>

<h4 id="设计思路"><a href="#设计思路" class="headerlink" title="设计思路"></a>设计思路</h4><table>
<thead>
<tr>
<th align="center">hadoop112</th>
<th align="center">hadoop113</th>
<th align="center">hadoop114</th>
</tr>
</thead>
<tbody><tr>
<td align="center">NameNode</td>
<td align="center">NameNode</td>
<td align="center">NameNode</td>
</tr>
<tr>
<td align="center">ZKFC</td>
<td align="center">ZKFC</td>
<td align="center">ZKFC</td>
</tr>
<tr>
<td align="center">JournalNode</td>
<td align="center">JournalNode</td>
<td align="center">JournalNode</td>
</tr>
<tr>
<td align="center">ZK</td>
<td align="center">ZK</td>
<td align="center">ZK</td>
</tr>
<tr>
<td align="center">ResourceManager</td>
<td align="center">ResourceManager</td>
<td align="center">ResourceManager</td>
</tr>
<tr>
<td align="center">NodeManager</td>
<td align="center">NodeManager</td>
<td align="center">NodeManager</td>
</tr>
</tbody></table>
<h4 id="服务器配置"><a href="#服务器配置" class="headerlink" title="服务器配置"></a>服务器配置</h4><p>这里我直接克隆伪分布式的 hadoop111，参照之前的博客再部署一遍也行</p>
<p>修改静态IP</p>
<p>vim /etc/sysconfig/network-scripts/ifcfg-ens33 </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">TYPE&#x3D;&quot;Ethernet&quot;</span><br><span class="line">PROXY_METHOD&#x3D;&quot;none&quot;</span><br><span class="line">BROWSER_ONLY&#x3D;&quot;no&quot;</span><br><span class="line">BOOTPROTO&#x3D;&quot;static&quot;</span><br><span class="line">DEFROUTE&#x3D;&quot;yes&quot;</span><br><span class="line">IPV4_FAILURE_FATAL&#x3D;&quot;no&quot;</span><br><span class="line">IPV6INIT&#x3D;&quot;yes&quot;</span><br><span class="line">IPV6_AUTOCONF&#x3D;&quot;yes&quot;</span><br><span class="line">IPV6_DEFROUTE&#x3D;&quot;yes&quot;</span><br><span class="line">IPV6_FAILURE_FATAL&#x3D;&quot;no&quot;</span><br><span class="line">IPV6_ADDR_GEN_MODE&#x3D;&quot;stable-privacy&quot;</span><br><span class="line">NAME&#x3D;&quot;ens33&quot;</span><br><span class="line">UUID&#x3D;&quot;cafa4500-048b-41a3-a880-0ea13ff55b07&quot;</span><br><span class="line">DEVICE&#x3D;&quot;ens33&quot;</span><br><span class="line">ONBOOT&#x3D;&quot;yes&quot;</span><br><span class="line">IPADDR&#x3D;192.168.64.112</span><br><span class="line">NETMASK&#x3D;255.255.255.0</span><br><span class="line">GATEWAY&#x3D;192.168.64.2</span><br><span class="line">DNS1&#x3D;192.168.64.2</span><br></pre></td></tr></table></figure>

<p><img src="./1718428891583.png" alt="Alt text"></p>
<p>vim /etc/hostname</p>
<p><img src="./1718428918795.png" alt="Alt text"></p>
<p>vim /etc/hosts</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">192.168.64.111 hadoop111</span><br><span class="line">192.168.64.112 hadoop112</span><br><span class="line">192.168.64.113 hadoop113</span><br><span class="line">192.168.64.114 hadoop114</span><br></pre></td></tr></table></figure>

<h4 id="安装-zookeeper"><a href="#安装-zookeeper" class="headerlink" title="安装 zookeeper"></a>安装 zookeeper</h4><p>使用 scp 把 apache-zookeeper-3.5.7-bin.tar.gz 传入 devops</p>
<p>tar -zxvf apache-zookeeper-3.5.7-bin.tar.gz
cd /devops/apache-zookeeper-3.5.7-bin
mkdir -p zkData
cd /devops/apache-zookeeper-3.5.7-bin/conf
cp zoo_sample.cfg zoo.cfg
vim zoo.cfg</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">dataDir&#x3D;&#x2F;devops&#x2F;apache-zookeeper-3.5.7-bin&#x2F;zkData</span><br><span class="line"></span><br><span class="line">#######################cluster##########################</span><br><span class="line">server.2&#x3D;hadoop112:2888:3888</span><br><span class="line">server.3&#x3D;hadoop113:2888:3888</span><br><span class="line">server.4&#x3D;hadoop114:2888:3888</span><br></pre></td></tr></table></figure>

<p>cd /devops/apache-zookeeper-3.5.7-bin/zkData
touch myid
注：由于我当前处于 hadoop112 服务器，所以 myid 里面写入2，如果是 hadoop113、hadoop114则对应地写入3、4
vim myid</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure>

<p>sudo vim /etc/profile.d/my_env.sh</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">export ZOOKEEPER_HOME&#x3D;&#x2F;devops&#x2F;apache-zookeeper-3.5.7-bin</span><br><span class="line">export PATH&#x3D;$ZOOKEEPER_HOME&#x2F;bin:$PATH</span><br></pre></td></tr></table></figure>

<p>source /etc/profile</p>
<h4 id="hadoop-配置"><a href="#hadoop-配置" class="headerlink" title="hadoop 配置"></a>hadoop 配置</h4><p>sudo chown -R hadoop:hadoop /devops</p>
<p>vim /devops/hadoop-3.1.3/etc/hadoop/core-site.xml</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;configuration&gt;</span><br><span class="line">	&lt;!-- 把多个NameNode的地址组装成一个集群mycluster --&gt;</span><br><span class="line">	&lt;property&gt;</span><br><span class="line">	  &lt;name&gt;fs.defaultFS&lt;&#x2F;name&gt;</span><br><span class="line">	  &lt;value&gt;hdfs:&#x2F;&#x2F;mycluster&lt;&#x2F;value&gt;</span><br><span class="line">	&lt;&#x2F;property&gt;</span><br><span class="line"></span><br><span class="line">	&lt;!-- 指定hadoop数据的存储目录 --&gt;</span><br><span class="line">	&lt;property&gt;</span><br><span class="line">		&lt;name&gt;hadoop.tmp.dir&lt;&#x2F;name&gt;</span><br><span class="line">		&lt;value&gt;&#x2F;devops&#x2F;hadoop-3.1.3&#x2F;data&lt;&#x2F;value&gt;</span><br><span class="line">	&lt;&#x2F;property&gt;</span><br><span class="line"></span><br><span class="line">	&lt;!-- 配置HDFS网页登录使用的静态用户为hadoop --&gt;</span><br><span class="line">	&lt;property&gt;</span><br><span class="line">		&lt;name&gt;hadoop.http.staticuser.user&lt;&#x2F;name&gt;</span><br><span class="line">		&lt;value&gt;hadoop&lt;&#x2F;value&gt;</span><br><span class="line">	&lt;&#x2F;property&gt;</span><br><span class="line"></span><br><span class="line">	&lt;!-- 配置该hadoop(superUser)允许通过代理访问的主机节点 --&gt;</span><br><span class="line">	&lt;property&gt;</span><br><span class="line">		&lt;name&gt;hadoop.proxyuser.hadoop.hosts&lt;&#x2F;name&gt;</span><br><span class="line">		&lt;value&gt;*&lt;&#x2F;value&gt;</span><br><span class="line">	&lt;&#x2F;property&gt;</span><br><span class="line">	&lt;!-- 配置该hadoop(superUser)允许通过代理用户所属组 --&gt;</span><br><span class="line">	&lt;property&gt;</span><br><span class="line">		&lt;name&gt;hadoop.proxyuser.hadoop.groups&lt;&#x2F;name&gt;</span><br><span class="line">		&lt;value&gt;*&lt;&#x2F;value&gt;</span><br><span class="line">	&lt;&#x2F;property&gt;</span><br><span class="line">	&lt;!-- 配置该hadoop(superUser)允许通过代理的用户--&gt;</span><br><span class="line">	&lt;property&gt;</span><br><span class="line">		&lt;name&gt;hadoop.proxyuser.hadoop.groups&lt;&#x2F;name&gt;</span><br><span class="line">		&lt;value&gt;*&lt;&#x2F;value&gt;</span><br><span class="line">	&lt;&#x2F;property&gt;</span><br><span class="line">	&lt;property&gt;</span><br><span class="line">	    &lt;name&gt;ha.zookeeper.quorum&lt;&#x2F;name&gt;</span><br><span class="line">	    &lt;value&gt;hadoop112:2181,hadoop113:2181,hadoop114:2181&lt;&#x2F;value&gt;</span><br><span class="line">    &lt;&#x2F;property&gt;</span><br><span class="line">&lt;&#x2F;configuration&gt;</span><br></pre></td></tr></table></figure>

<p>vim /devops/hadoop-3.1.3/etc/hadoop/hdfs-site.xml</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;configuration&gt;</span><br><span class="line">	&lt;!-- NameNode数据存储目录 --&gt;</span><br><span class="line">	&lt;property&gt;</span><br><span class="line">		&lt;name&gt;dfs.namenode.name.dir&lt;&#x2F;name&gt;</span><br><span class="line">		&lt;value&gt;file:&#x2F;&#x2F;$&#123;hadoop.tmp.dir&#125;&#x2F;name&lt;&#x2F;value&gt;</span><br><span class="line">	&lt;&#x2F;property&gt;</span><br><span class="line">	&lt;!-- DataNode数据存储目录 --&gt;</span><br><span class="line">	&lt;property&gt;</span><br><span class="line">		&lt;name&gt;dfs.datanode.data.dir&lt;&#x2F;name&gt;</span><br><span class="line">		&lt;value&gt;file:&#x2F;&#x2F;$&#123;hadoop.tmp.dir&#125;&#x2F;data&lt;&#x2F;value&gt;</span><br><span class="line">	&lt;&#x2F;property&gt;</span><br><span class="line">	&lt;!-- JournalNode数据存储目录 --&gt;</span><br><span class="line">	&lt;property&gt;</span><br><span class="line">		&lt;name&gt;dfs.journalnode.edits.dir&lt;&#x2F;name&gt;</span><br><span class="line">		&lt;value&gt;$&#123;hadoop.tmp.dir&#125;&#x2F;jn&lt;&#x2F;value&gt;</span><br><span class="line">	&lt;&#x2F;property&gt;</span><br><span class="line">	&lt;!-- 完全分布式集群名称 --&gt;</span><br><span class="line">	&lt;property&gt;</span><br><span class="line">		&lt;name&gt;dfs.nameservices&lt;&#x2F;name&gt;</span><br><span class="line">		&lt;value&gt;mycluster&lt;&#x2F;value&gt;</span><br><span class="line">	&lt;&#x2F;property&gt;</span><br><span class="line">	&lt;!-- 集群中NameNode节点都有哪些 --&gt;</span><br><span class="line">	&lt;property&gt;</span><br><span class="line">		&lt;name&gt;dfs.ha.namenodes.mycluster&lt;&#x2F;name&gt;</span><br><span class="line">		&lt;value&gt;nn1,nn2,nn3&lt;&#x2F;value&gt;</span><br><span class="line">	&lt;&#x2F;property&gt;</span><br><span class="line">	&lt;!-- NameNode的RPC通信地址 --&gt;</span><br><span class="line">	&lt;property&gt;</span><br><span class="line">		&lt;name&gt;dfs.namenode.rpc-address.mycluster.nn1&lt;&#x2F;name&gt;</span><br><span class="line">		&lt;value&gt;hadoop112:8020&lt;&#x2F;value&gt;</span><br><span class="line">	&lt;&#x2F;property&gt;</span><br><span class="line">	&lt;property&gt;</span><br><span class="line">		&lt;name&gt;dfs.namenode.rpc-address.mycluster.nn2&lt;&#x2F;name&gt;</span><br><span class="line">		&lt;value&gt;hadoop113:8020&lt;&#x2F;value&gt;</span><br><span class="line">	&lt;&#x2F;property&gt;</span><br><span class="line">	&lt;property&gt;</span><br><span class="line">		&lt;name&gt;dfs.namenode.rpc-address.mycluster.nn3&lt;&#x2F;name&gt;</span><br><span class="line">		&lt;value&gt;hadoop114:8020&lt;&#x2F;value&gt;</span><br><span class="line">	&lt;&#x2F;property&gt;</span><br><span class="line">	&lt;!-- NameNode的http通信地址 --&gt;</span><br><span class="line">	&lt;property&gt;</span><br><span class="line">		&lt;name&gt;dfs.namenode.http-address.mycluster.nn1&lt;&#x2F;name&gt;</span><br><span class="line">		&lt;value&gt;hadoop112:9870&lt;&#x2F;value&gt;</span><br><span class="line">	&lt;&#x2F;property&gt;</span><br><span class="line">	&lt;property&gt;</span><br><span class="line">		&lt;name&gt;dfs.namenode.http-address.mycluster.nn2&lt;&#x2F;name&gt;</span><br><span class="line">		&lt;value&gt;hadoop113:9870&lt;&#x2F;value&gt;</span><br><span class="line">	&lt;&#x2F;property&gt;</span><br><span class="line">	&lt;property&gt;</span><br><span class="line">		&lt;name&gt;dfs.namenode.http-address.mycluster.nn3&lt;&#x2F;name&gt;</span><br><span class="line">		&lt;value&gt;hadoop114:9870&lt;&#x2F;value&gt;</span><br><span class="line">	&lt;&#x2F;property&gt;</span><br><span class="line">	&lt;!-- 指定NameNode元数据在JournalNode上的存放位置 --&gt;</span><br><span class="line">	&lt;property&gt;</span><br><span class="line">		&lt;name&gt;dfs.namenode.shared.edits.dir&lt;&#x2F;name&gt;</span><br><span class="line">		&lt;value&gt;qjournal:&#x2F;&#x2F;hadoop112:8485;hadoop113:8485;hadoop114:8485&#x2F;mycluster&lt;&#x2F;value&gt;</span><br><span class="line">	&lt;&#x2F;property&gt;</span><br><span class="line">	&lt;!-- 访问代理类：client用于确定哪个NameNode为Active --&gt;</span><br><span class="line">	&lt;property&gt;</span><br><span class="line">		&lt;name&gt;dfs.client.failover.proxy.provider.mycluster&lt;&#x2F;name&gt;</span><br><span class="line">		&lt;value&gt;org.apache.hadoop.hdfs.server.namenode.ha.ConfiguredFailoverProxyProvider&lt;&#x2F;value&gt;</span><br><span class="line">	&lt;&#x2F;property&gt;</span><br><span class="line">	&lt;!-- 配置隔离机制，即同一时刻只能有一台服务器对外响应 --&gt;</span><br><span class="line">	&lt;property&gt;</span><br><span class="line">		&lt;name&gt;dfs.ha.fencing.methods&lt;&#x2F;name&gt;</span><br><span class="line">		&lt;value&gt;sshfence&lt;&#x2F;value&gt;</span><br><span class="line">	&lt;&#x2F;property&gt;</span><br><span class="line">	&lt;!-- 使用隔离机制时需要ssh秘钥登录--&gt;</span><br><span class="line">	&lt;property&gt;</span><br><span class="line">		&lt;name&gt;dfs.ha.fencing.ssh.private-key-files&lt;&#x2F;name&gt;</span><br><span class="line">		&lt;value&gt;&#x2F;home&#x2F;hadoop&#x2F;.ssh&#x2F;id_rsa&lt;&#x2F;value&gt;</span><br><span class="line">	&lt;&#x2F;property&gt;</span><br><span class="line">	&lt;!-- 启用nn故障自动转移 --&gt;</span><br><span class="line">	&lt;property&gt;</span><br><span class="line">		&lt;name&gt;dfs.ha.automatic-failover.enabled&lt;&#x2F;name&gt;</span><br><span class="line">		&lt;value&gt;true&lt;&#x2F;value&gt;</span><br><span class="line">	&lt;&#x2F;property&gt;</span><br><span class="line">&lt;&#x2F;configuration&gt;</span><br></pre></td></tr></table></figure>

<p>vim /devops/hadoop-3.1.3/etc/hadoop/yarn-site.xml</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;configuration&gt;</span><br><span class="line">	&lt;!-- 指定MR走shuffle --&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;yarn.nodemanager.aux-services&lt;&#x2F;name&gt;</span><br><span class="line">        &lt;value&gt;mapreduce_shuffle&lt;&#x2F;value&gt;</span><br><span class="line">	&lt;&#x2F;property&gt;</span><br><span class="line">	&lt;!-- 环境变量的继承 --&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;yarn.nodemanager.env-whitelist&lt;&#x2F;name&gt;</span><br><span class="line">        &lt;value&gt;JAVA_HOME,HADOOP_COMMON_HOME,HADOOP_HDFS_HOME,HADOOP_CONF_DIR,CLASSPATH_PREPEND_DISTCACHE,HADOOP_YARN_HOME,HADOOP_MAPRED_HOME&lt;&#x2F;value&gt;</span><br><span class="line">	&lt;&#x2F;property&gt;</span><br><span class="line">	&lt;!-- yarn容器允许分配的最大最小内存 --&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;yarn.scheduler.minimum-allocation-mb&lt;&#x2F;name&gt;</span><br><span class="line">        &lt;value&gt;512&lt;&#x2F;value&gt;</span><br><span class="line">    &lt;&#x2F;property&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;yarn.scheduler.maximum-allocation-mb&lt;&#x2F;name&gt;</span><br><span class="line">        &lt;value&gt;4096&lt;&#x2F;value&gt;</span><br><span class="line">	&lt;&#x2F;property&gt;</span><br><span class="line">	&lt;!-- yarn容器允许管理的物理内存大小 --&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;yarn.nodemanager.resource.memory-mb&lt;&#x2F;name&gt;</span><br><span class="line">        &lt;value&gt;4096&lt;&#x2F;value&gt;</span><br><span class="line">	&lt;&#x2F;property&gt;</span><br><span class="line">	&lt;!-- 关闭yarn对物理内存和虚拟内存的限制检查 --&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;yarn.nodemanager.pmem-check-enabled&lt;&#x2F;name&gt;</span><br><span class="line">        &lt;value&gt;false&lt;&#x2F;value&gt;</span><br><span class="line">    &lt;&#x2F;property&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;yarn.nodemanager.vmem-check-enabled&lt;&#x2F;name&gt;</span><br><span class="line">        &lt;value&gt;false&lt;&#x2F;value&gt;</span><br><span class="line">    &lt;&#x2F;property&gt;</span><br><span class="line">	&lt;!-- 开启日志聚集功能 --&gt;</span><br><span class="line">	&lt;property&gt;</span><br><span class="line">		&lt;name&gt;yarn.log-aggregation-enable&lt;&#x2F;name&gt;</span><br><span class="line">		&lt;value&gt;true&lt;&#x2F;value&gt;</span><br><span class="line">	&lt;&#x2F;property&gt;</span><br><span class="line">	&lt;!-- 设置日志聚集服务器地址 --&gt;</span><br><span class="line">	&lt;property&gt;  </span><br><span class="line">		&lt;name&gt;yarn.log.server.url&lt;&#x2F;name&gt;  </span><br><span class="line">		&lt;value&gt;http:&#x2F;&#x2F;hadoop112:19888&#x2F;jobhistory&#x2F;logs&lt;&#x2F;value&gt;</span><br><span class="line">	&lt;&#x2F;property&gt;</span><br><span class="line">	&lt;!-- 设置日志保留时间为7天 --&gt;</span><br><span class="line">	&lt;property&gt;</span><br><span class="line">		&lt;name&gt;yarn.log-aggregation.retain-seconds&lt;&#x2F;name&gt;</span><br><span class="line">		&lt;value&gt;604800&lt;&#x2F;value&gt;</span><br><span class="line">	&lt;&#x2F;property&gt;</span><br><span class="line">	&lt;!-- 启用resourcemanager ha --&gt;</span><br><span class="line">	&lt;property&gt;</span><br><span class="line">		&lt;name&gt;yarn.resourcemanager.ha.enabled&lt;&#x2F;name&gt;</span><br><span class="line">		&lt;value&gt;true&lt;&#x2F;value&gt;</span><br><span class="line">	&lt;&#x2F;property&gt;</span><br><span class="line"> </span><br><span class="line">	&lt;!-- 声明三台resourcemanager的地址 --&gt;</span><br><span class="line">	&lt;property&gt;</span><br><span class="line">		&lt;name&gt;yarn.resourcemanager.cluster-id&lt;&#x2F;name&gt;</span><br><span class="line">		&lt;value&gt;cluster-yarn1&lt;&#x2F;value&gt;</span><br><span class="line">	&lt;&#x2F;property&gt;</span><br><span class="line">	&lt;!--指定resourcemanager的逻辑列表--&gt;</span><br><span class="line">	&lt;property&gt;</span><br><span class="line">		&lt;name&gt;yarn.resourcemanager.ha.rm-ids&lt;&#x2F;name&gt;</span><br><span class="line">		&lt;value&gt;rm1,rm2,rm3&lt;&#x2F;value&gt;</span><br><span class="line">	&lt;&#x2F;property&gt;</span><br><span class="line">	</span><br><span class="line">	&lt;!-- &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; rm1的配置 &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; --&gt;</span><br><span class="line">	&lt;!-- 指定rm1的主机名 --&gt;</span><br><span class="line">	&lt;property&gt;</span><br><span class="line">		&lt;name&gt;yarn.resourcemanager.hostname.rm1&lt;&#x2F;name&gt;</span><br><span class="line">		&lt;value&gt;hadoop112&lt;&#x2F;value&gt;</span><br><span class="line">	&lt;&#x2F;property&gt;</span><br><span class="line">	&lt;!-- 指定rm1的web端地址 --&gt;</span><br><span class="line">	&lt;property&gt;</span><br><span class="line">		&lt;name&gt;yarn.resourcemanager.webapp.address.rm1&lt;&#x2F;name&gt;</span><br><span class="line">		&lt;value&gt;hadoop112:8088&lt;&#x2F;value&gt;</span><br><span class="line">	&lt;&#x2F;property&gt;</span><br><span class="line">	&lt;!-- 指定rm1的内部通信地址 --&gt;</span><br><span class="line">	&lt;property&gt;</span><br><span class="line">		&lt;name&gt;yarn.resourcemanager.address.rm1&lt;&#x2F;name&gt;</span><br><span class="line">		&lt;value&gt;hadoop112:8032&lt;&#x2F;value&gt;</span><br><span class="line">	&lt;&#x2F;property&gt;</span><br><span class="line">	&lt;!-- 指定AM向rm1申请资源的地址 --&gt;</span><br><span class="line">	&lt;property&gt;</span><br><span class="line">		&lt;name&gt;yarn.resourcemanager.scheduler.address.rm1&lt;&#x2F;name&gt;  </span><br><span class="line">		&lt;value&gt;hadoop112:8030&lt;&#x2F;value&gt;</span><br><span class="line">	&lt;&#x2F;property&gt;</span><br><span class="line">	&lt;!-- 指定供NM连接的地址 --&gt;  </span><br><span class="line">	&lt;property&gt;</span><br><span class="line">		&lt;name&gt;yarn.resourcemanager.resource-tracker.address.rm1&lt;&#x2F;name&gt;</span><br><span class="line">		&lt;value&gt;hadoop112:8031&lt;&#x2F;value&gt;</span><br><span class="line">	&lt;&#x2F;property&gt;</span><br><span class="line">	</span><br><span class="line">	&lt;!-- &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; rm2的配置 &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; --&gt;</span><br><span class="line">	&lt;!-- 指定rm2的主机名 --&gt;</span><br><span class="line">	&lt;property&gt;</span><br><span class="line">		&lt;name&gt;yarn.resourcemanager.hostname.rm2&lt;&#x2F;name&gt;</span><br><span class="line">		&lt;value&gt;hadoop113&lt;&#x2F;value&gt;</span><br><span class="line">	&lt;&#x2F;property&gt;</span><br><span class="line">	&lt;property&gt;</span><br><span class="line">		&lt;name&gt;yarn.resourcemanager.webapp.address.rm2&lt;&#x2F;name&gt;</span><br><span class="line">		&lt;value&gt;hadoop113:8088&lt;&#x2F;value&gt;</span><br><span class="line">	&lt;&#x2F;property&gt;</span><br><span class="line">	&lt;property&gt;</span><br><span class="line">		&lt;name&gt;yarn.resourcemanager.address.rm2&lt;&#x2F;name&gt;</span><br><span class="line">		&lt;value&gt;hadoop113:8032&lt;&#x2F;value&gt;</span><br><span class="line">	&lt;&#x2F;property&gt;</span><br><span class="line">	&lt;property&gt;</span><br><span class="line">		&lt;name&gt;yarn.resourcemanager.scheduler.address.rm2&lt;&#x2F;name&gt;</span><br><span class="line">		&lt;value&gt;hadoop113:8030&lt;&#x2F;value&gt;</span><br><span class="line">	&lt;&#x2F;property&gt;</span><br><span class="line">	&lt;property&gt;</span><br><span class="line">		&lt;name&gt;yarn.resourcemanager.resource-tracker.address.rm2&lt;&#x2F;name&gt;</span><br><span class="line">		&lt;value&gt;hadoop113:8031&lt;&#x2F;value&gt;</span><br><span class="line">	&lt;&#x2F;property&gt;</span><br><span class="line">	</span><br><span class="line">	&lt;!-- &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; rm3的配置 &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; --&gt;</span><br><span class="line">	&lt;!-- 指定rm3的主机名 --&gt;</span><br><span class="line">	&lt;property&gt;</span><br><span class="line">		&lt;name&gt;yarn.resourcemanager.hostname.rm3&lt;&#x2F;name&gt;</span><br><span class="line">		&lt;value&gt;hadoop114&lt;&#x2F;value&gt;</span><br><span class="line">	&lt;&#x2F;property&gt;</span><br><span class="line">	&lt;property&gt;</span><br><span class="line">		&lt;name&gt;yarn.resourcemanager.webapp.address.rm3&lt;&#x2F;name&gt;</span><br><span class="line">		&lt;value&gt;hadoop114:8088&lt;&#x2F;value&gt;</span><br><span class="line">	&lt;&#x2F;property&gt;</span><br><span class="line">	&lt;property&gt;</span><br><span class="line">		&lt;name&gt;yarn.resourcemanager.address.rm3&lt;&#x2F;name&gt;</span><br><span class="line">		&lt;value&gt;hadoop114:8032&lt;&#x2F;value&gt;</span><br><span class="line">	&lt;&#x2F;property&gt;</span><br><span class="line">	&lt;property&gt;</span><br><span class="line">		&lt;name&gt;yarn.resourcemanager.scheduler.address.rm3&lt;&#x2F;name&gt;</span><br><span class="line">		&lt;value&gt;hadoop114:8030&lt;&#x2F;value&gt;</span><br><span class="line">	&lt;&#x2F;property&gt;</span><br><span class="line">	&lt;property&gt;</span><br><span class="line">		&lt;name&gt;yarn.resourcemanager.resource-tracker.address.rm3&lt;&#x2F;name&gt;</span><br><span class="line">		&lt;value&gt;hadoop114:8031&lt;&#x2F;value&gt;</span><br><span class="line">	&lt;&#x2F;property&gt;</span><br><span class="line"> </span><br><span class="line">	&lt;!-- 指定zookeeper集群的地址 --&gt; </span><br><span class="line">	&lt;property&gt;</span><br><span class="line">		&lt;name&gt;yarn.resourcemanager.zk-address&lt;&#x2F;name&gt;</span><br><span class="line">		&lt;value&gt;hadoop112:2181,hadoop113:2181,hadoop114:2181&lt;&#x2F;value&gt;</span><br><span class="line">	&lt;&#x2F;property&gt;</span><br><span class="line"></span><br><span class="line">	&lt;!-- 启用自动恢复 --&gt; </span><br><span class="line">	&lt;property&gt;</span><br><span class="line">		&lt;name&gt;yarn.resourcemanager.recovery.enabled&lt;&#x2F;name&gt;</span><br><span class="line">		&lt;value&gt;true&lt;&#x2F;value&gt;</span><br><span class="line">	&lt;&#x2F;property&gt;</span><br><span class="line"> </span><br><span class="line">	&lt;!-- 指定resourcemanager的状态信息存储在zookeeper集群 --&gt; </span><br><span class="line">	&lt;property&gt;</span><br><span class="line">		&lt;name&gt;yarn.resourcemanager.store.class&lt;&#x2F;name&gt;     </span><br><span class="line">		&lt;value&gt;org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore&lt;&#x2F;value&gt;</span><br><span class="line">	&lt;&#x2F;property&gt;</span><br><span class="line">&lt;&#x2F;configuration&gt;</span><br></pre></td></tr></table></figure>

<p>sudo vim /etc/hosts</p>
<p><img src="./1718431884428.png" alt="Alt text"></p>
<h4 id="克隆-hadoop112"><a href="#克隆-hadoop112" class="headerlink" title="克隆 hadoop112"></a>克隆 hadoop112</h4><p>创建 hadoop112 的完整克隆 hadoop113、hadoop114，并配置其 ip 、 hostname</p>
<p><img src="./1718456007172.png" alt="Alt text"></p>
<p><img src="./1718456021364.png" alt="Alt text"></p>
<p><img src="./1718456042789.png" alt="Alt text"></p>
<p><img src="./1718456055885.png" alt="Alt text"></p>
<p>配置各自 zookeeper 的 myid</p>
<p><img src="./1718456184522.png" alt="Alt text"></p>
<p><img src="./1718456199236.png" alt="Alt text"></p>
<p>在 hadoop112、hadoop113、hadoop114 上执行</p>
<p>ssh-copy-id hadoop112
ssh-copy-id hadoop113
ssh-copy-id hadoop114</p>
<h4 id="不使用克隆-hadoop112"><a href="#不使用克隆-hadoop112" class="headerlink" title="不使用克隆 hadoop112"></a>不使用克隆 hadoop112</h4><p>可以创建新的 centos 系统挑战自己，注意使用 scp 传输相应的各文件和配置</p>
<p>scp 例子</p>
<p>scp -r /devops/apache-zookeeper-3.5.7-bin  hadoop@hadoop113:/devops
scp -r /devops/apache-zookeeper-3.5.7-bin  hadoop@hadoop114:/devops</p>
<h4 id="启动-hadoop-高可用集群"><a href="#启动-hadoop-高可用集群" class="headerlink" title="启动 hadoop 高可用集群"></a>启动 hadoop 高可用集群</h4><p>在 hadoop112、hadoop113、hadoop114 上执行
zkServer.sh start</p>
<p>在 hadoop112、hadoop113、hadoop114 上执行
cd /devops/hadoop-3.1.3
rm -rf data/ logs/
hdfs –daemon start journalnode</p>
<p>在 hadoop112上执行
hdfs namenode -format
hdfs –daemon start namenode</p>
<p>在 hadoop113、hadoop114上执行
hdfs namenode -bootstrapStandby</p>
<p>在 hadoop112上执行
stop-all.sh
hdfs zkfc -formatZK</p>
<p>再启动
start-all.sh </p>
<p><img src="./1718464965552.png" alt="Alt text"></p>
<p><img src="./1718464978165.png" alt="Alt text"></p>
<p><img src="./1718464991437.png" alt="Alt text"></p>
<p><img src="./1718465001342.png" alt="Alt text"></p>
<p>注意配置本地的 hosts 文件，才能使用 hadoop112、hadoop113、hadoop114 域名访问 web</p>
<p><img src="./1718465071087.png" alt="Alt text"></p>
<p><img src="./1718465032032.png" alt="Alt text"></p>
<p><img src="./1718465124105.png" alt="Alt text"></p>
<p><img src="./1718465131464.png" alt="Alt text"></p>
<p><img src="./1718465139826.png" alt="Alt text"></p>
]]></content>
      <categories>
        <category>Hadoop</category>
      </categories>
      <tags>
        <tag>其他</tag>
      </tags>
  </entry>
  <entry>
    <title>IDEA Git 提交 403 Error Code</title>
    <url>/2017/06/05/IDEA%20Git%20%E6%8F%90%E4%BA%A4%20403%20Error%20Code/</url>
    <content><![CDATA[<p>今天楼主使用 idea 的 git 插件往 github 提交代码的时候出现了如下报错</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Failed with error: unable to access XXXXX. The requested URL returned error: <span class="number">403</span></span><br></pre></td></tr></table></figure>
<p>特此记录，以便下次遇到相同问题时翻阅！</p>
<span id="more"></span>

<h4 id="Step-1："><a href="#Step-1：" class="headerlink" title="Step 1："></a>Step 1：</h4><ul>
<li>打开 C:\Users&quot;username”.ssh 目录下的 config 文件，楼主这里是 C:\Users\hasee.ssh.config</li>
</ul>
<p><img src="./1496671206715.png" alt="Alt text"></p>
<ul>
<li>选择你需要用来提交的 host 记为 “host_name”，楼主这里选择 knight-jxnu，如果一台电脑上配置了多个 github 就会有多个 host</li>
</ul>
<p><img src="./1496671229509.png" alt="Alt text"></p>
<h4 id="Step-2："><a href="#Step-2：" class="headerlink" title="Step 2："></a>Step 2：</h4><p>打开 project.git\config</p>
<p><img src="./1496671104200.png" alt="Alt text"></p>
<p>在 “github.com” 前面加上 “host_name”</p>
<p><strong>Before：</strong></p>
<p><img src="./1496671406198.png" alt="Alt text"></p>
<p><strong>After：</strong></p>
<p><img src="./1496671526671.png" alt="Alt text"></p>
<h4 id="Step-3："><a href="#Step-3：" class="headerlink" title="Step 3："></a>Step 3：</h4><p>继续 push !</p>
]]></content>
      <categories>
        <category>开发</category>
      </categories>
      <tags>
        <tag>其他</tag>
      </tags>
  </entry>
  <entry>
    <title>JCF</title>
    <url>/2017/04/13/JCF/</url>
    <content><![CDATA[<p>JCF 即 java collections framework，有 Collection 和 Map 两个接口，下面来谈谈我学习的 JCF 的学习历程和看法。</p>
<span id="more"></span>

<h4 id="Map"><a href="#Map" class="headerlink" title="Map"></a>Map</h4><h5 id="如何做到key唯一不重复的-每次都循环拿key-equals"><a href="#如何做到key唯一不重复的-每次都循环拿key-equals" class="headerlink" title="如何做到key唯一不重复的?每次都循环拿key equals?"></a>如何做到key唯一不重复的?每次都循环拿key equals?</h5><p>JDK 1.7 HashMap put 源码分析</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> V <span class="title">put</span><span class="params">(K key, V value)</span> </span>&#123;</span><br><span class="line">	<span class="comment">//从头开始找，找到 key 为 null 的 entity，将其 value 替换为传入的 value</span></span><br><span class="line">    <span class="keyword">if</span> (key == <span class="keyword">null</span>)</span><br><span class="line">        <span class="keyword">return</span> putForNullKey(value);  </span><br><span class="line">    <span class="comment">//由 key 计算 hash 值</span></span><br><span class="line">    <span class="keyword">int</span> hash = hash(key);   </span><br><span class="line">    <span class="comment">//由 hash 值和 Entity 数组长度计算存放这一对key-value的位置</span></span><br><span class="line">    <span class="keyword">int</span> i = indexFor(hash, table.length);  </span><br><span class="line">    <span class="comment">//从计算的位置开始遍历，中途没有跳出，就会一直遍历到 Entity 数组末尾</span></span><br><span class="line">    <span class="keyword">for</span> (Entry&lt;K,V&gt; e = table[i]; e != <span class="keyword">null</span>; e = e.next) &#123;  </span><br><span class="line">	    <span class="comment">//临时存放当前 entity 的 key</span></span><br><span class="line">        Object k;  </span><br><span class="line">        <span class="comment">//如果当前 entity 的 hash 值与传入 key 计算的 hash 值相等，且 (key 的地址相等 或 两个 key eq)，</span></span><br><span class="line">        <span class="comment">//使用 传入的 value 替换当前 entity value，并返回旧的 value 值</span></span><br><span class="line">        <span class="keyword">if</span> (e.hash == hash &amp;&amp; ((k = e.key) == key || key.equals(k))) &#123;  </span><br><span class="line">            V oldValue = e.value;</span><br><span class="line">            e.value = value;</span><br><span class="line">            e.recordAccess(<span class="keyword">this</span>);</span><br><span class="line">            <span class="keyword">return</span> oldValue;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//用于 fast-fail ，通过 modCount 值是否和预期相等来判断是否线程安全</span></span><br><span class="line">    modCount++;  </span><br><span class="line">    <span class="comment">//如果在 HashMap 的 Entity 数组中没有找到传入的 key，新增一个 Entity</span></span><br><span class="line">    addEntry(hash, key, value, i);  </span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>简单的流程图：</p>
<p><img src="./1492097131823.png" alt="Alt text"></p>
<p>结论：</p>
<ul>
<li>如果传入相同的key，value值会被替换成新的</li>
<li>每次都是从计算得到的索引往后找，判断table中是否有相同的key</li>
</ul>
<h4 id="List"><a href="#List" class="headerlink" title="List"></a>List</h4><h5 id="ArrayList-长度探究"><a href="#ArrayList-长度探究" class="headerlink" title="ArrayList 长度探究"></a>ArrayList 长度探究</h5><p>JDK 1.7 ArrayList 构造器源码分析</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Constructs an empty list with the specified initial capacity.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span>  initialCapacity  the initial capacity of the list</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> IllegalArgumentException if the specified initial capacity</span></span><br><span class="line"><span class="comment"> *         is negative</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">ArrayList</span><span class="params">(<span class="keyword">int</span> initialCapacity)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>();</span><br><span class="line">    <span class="comment">//如果传入的数组初始长度小于0，抛出异常</span></span><br><span class="line">    <span class="keyword">if</span> (initialCapacity &lt; <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">&quot;Illegal Capacity: &quot;</span>+</span><br><span class="line">                                           initialCapacity);</span><br><span class="line">    <span class="comment">//创建一个 Object数组 来存放元素</span></span><br><span class="line">    <span class="keyword">this</span>.elementData = <span class="keyword">new</span> Object[initialCapacity];  </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Constructs an empty list with an initial capacity of ten.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">ArrayList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="comment">//如果没有指定长度，默认是10</span></span><br><span class="line">    <span class="keyword">this</span>(<span class="number">10</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>JDK 1.7 ensureCapacity 源码分析，ensureCapacity 被用于改变 ArrayList 的数组长度
<strong>ArrayList.class</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Increases the capacity of this &lt;tt&gt;ArrayList&lt;/tt&gt; instance, if</span></span><br><span class="line"><span class="comment"> * necessary, to ensure that it can hold at least the number of elements</span></span><br><span class="line"><span class="comment"> * specified by the minimum capacity argument.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span>   minCapacity   the desired minimum capacity</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">//指定ArrayList长度的方法，实际上就是设置Object数组的长度</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ensureCapacity</span><span class="params">(<span class="keyword">int</span> minCapacity)</span> </span>&#123;</span><br><span class="line">	<span class="comment">//校验设置的长度是否大于0</span></span><br><span class="line">    <span class="keyword">if</span> (minCapacity &gt; <span class="number">0</span>)</span><br><span class="line">        ensureCapacityInternal(minCapacity);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">ensureCapacityInternal</span><span class="params">(<span class="keyword">int</span> minCapacity)</span> </span>&#123;</span><br><span class="line">	<span class="comment">//用于标示当前ArrayList长度是否改变，用于线程安全</span></span><br><span class="line">    modCount++;</span><br><span class="line">    <span class="comment">// overflow-conscious code</span></span><br><span class="line">    <span class="comment">//更改的长度必须比现有长度大</span></span><br><span class="line">    <span class="keyword">if</span> (minCapacity - elementData.length &gt; <span class="number">0</span>)</span><br><span class="line">        grow(minCapacity);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Increases the capacity to ensure that it can hold at least the</span></span><br><span class="line"><span class="comment"> * number of elements specified by the minimum capacity argument.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> minCapacity the desired minimum capacity</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">grow</span><span class="params">(<span class="keyword">int</span> minCapacity)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// overflow-conscious code</span></span><br><span class="line">    <span class="comment">//存储以前的长度</span></span><br><span class="line">    <span class="keyword">int</span> oldCapacity = elementData.length;</span><br><span class="line">    <span class="comment">//&quot;oldCapaticy&gt;&gt;1&quot;表示baseValue右移1位，即除以2</span></span><br><span class="line">    <span class="keyword">int</span> newCapacity = oldCapacity + (oldCapacity &gt;&gt; <span class="number">1</span>);  </span><br><span class="line">    <span class="comment">//如果 newCapacity 比设定长度小，把设定长度放入 newCapacity </span></span><br><span class="line">    <span class="keyword">if</span> (newCapacity - minCapacity &lt; <span class="number">0</span>)</span><br><span class="line">        newCapacity = minCapacity;</span><br><span class="line">    <span class="comment">//如果 newCapacity 比数组的最大值大</span></span><br><span class="line">    <span class="keyword">if</span> (newCapacity - MAX_ARRAY_SIZE &gt; <span class="number">0</span>)</span><br><span class="line">        newCapacity = hugeCapacity(minCapacity);</span><br><span class="line">    <span class="comment">// minCapacity is usually close to size, so this is a win:</span></span><br><span class="line">    <span class="comment">//如果 newCapacity&gt;minCapacity 且 newCapacity&lt;MAX_ARRAY_SIZE，</span></span><br><span class="line">    <span class="comment">//原来的数组数据拷贝到新数组，并设置新数组长度是 newCapacity</span></span><br><span class="line">    elementData = Arrays.copyOf(elementData, newCapacity);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* The maximum size of array to allocate.</span></span><br><span class="line"><span class="comment">* Some VMs reserve some header words in an array.</span></span><br><span class="line"><span class="comment">* Attempts to allocate larger arrays may result in</span></span><br><span class="line"><span class="comment">* OutOfMemoryError: Requested array size exceeds VM limit</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">//最大数组长度设置成 Integer 最大值减 8</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> MAX_ARRAY_SIZE = Integer.MAX_VALUE - <span class="number">8</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">hugeCapacity</span><span class="params">(<span class="keyword">int</span> minCapacity)</span> </span>&#123;</span><br><span class="line">	<span class="comment">//如果设置的值小于0，抛出异常</span></span><br><span class="line">    <span class="keyword">if</span> (minCapacity &lt; <span class="number">0</span>) <span class="comment">// overflow</span></span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> OutOfMemoryError();</span><br><span class="line">    <span class="comment">//如果设置值比数组最大长度长，返回 Integer 最大值；</span></span><br><span class="line">    <span class="comment">//否则，返回 数组最大值</span></span><br><span class="line">    <span class="keyword">return</span> (minCapacity &gt; MAX_ARRAY_SIZE) ?</span><br><span class="line">        Integer.MAX_VALUE :</span><br><span class="line">        MAX_ARRAY_SIZE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>Array.class</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; T[] copyOf(T[] original, <span class="keyword">int</span> newLength) &#123;</span><br><span class="line">	<span class="comment">//拷贝数组original到新数组，新数组长度是newLength</span></span><br><span class="line">    <span class="keyword">return</span> (T[]) copyOf(original, newLength, original.getClass());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> &lt;T,U&gt; T[] copyOf(U[] original, <span class="keyword">int</span> newLength, Class&lt;? extends T[]&gt; newType) &#123;</span><br><span class="line">	<span class="comment">//判断传入的newType是不是一个对象数组的类型</span></span><br><span class="line">	<span class="comment">//如果是，创建一个对象数组给 copy</span></span><br><span class="line">	<span class="comment">//如果不是，创建一个 newType 数组给 copy</span></span><br><span class="line">    T[] copy = ((Object)newType == (Object)Object[].class)</span><br><span class="line">        ? (T[]) <span class="keyword">new</span> Object[newLength]</span><br><span class="line">        : (T[]) Array.newInstance(newType.getComponentType(), newLength);</span><br><span class="line">    System.arraycopy(original, <span class="number">0</span>, copy, <span class="number">0</span>,</span><br><span class="line">                     Math.min(original.length, newLength));</span><br><span class="line">    <span class="keyword">return</span> copy;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//创建一个新的数组，元素类型是 componentType，长度是 length</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title">newInstance</span><span class="params">(Class&lt;?&gt; componentType, <span class="keyword">int</span> length)</span></span></span><br><span class="line"><span class="function">        <span class="keyword">throws</span> NegativeArraySizeException </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> newArray(componentType, length);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//创建新数组是一个 native 方法</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">native</span> Object <span class="title">newArray</span><span class="params">(Class componentType, <span class="keyword">int</span> length)</span></span></span><br><span class="line"><span class="function">        <span class="keyword">throws</span> NegativeArraySizeException</span>;</span><br></pre></td></tr></table></figure>
<p><strong>System.class</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//拷贝数组也是一个 native 方法</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">native</span> <span class="keyword">void</span> <span class="title">arraycopy</span><span class="params">(Object src,  <span class="keyword">int</span>  srcPos,</span></span></span><br><span class="line"><span class="function"><span class="params">                                        Object dest, <span class="keyword">int</span> destPos,</span></span></span><br><span class="line"><span class="function"><span class="params">                                        <span class="keyword">int</span> length)</span></span>;</span><br></pre></td></tr></table></figure>
<p>JDK 1.7 HashMap add 源码分析
<strong>ArrayList.class</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">add</span><span class="params">(E e)</span> </span>&#123;</span><br><span class="line">	<span class="comment">//判断添加元素位置是否越界</span></span><br><span class="line">	<span class="comment">//size当前数组已添加的元素个数，可以理解为指向数组的位置</span></span><br><span class="line">    ensureCapacityInternal(size + <span class="number">1</span>);  <span class="comment">// Increments modCount!!</span></span><br><span class="line">    <span class="comment">//添加元素</span></span><br><span class="line">    elementData[size++] = e;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断添加元素数组是否越界</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">ensureCapacityInternal</span><span class="params">(<span class="keyword">int</span> minCapacity)</span> </span>&#123;</span><br><span class="line">	<span class="comment">//长度标志自增</span></span><br><span class="line">    modCount++;</span><br><span class="line">    <span class="comment">// overflow-conscious code</span></span><br><span class="line">    <span class="comment">//判断新增元素位置是否越界</span></span><br><span class="line">    <span class="comment">//如果越界，调用 grow 方法</span></span><br><span class="line">    <span class="keyword">if</span> (minCapacity - elementData.length &gt; <span class="number">0</span>)</span><br><span class="line">	    <span class="comment">//扩容</span></span><br><span class="line">        grow(minCapacity);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//扩容</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">grow</span><span class="params">(<span class="keyword">int</span> minCapacity)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// overflow-conscious code</span></span><br><span class="line">    <span class="comment">//存储以前的长度</span></span><br><span class="line">    <span class="keyword">int</span> oldCapacity = elementData.length;</span><br><span class="line">    <span class="comment">//&quot;oldCapaticy&gt;&gt;1&quot;表示baseValue右移1位，即除以2</span></span><br><span class="line">    <span class="keyword">int</span> newCapacity = oldCapacity + (oldCapacity &gt;&gt; <span class="number">1</span>);  </span><br><span class="line">    <span class="comment">//如果 newCapacity 比设定长度小，把设定长度放入 newCapacity </span></span><br><span class="line">    <span class="keyword">if</span> (newCapacity - minCapacity &lt; <span class="number">0</span>)</span><br><span class="line">        newCapacity = minCapacity;</span><br><span class="line">    <span class="comment">//如果 newCapacity 比数组的最大值大</span></span><br><span class="line">    <span class="keyword">if</span> (newCapacity - MAX_ARRAY_SIZE &gt; <span class="number">0</span>)</span><br><span class="line">        newCapacity = hugeCapacity(minCapacity);</span><br><span class="line">    <span class="comment">// minCapacity is usually close to size, so this is a win:</span></span><br><span class="line">    <span class="comment">//如果 newCapacity&gt;minCapacity 且 newCapacity&lt;MAX_ARRAY_SIZE，</span></span><br><span class="line">    <span class="comment">//原来的数组数据拷贝到新数组，并设置新数组长度是 newCapacity</span></span><br><span class="line">    elementData = Arrays.copyOf(elementData, newCapacity);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>JDK 1.7 ArrayList trimToSize 源码分析</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//去掉多余的数组预留位，内存较为紧缺的时候会用到</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">trimToSize</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    modCount++;</span><br><span class="line">    <span class="comment">//把当前数组长度存储到 oldCapacity </span></span><br><span class="line">    <span class="keyword">int</span> oldCapacity = elementData.length;</span><br><span class="line">    <span class="comment">//如果当前数组长度比 size（数组指针指向的位置）大</span></span><br><span class="line">    <span class="comment">//提取数组中的前size个元素，多余的元素去掉</span></span><br><span class="line">    <span class="keyword">if</span> (size &lt; oldCapacity) &#123;</span><br><span class="line">        elementData = Arrays.copyOf(elementData, size);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>开发</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>基础</tag>
      </tags>
  </entry>
  <entry>
    <title>Java多线程(0)</title>
    <url>/2021/03/15/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B(0)/</url>
    <content><![CDATA[<p>预习一下 Java 多线程的姿势。</p>
<span id="more"></span>


<h3 id="守护线程"><a href="#守护线程" class="headerlink" title="守护线程"></a>守护线程</h3><p>当没有非守护线程时，JVM进程结束，守护线程停止，相当于给非守护线程陪跑的。</p>
<p><img src="./1615782266096.png" alt="Alt text"></p>
<h3 id="interrupt"><a href="#interrupt" class="headerlink" title="interrupt"></a>interrupt</h3><p>中断线程，取代 Thread.stop()，线程执行 interrupt 之后，线程的 interrupt 状态会发生改变，如果需要线程停止，需要在线程的 run 方法里面使用 interrupted 状态停止；继承了 Thread 的 class 才能使用 interrupt。</p>
<p><img src="./1615783549470.png" alt="Alt text"></p>
<h3 id="Callable、Future、FutureTask"><a href="#Callable、Future、FutureTask" class="headerlink" title="Callable、Future、FutureTask"></a>Callable、Future、FutureTask</h3><p>继承 Thread、实现 Runnable 接口都可以创建线程，但是 Thread 、Runnable 里面的 run 方法都是 void 类型的，没有返回值，继承 FutureTask 实现 Callable、Future 可以使用有返回值的线程。</p>
<p><img src="./1615785149955.png" alt="Alt text"></p>
<p><a href="https://github.com/Knight-JNXU/ThreadStudy">参考代码</a></p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 修改 静态IP后 出现 name or service not known</title>
    <url>/2024/06/01/Linux%20%E4%BF%AE%E6%94%B9%20%E9%9D%99%E6%80%81IP%E5%90%8E%20%E5%87%BA%E7%8E%B0%20name%20or%20service%20not%20known/</url>
    <content><![CDATA[<p>使用 VMware Workstation 安装 CentOS 7 之后，修改了 /etc/sysconfig/network-scripts/ifcfg-ens33，修改了 虚拟网络编辑器，重启了网络服务，发现不能 ping 通 baidu，一番操作之后，发现是 /etc/resolv.conf 没有修改。</p>
<span id="more"></span>

<p>各配置如下</p>
<h4 id="外部实体机"><a href="#外部实体机" class="headerlink" title="外部实体机"></a>外部实体机</h4><p><img src="./1717235942350.png" alt="Alt text"></p>
<h4 id="VMware-Workstation-中的-虚拟网络编辑器"><a href="#VMware-Workstation-中的-虚拟网络编辑器" class="headerlink" title="VMware Workstation 中的 虚拟网络编辑器"></a>VMware Workstation 中的 虚拟网络编辑器</h4><p><img src="./1717206342354.png" alt="Alt text"></p>
<p><img src="./1717206417170.png" alt="Alt text"></p>
<h4 id="CentOS-7-中的-etc-sysconfig-network-scripts-ifcfg-ens33"><a href="#CentOS-7-中的-etc-sysconfig-network-scripts-ifcfg-ens33" class="headerlink" title="CentOS 7 中的 /etc/sysconfig/network-scripts/ifcfg-ens33"></a>CentOS 7 中的 /etc/sysconfig/network-scripts/ifcfg-ens33</h4><p><img src="./1717206478612.png" alt="Alt text"></p>
<h4 id="CentOS-7-中的-etc-resolv-conf"><a href="#CentOS-7-中的-etc-resolv-conf" class="headerlink" title="CentOS 7 中的 /etc/resolv.conf"></a>CentOS 7 中的 /etc/resolv.conf</h4><p>需要注意的是，ifcfg-ens33 和 resolv.conf 的 dns 要保持一致</p>
<p><img src="./1717206516970.png" alt="Alt text"></p>
<h4 id="重启网络服务"><a href="#重启网络服务" class="headerlink" title="重启网络服务"></a>重启网络服务</h4><figure class="highlight bat"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">systemctl restart network</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="顺利-ping-通"><a href="#顺利-ping-通" class="headerlink" title="顺利 ping 通"></a>顺利 ping 通</h4><p><img src="./1717206724079.png" alt="Alt text"></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>其他</tag>
      </tags>
  </entry>
  <entry>
    <title>Nul 文件的删除</title>
    <url>/2020/02/11/Nul%20%E6%96%87%E4%BB%B6%E7%9A%84%E5%88%A0%E9%99%A4/</url>
    <content><![CDATA[<p>今天，在移动文件的过程中，产生了一个 Nul，无法删除、无法移动。</p>
<span id="more"></span>

<p>Nul 文件可能是 文件损坏导致的，也有可能是磁盘出现了坏道导致的，看了一下 CrystalDiskInfo，显示我的硬盘健康状态是 100% 良好，估计可能是文件损坏了（不重要）。</p>
<p>由于 Nul 是 windows 里面的保留字，如果直接删除，会提示 “ms-dos功能无效” ，请教了一下 谷妈，生成了一个 bat 文件，把 Nul 文件拖进去删掉了，谨此记录。</p>
<p><img src="./1581417470421.png" alt="Alt text"></p>
<p>**bat file content **</p>
<figure class="highlight bat"><table><tr><td class="code"><pre><span class="line"><span class="built_in">DEL</span>/F /A /Q \\?\%<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">RD</span> /S /Q \\?\%<span class="number">1</span></span><br></pre></td></tr></table></figure>


<p>参考资料：<a href="https://blog.csdn.net/gerryzhu/article/details/8573901">显示无法删除nul,参数不正确 的解决之道</a></p>
]]></content>
      <categories>
        <category>系统</category>
      </categories>
      <tags>
        <tag>其他</tag>
      </tags>
  </entry>
  <entry>
    <title>OWASP Top 10</title>
    <url>/2017/04/03/OWASP%20Top%2010/</url>
    <content><![CDATA[<h4 id="1-SQL注入"><a href="#1-SQL注入" class="headerlink" title="1. SQL注入"></a>1. SQL注入</h4><ul>
<li>楼主认为，就是数据库名、表名、字段名被恶意获取，并且被恶意替换系统安全性较低的SQL注入语句。</li>
<li>预防措施：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1. 使用预编译的SQL语句</span><br><span class="line">比如：使用prepareStatement(XXX&#x3D;?).setXXX()，这样SQL的语义不会发生变化，攻击者也无法改变SQL结构</span><br><span class="line">2. 参数化查询</span><br><span class="line">就是SQL中的变量通过参数传入，而不是以字符串拼接的方式传入，但是不要使用“$name”的形式，要使用“:name”的形式</span><br></pre></td></tr></table></figure>
<span id="more"></span>
<h4 id="2-失效的身份认证和会话管理"><a href="#2-失效的身份认证和会话管理" class="headerlink" title="2. 失效的身份认证和会话管理"></a>2. 失效的身份认证和会话管理</h4></li>
<li>楼主认为，就是cookie里面的保存的一些网站数据被一些恶意网站窃取。<blockquote>
<p>chooie maxAge属性：maxAge为正数，浏览器会将maxAge为正数的cookie写到本地，只要maxAge&gt;0，这个cookie就还能被使用；maxAge为负数，该cookie仅在本浏览器窗口以及本窗口打开的子窗口内有效，关闭该窗口后该cookie失效；maxAge为0，删除该cookie；maxAge默认值为-1。</p>
</blockquote>
</li>
<li>预防措施<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1. 尽可能使maxAge为负数</span><br><span class="line">2. maxAge&gt;0时，合理制定cookie的存活周期</span><br><span class="line">3. maxAge&gt;0时，尽可能的为其添加httponly属性</span><br><span class="line">4. 不往cookie中添加敏感信息</span><br><span class="line">5. 如果使用https，标记为secure</span><br></pre></td></tr></table></figure>
<blockquote>
<p>cookie设置httponly后只有服务器才有修改读取cookie的权限，cookie设置secure后只有https才会传递该cookie。</p>
</blockquote>
<h4 id="3-跨站脚本（XSS）"><a href="#3-跨站脚本（XSS）" class="headerlink" title="3. 跨站脚本（XSS）"></a>3. 跨站脚本（XSS）</h4></li>
<li>楼主认为，XSS漏洞就是访客可以通过正常途径往服务器的Web上注入恶意代码，比如一些评论是可以直接追加到网页上的。</li>
<li>预防措施<blockquote>
<ol>
<li>配置过滤组件。</li>
<li>如果是JSP/Servlet，在生成网页的时候对不信任的输入进行检查。</li>
</ol>
</blockquote>
<h4 id="4-不安全的直接对象引用"><a href="#4-不安全的直接对象引用" class="headerlink" title="4. 不安全的直接对象引用"></a>4. 不安全的直接对象引用</h4></li>
<li>楼主认为就是使用get方法传参时，恶意用户对URL参数进行修改，比如说：XXXX?acount=123456，恶意用户可以简便的更改URL上面的参数，可能会造成越权访问，或者恶意注入一些参数</li>
<li>预防措施<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1. 避免在URL或网页中直接引用内部文件名或数据库关键字等</span><br><span class="line">2. 处理一些敏感的get请求时，添加身份验证</span><br></pre></td></tr></table></figure>
<h4 id="5-安全配置错误"><a href="#5-安全配置错误" class="headerlink" title="5. 安全配置错误"></a>5. 安全配置错误</h4></li>
<li>http可以开启put、delete、trace三个方法<blockquote>
<p>put：向webServer上传资源
delete：通过http请求删除指定URL上的资源
trace：可以获取网站前端缓存服务器、进行XSS攻击、在启用httponly的情况下绕过限制读取cookie</p>
</blockquote>
</li>
<li>预防措施<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">在web.xml中加入&lt;security-constraint&gt;认证</span><br></pre></td></tr></table></figure>
<h4 id="6-敏感信息泄露"><a href="#6-敏感信息泄露" class="headerlink" title="6. 敏感信息泄露"></a>6. 敏感信息泄露</h4></li>
<li>tomcat等应用服务器默认的exception页面泄露应用服务器版本信息，这样攻击者就可以根据版本漏洞进行攻击</li>
<li>内部IP地址泄露，比如说JS代码中含有某个服务器的内网IP</li>
<li>预防措施<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1. 关闭应用服务器的默认exception页面，建立自定义的exception页面</span><br><span class="line">2. 使用服务器名称代替服务器内部IP</span><br></pre></td></tr></table></figure>
<h4 id="7-功能级访问控制缺失"><a href="#7-功能级访问控制缺失" class="headerlink" title="7. 功能级访问控制缺失"></a>7. 功能级访问控制缺失</h4></li>
<li>楼主认为，对于一些默认的功能页面的访问不加权限控制，导致的恶意攻击行为，默认的功能型页面如tomcat的XXX:8080/docs/等帮助文档。<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1. 对功能性页面的访问加权限控制</span><br><span class="line">2. 不使用默认的端口号、路径</span><br><span class="line">3. 不使用默认的账号、密码</span><br></pre></td></tr></table></figure>
<h4 id="8-跨站请求伪造（CSRF）"><a href="#8-跨站请求伪造（CSRF）" class="headerlink" title="8. 跨站请求伪造（CSRF）"></a>8. 跨站请求伪造（CSRF）</h4></li>
<li>楼主认为，当你登录一个正常的网站A，在没有登出A的情况下，访问恶意网站B，B利用浏览器中的A的权限进行攻击，就是CSRF。</li>
<li>预防措施<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1. 在请求中放入攻击者不能伪造的信息token，并进行token校验</span><br><span class="line">2. Spring过滤器</span><br></pre></td></tr></table></figure>
<h4 id="9-使用含有已知漏洞的组件"><a href="#9-使用含有已知漏洞的组件" class="headerlink" title="9. 使用含有已知漏洞的组件"></a>9. 使用含有已知漏洞的组件</h4></li>
<li>比如DedeCMS、SiteServer CMS、ThinkSNS、ThinkPHP<h4 id="10-未验证的重定向和转发"><a href="#10-未验证的重定向和转发" class="headerlink" title="10. 未验证的重定向和转发"></a>10. 未验证的重定向和转发</h4></li>
<li>曾经有个漏洞 XXXX?url=evil.com，往恶意网站泄露了用户信息</li>
<li>预防措施<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1. 使用重定向和转发的时候，不要传递用户信息</span><br><span class="line">2. 使用ESAPI重写sendRedirect，往里面添加目的地校验等</span><br></pre></td></tr></table></figure>


</li>
</ul>
]]></content>
      <categories>
        <category>开发</category>
      </categories>
      <tags>
        <tag>其他</tag>
        <tag>进阶</tag>
      </tags>
  </entry>
  <entry>
    <title>POSTGRESQL</title>
    <url>/2017/04/03/POSTGRESQL/</url>
    <content><![CDATA[<h4 id="1-使用dbeaver连接postgresql"><a href="#1-使用dbeaver连接postgresql" class="headerlink" title="1. 使用dbeaver连接postgresql"></a>1. 使用dbeaver连接postgresql</h4><p><img src="./1490420105832.png" alt="Alt text">
在使用dbeaver下载postgresql（以下简称pg）的driver时，楼主遇到一个问题，就是那个驱动无法正常安装，于是楼主去pg的安装目录找了一下，发现了pg的jdbc驱动，就是下图那个东西。</p>
<span id="more"></span>
<p><img src="./1490420373754.png" alt="Alt text">
楼主把它配置到dbeaver的driver manager中就可以不用下载直接连接了。
<strong>step：</strong>dbeaver菜单栏“database”-&gt;driver manager-&gt;postgresql-&gt;edit-&gt;add file-&gt;找到相应的pg driver
<img src="./1490420797782.png" alt="Alt text">
对于这些pg连接信息，可以先使用pg自带的pgadmin查看。
<img src="./1490420518354.png" alt="Alt text">
<img src="./1490420622379.png" alt="Alt text">
拿一个简单的create table语句测试一下
<img src="./1490421499877.png" alt="Alt text">
这样，postgresql就安装好了！</p>
<h3 id="2-Tips"><a href="#2-Tips" class="headerlink" title="2. Tips"></a>2. Tips</h3><p>在使用dbeaver的时候，选中任意一张表右键-&gt;generate sql 可以查看一些基于该表的常用crud等操作的sql语句。
<img src="./1490423932250.png" alt="Alt text"></p>
<h4 id="3-基础"><a href="#3-基础" class="headerlink" title="3. 基础"></a>3. 基础</h4><h5 id="（1）数据类型"><a href="#（1）数据类型" class="headerlink" title="（1）数据类型"></a>（1）数据类型</h5><p>楼主在这里只介绍一些常用的吧，详情请移步<a href="https://www.postgresql.org/docs/9.6/static/">https://www.postgresql.org/docs/9.6/static/</a>
|类型|说明|占用空间|取值范围|
|:-:|:-:|:-:|:-:|
|smallint|小范围整型|2个字节|$-2^{15}$<del>（$2^{15}-1$）即-32768</del>32767|
|int(integer)|普通整型|4个字节|$-2^{31}$<del>（$2^{31}-1$）大概正负21亿多|
|bigint|大整型|8个字节|$-2^{63}$</del>（$2^{63}-1$）大概正负922亿亿|
|real|浮点数类型|4个字节|6位十进制精度|
|double precision|双精度浮点数类型|8个字节|15位十进制精度|
|numeric|任意精度类型|变长|任意|
|smallserial|自增小范围整型|2个字节|$2^{0}$<del>（$2^{15}-1$）|
|serial|自增整型|4个字节|$2^{0}$</del>（$2^{31}-1$）|
|bigserial|自增大范围整型|8个字节|$2^{0}$<del>（$2^{63}-1$）|
|char(n)/character(n)|固定长度费二进制字符串，不足补空|n个字节|-|
|varchar(n)/character varying(n)|变长费二进制字符串，有长度限制|n个字节|-|
|text|变长非二进制字符串，无长度限制|任意|-|
|bytea|变长的二进制字符串|1或者4+世纪字符串长度|-|
|boolean|true/false|1个字节|true/false|
|timestamp [(p)] [without time zone]|日期时间|8个字节|4713BC</del>294276AD|
|timestamp [(p)] with time zone|日期时间时区|8个字节|4713BC<del>294276AD|
|time [(p)] [without time zone]|时间|8个字节|00:00:00</del>24:00:00|
|time [(p)] with time zone|时间时区|12个字节|00:00:00+1459<del>24:00:00-1459|
|interval [fields] [(p)]|时间间隔|16个字节|-178000000 years</del>178000000 years|</p>
<blockquote>
<p>浮点数类型有几个特殊的值：
Infinity：正无穷
-Infinity：负无穷
NaN：不是数字</p>
</blockquote>
<hr>
<blockquote>
<p>timestamp
楼主发现，timestamp有好几种输入格式
如：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> test <span class="keyword">add</span> birthday <span class="type">timestamp</span> <span class="keyword">with</span> <span class="type">time</span> zone;</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> public.test</span><br><span class="line">(id, &quot;name&quot;, flag, birthday)</span><br><span class="line"><span class="keyword">VALUES</span>(<span class="number">1</span>, <span class="string">&#x27;lw&#x27;</span>, <span class="literal">false</span>, <span class="string">&#x27;1994/10/5 00:00:00 +0800&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> public.test</span><br><span class="line">(id, &quot;name&quot;, flag, birthday)</span><br><span class="line"><span class="keyword">VALUES</span>(<span class="number">2</span>, <span class="string">&#x27;dqy&#x27;</span>, <span class="literal">false</span>, <span class="string">&#x27;1995-3-21 00:00:00 +0800&#x27;</span>);</span><br></pre></td></tr></table></figure>
<p>这两种timestamp的输入格式效果是一样的</p>
</blockquote>
<blockquote>
<p><img src="./1490506464780.png" alt="Alt text"></p>
</blockquote>
<blockquote>
<p>timestamp输入格式详解请移步<a href="https://www.postgresql.org/docs/9.6/static/datatype-datetime.html">https://www.postgresql.org/docs/9.6/static/datatype-datetime.html</a> 的 date input 栏</p>
</blockquote>
<hr>
<blockquote>
<p>interval
这个用法楼主没有用过，仔细研究了一下它的用法，以demo的形式来表达吧
demo1：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> test <span class="keyword">add</span> sleepInterval <span class="type">interval</span> <span class="keyword">hour</span>;</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> public.test</span><br><span class="line">(id, &quot;name&quot;, flag, birthday, sleepinterval)</span><br><span class="line"><span class="keyword">VALUES</span>(<span class="number">3</span>, <span class="string">&#x27;sw&#x27;</span>, <span class="literal">false</span>, <span class="string">&#x27;1994/10/5 00:00:00 +0800&#x27;</span>, <span class="string">&#x27;8 hours&#x27;</span>);</span><br></pre></td></tr></table></figure>
</blockquote>
<blockquote>
<p><img src="./1490508578773.png" alt="Alt text"></p>
</blockquote>
<blockquote>
<p>demo2：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> test <span class="keyword">add</span> lessonInterval <span class="type">interval</span> <span class="keyword">hour</span> <span class="keyword">to</span> <span class="keyword">minute</span>;</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> public.test</span><br><span class="line">(id, &quot;name&quot;, flag, birthday, lessoninterval)</span><br><span class="line"><span class="keyword">VALUES</span>(<span class="number">4</span>, <span class="string">&#x27;zsf&#x27;</span>, <span class="literal">false</span>, <span class="string">&#x27;1994/10/5 00:00:00 +0800&#x27;</span>, <span class="string">&#x27;40 mins&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> public.test</span><br><span class="line">(id, &quot;name&quot;, flag, lessoninterval)</span><br><span class="line"><span class="keyword">VALUES</span>(<span class="number">5</span>, <span class="string">&#x27;gyf&#x27;</span>, <span class="literal">false</span>, <span class="string">&#x27;1 hours 40 minutes&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> public.test</span><br><span class="line">(id, &quot;name&quot;, flag, lessoninterval)</span><br><span class="line"><span class="keyword">VALUES</span>(<span class="number">6</span>, <span class="string">&#x27;whz&#x27;</span>, <span class="literal">false</span>, <span class="string">&#x27;1 weeks 1 hours 40 minutes&#x27;</span>);</span><br></pre></td></tr></table></figure>
<p><img src="./1490509350175.png" alt="Alt text">
更多interval输入格式请移步<a href="https://www.postgresql.org/docs/9.6/static/datatype-datetime.html">https://www.postgresql.org/docs/9.6/static/datatype-datetime.html</a> 的interval input 栏</p>
</blockquote>
<h5 id="（2）create-table"><a href="#（2）create-table" class="headerlink" title="（2）create table"></a>（2）create table</h5><p>语法：
create table table_name
(
    column_name1 data_type(size),
    column_name2 data_type(size),
    …
);
demo：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> t_mem_member</span><br><span class="line">(</span><br><span class="line">	id <span class="type">int</span> <span class="keyword">primary</span> <span class="keyword">key</span>,</span><br><span class="line">	login_name <span class="type">varchar</span>(<span class="number">256</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure>
<h5 id="（3）drop-table"><a href="#（3）drop-table" class="headerlink" title="（3）drop table"></a>（3）drop table</h5><p>语法：
drop table table_name
demo：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> t_so_orderline;</span><br></pre></td></tr></table></figure>
<h5 id="（4）insert"><a href="#（4）insert" class="headerlink" title="（4）insert"></a>（4）insert</h5><p>语法：
insert into table_name(column1, column2, …, columnN)
values(value1, value2, …, valueN);
demo：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> public.t_mem_member</span><br><span class="line">(id, login_name)</span><br><span class="line"><span class="keyword">VALUES</span>(<span class="number">1</span>, <span class="string">&#x27;lw&#x27;</span>);</span><br></pre></td></tr></table></figure>
<h5 id="（5）select"><a href="#（5）select" class="headerlink" title="（5）select"></a>（5）select</h5><p>语法：
select column1, column2, …, columnN from table_name
demo：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line"><span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> public.t_mem_member;</span><br></pre></td></tr></table></figure>
<h5 id="（6）left-outer-join"><a href="#（6）left-outer-join" class="headerlink" title="（6）left outer join"></a>（6）left outer join</h5><p>语法：
select … from table1 left outer join table2 on conditional_expression …
demo：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span></span><br><span class="line"><span class="operator">*</span></span><br><span class="line"><span class="keyword">from</span></span><br><span class="line">(</span><br><span class="line">	t_so_orderline orderLine</span><br><span class="line">	<span class="keyword">left</span> <span class="keyword">outer</span> <span class="keyword">join</span></span><br><span class="line">	t_so_salesorder salesOrder</span><br><span class="line">	<span class="keyword">on</span> orderLine.order_id<span class="operator">=</span>salesOrder.id</span><br><span class="line">) temp</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">outer</span> <span class="keyword">join</span></span><br><span class="line">	t_mem_member userMember</span><br><span class="line"><span class="keyword">on</span> </span><br><span class="line">	temp.member_id<span class="operator">=</span>userMember.id</span><br></pre></td></tr></table></figure>
<p>为了说明left outer join的功能，来个图（这图画的贼蛋疼），这个图对应的是上面那个demo
<img src="./1490427934528.png" alt="Alt text">
<img src="./1490427979075.png" alt="Alt text"></p>
<h5 id="（7）group-by"><a href="#（7）group-by" class="headerlink" title="（7）group by"></a>（7）group by</h5><p>语法：
select column-list
from table_name
where [conditions]
group by column1, column2, …, clolumnN
demo：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span></span><br><span class="line">	member_id</span><br><span class="line"><span class="keyword">from</span></span><br><span class="line">	t_so_salesorder</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span></span><br><span class="line">	member_id</span><br></pre></td></tr></table></figure>
<p><strong>注意：</strong>楼主发现，select后面的列必须出现在group by后面，或者是被包含在聚合函数中，否则会出现如下报错</p>
<p><img src="./1490439541264.png" alt="Alt text"></p>
<blockquote>
<p><strong>聚合函数：</strong>像avg()、sum()、max()等就是聚合函数</p>
</blockquote>
<h5 id="（7）alter"><a href="#（7）alter" class="headerlink" title="（7）alter"></a>（7）alter</h5><p>语法：
添加列
alter table table_name add column_name datatype;
demo：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> test <span class="keyword">add</span> flag <span class="type">boolean</span>;</span><br></pre></td></tr></table></figure>
<p>删除列
alter table table_name drop column column_name;
demo：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> test <span class="keyword">drop</span> <span class="keyword">column</span> birthday;</span><br></pre></td></tr></table></figure>
<p>更改列数据类型
alter table table_name alter column column_name type datatype;
demo：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> test <span class="keyword">alter</span> <span class="keyword">column</span> flag type <span class="type">varchar</span>;</span><br></pre></td></tr></table></figure>
<p>添加/删除not null约束
alter table table_name alter column_name {set | drop} not null;
demo：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> test <span class="keyword">alter</span> flag <span class="keyword">set</span> <span class="keyword">not</span> <span class="keyword">null</span>;</span><br></pre></td></tr></table></figure>
<p>添加unique约束
alter table table_name add constraint my_unique_constraint unique(column1, column2);
demo：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> cars <span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> my_unique_constraint <span class="keyword">UNIQUE</span>(id); </span><br></pre></td></tr></table></figure>
<p>添加primary key约束
alter table table_name add constraint my_primary_key primary key(column1, column2);
demo：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> cars <span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> my_primary_key <span class="keyword">PRIMARY</span> <span class="keyword">KEY</span> (id);</span><br></pre></td></tr></table></figure>
<p>添加 unique/primary key约束
（<strong>注</strong>：楼主发现有多种方法可以添加unique约束和primary key约束，这里先不深究）
alter table table_name add {unique | primary key} using index index_name;
demo：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> student <span class="keyword">add</span> <span class="keyword">primary</span> <span class="keyword">key</span> <span class="keyword">using</span> index indexId;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>这里必需讲一下这种index的生成（即生成索引），举个栗子吧</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--先生成一张student表</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> student (id <span class="type">int</span>);</span><br><span class="line"><span class="comment">--给他添加一个index或者unique index</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">unique</span> index indexId <span class="keyword">on</span> student (id);</span><br></pre></td></tr></table></figure>
<p>create index详情请移步 <a href="https://www.postgresql.org/docs/9.6/static/sql-createindex.html">https://www.postgresql.org/docs/9.6/static/sql-createindex.html</a></p>
</blockquote>
<p>添加唯一约束
alter table table_name add constraint the_name_you_want unique(condition);
demo：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> student <span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> theNameYouDecide <span class="keyword">UNIQUE</span>(id<span class="operator">&gt;</span><span class="number">0</span>); </span><br></pre></td></tr></table></figure>
<p>添加check约束
alter table table_name add constraint the_name_you_want check(co)
demo：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> student <span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> theNameYouDecide <span class="keyword">CHECK</span> (flag);</span><br></pre></td></tr></table></figure>
<p>删除约束
alter table table_name drop constraint  the_name_of_your_constraint;
demo：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> student <span class="keyword">drop</span> <span class="keyword">constraint</span> theNameYouDecide;</span><br></pre></td></tr></table></figure>
<h5 id="（8）delete"><a href="#（8）delete" class="headerlink" title="（8）delete"></a>（8）delete</h5><p>语法：
delete from table_name [where condition]
demo：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> test <span class="keyword">where</span> id<span class="operator">=</span><span class="number">3</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p><strong>注意：</strong>不带where条件时，会把所有的记录删除</p>
</blockquote>
<h5 id="（9）update"><a href="#（9）update" class="headerlink" title="（9）update"></a>（9）update</h5><p>语法：
update table_name set column1=value1, column2=value2, …, columnN=valueN where [condition]
demo：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">update</span> test <span class="keyword">set</span> sleepinterval<span class="operator">=</span><span class="keyword">null</span> <span class="keyword">where</span> id<span class="operator">=</span><span class="number">3</span></span><br></pre></td></tr></table></figure>
<h5 id="（10）drop"><a href="#（10）drop" class="headerlink" title="（10）drop"></a>（10）drop</h5><p>语法：
drop table table_name;
demo：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> student;</span><br></pre></td></tr></table></figure>
<h5 id="（11）update"><a href="#（11）update" class="headerlink" title="（11）update"></a>（11）update</h5><p>语法：
update table_name set column1=value1, column2=value2, …, columnN=valueN where [condition]
dmeo：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">update</span> test <span class="keyword">set</span> flag<span class="operator">=</span><span class="literal">true</span> <span class="keyword">where</span> id<span class="operator">=</span><span class="number">1</span>;</span><br></pre></td></tr></table></figure>
<h5 id="（12）like"><a href="#（12）like" class="headerlink" title="（12）like"></a>（12）like</h5><p>语法：
select from table_name where column like ‘xxx%’;
select from table_name where column like ‘%xxx%’;
select from table_name where column like ‘<em>xxx’;
select from table_name where column like ‘_xxx</em>‘;
dmeo：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> test <span class="keyword">where</span> name <span class="keyword">like</span> <span class="string">&#x27;_w&#x27;</span>;</span><br></pre></td></tr></table></figure>
<h5 id="（13）limit"><a href="#（13）limit" class="headerlink" title="（13）limit"></a>（13）limit</h5><p>语法：
select column1, column2, …, columnN from table_name limit [no. of row] [offset [row number]]
demo：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> test limit <span class="number">2</span> <span class="keyword">offset</span> <span class="number">3</span>;</span><br></pre></td></tr></table></figure>

<blockquote>
<p><img src="./1490521253444.png" alt="Alt text"> </p>
</blockquote>
<p><img src="./1490521278874.png" alt="Alt text"></p>
<blockquote>
<p>demo中sql是表示从第3条开始读（排最前面的是第0条）读取两条记录</p>
</blockquote>
<h5 id="（14）order-by"><a href="#（14）order-by" class="headerlink" title="（14）order by"></a>（14）order by</h5><p>语法：
select column-list from table_name [where condition] [order by column1, column2, …, columnN] [asc | desc]
demo：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> test <span class="keyword">order</span> <span class="keyword">by</span> id;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>默认是升序，也就是asc。</p>
</blockquote>
<h5 id="（15）having"><a href="#（15）having" class="headerlink" title="（15）having"></a>（15）having</h5><p>语法：
select column1, column2, …, columnN from table1, table2, …, tableN [where conditions] group by column1, column2, …, columnN having [conditions] order by column1, column2, …, columnN
demo：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> </span><br><span class="line">	flag</span><br><span class="line"><span class="keyword">from</span></span><br><span class="line">	test</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span></span><br><span class="line">	flag</span><br><span class="line"><span class="keyword">having</span></span><br><span class="line">	flag<span class="operator">=</span><span class="string">&#x27;false&#x27;</span>;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>楼主发现，having后面的condition字段必须出现在group by子句中，或者被包含在聚合函数中，而group by后面的condition字段又必须出现在select子句，或者被包含在聚合函数中，so…
<img src="./1490522390034.png" alt="Alt text"></p>
</blockquote>
<h5 id="（16）with"><a href="#（16）with" class="headerlink" title="（16）with"></a>（16）with</h5><p>语法：
with
    name_for_summary_data as
    (
        select statement
    );
    select column-list from name_for_summary_data;
demo：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">with</span> temp_table <span class="keyword">as</span></span><br><span class="line">(</span><br><span class="line">	<span class="keyword">select</span> id, name <span class="keyword">from</span> test</span><br><span class="line">)</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> temp_table;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>感觉是用来使用结果集创建的临时表的。</p>
</blockquote>
<h5 id="（17）distinct"><a href="#（17）distinct" class="headerlink" title="（17）distinct"></a>（17）distinct</h5><p>语法：
select distinct column1, column2, …, columnN from table_name [where conditions]
demo：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> flag <span class="keyword">from</span> test;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>distinct是用来去重的。</p>
</blockquote>
<h5 id="（18）and-or"><a href="#（18）and-or" class="headerlink" title="（18）and/or"></a>（18）and/or</h5><p>语法：
select column-list from table_name where condition1 {and | or} condition2
demo：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> test <span class="keyword">where</span> name<span class="operator">=</span><span class="string">&#x27;lw&#x27;</span> <span class="keyword">or</span> name<span class="operator">=</span><span class="string">&#x27;dqy&#x27;</span>;</span><br></pre></td></tr></table></figure>
<h5 id="（19）union"><a href="#（19）union" class="headerlink" title="（19）union"></a>（19）union</h5><p>语法：
select column-list1 from table_list1 [where conditions] 
union [all]
select column-list2 from table_list2 [where conditions] 
demo：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> id <span class="keyword">from</span> test</span><br><span class="line"><span class="keyword">union</span></span><br><span class="line"><span class="keyword">select</span> id <span class="keyword">from</span> cars;</span><br></pre></td></tr></table></figure>
<blockquote>
<p><strong>注意：</strong>用union连接的两个select结果集必需事一样的数据类型。union是可以去重的，union all是不去重的。</p>
</blockquote>
<h5 id="（20）cross-join"><a href="#（20）cross-join" class="headerlink" title="（20）cross join"></a>（20）cross join</h5><p>语法：
select column-list from table_name1 cross join table_name2
demo：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> test <span class="keyword">cross</span> <span class="keyword">join</span> cars;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>楼主觉得这种运算相当于是两个矩阵相乘或者说是两个集合的笛卡尔积。</p>
</blockquote>
<h5 id="（21）inner-join"><a href="#（21）inner-join" class="headerlink" title="（21）inner join"></a>（21）inner join</h5><p>语法：
select table-list from table1 inner join table2 on table1.filed=table2.filed
demo：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> test <span class="keyword">inner</span> <span class="keyword">join</span> cars <span class="keyword">on</span> test.id<span class="operator">=</span>cars.id;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>这个是上面sql的结果</p>
</blockquote>
<blockquote>
<p><img src="./1490525683910.png" alt="Alt text"></p>
</blockquote>
<blockquote>
<p><img src="./1490525655027.png" alt="Alt text"></p>
</blockquote>
<blockquote>
<p><img src="./1490525623085.png" alt="Alt text"></p>
</blockquote>
<blockquote>
<p>楼主觉得像联表查询。</p>
</blockquote>
<h5 id="（22）right-outer-join"><a href="#（22）right-outer-join" class="headerlink" title="（22）right outer join"></a>（22）right outer join</h5><p>语法：
select column-list table1 right outer join table2 on conditional_expressions
demo：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> student</span><br><span class="line">(</span><br><span class="line">	s_name <span class="type">varchar</span>(<span class="number">256</span>),</span><br><span class="line">	lesson_id <span class="type">int</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> lesson</span><br><span class="line">(</span><br><span class="line">	id <span class="type">int</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> public.student</span><br><span class="line">(s_name, lesson_id)</span><br><span class="line"><span class="keyword">VALUES</span>(<span class="string">&#x27;lw&#x27;</span>, <span class="number">1</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> public.student</span><br><span class="line">(s_name, lesson_id)</span><br><span class="line"><span class="keyword">VALUES</span>(<span class="string">&#x27;qy&#x27;</span>, <span class="number">1</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> public.lesson</span><br><span class="line">(id)</span><br><span class="line"><span class="keyword">VALUES</span>(<span class="number">1</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> public.lesson</span><br><span class="line">(id)</span><br><span class="line"><span class="keyword">VALUES</span>(<span class="number">2</span>);</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> student <span class="keyword">right</span> <span class="keyword">outer</span> <span class="keyword">join</span> lesson <span class="keyword">on</span> student.lesson_id<span class="operator">=</span>lesson.id;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>这个是demo的结果截图。</p>
</blockquote>
<blockquote>
<p><img src="./1490525494375.png" alt="Alt text"></p>
</blockquote>
<blockquote>
<p>楼主认为就是，right out join 后面接的那张表的数据全保留，左边不满足on后面的conditions的就为空，left out join是左边的全保留，正好相反，可以结合上面的left outer join来看。</p>
</blockquote>
<h5 id="（23）full-outer-join"><a href="#（23）full-outer-join" class="headerlink" title="（23）full outer join"></a>（23）full outer join</h5><p>语法：
select column-list table1 full outer join table2 on conditional_expresssions;
demo：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> student <span class="keyword">full</span> <span class="keyword">outer</span> <span class="keyword">join</span> lesson <span class="keyword">on</span> student.lesson_id<span class="operator">=</span>lesson.id;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>数据表还是使用right out join的表</p>
</blockquote>
<blockquote>
<p><img src="./1490525878219.png" alt="Alt text"></p>
</blockquote>
<blockquote>
<p>可以发现，任何一张表的所有数据均会保留。</p>
</blockquote>
<h5 id="（24）create-database"><a href="#（24）create-database" class="headerlink" title="（24）create database;"></a>（24）create database;</h5><p>语法：
create database dbName;
create database dbName owner rolename;
demo：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">create database jpa;</span><br><span class="line"></span><br><span class="line">create database newdb owner postgres;</span><br></pre></td></tr></table></figure>
<p>然后在 pgadmin中就可以看到了</p>
<p><img src="./1491287063261.png" alt="Alt text"></p>
<h5 id="（25）drop-sequence"><a href="#（25）drop-sequence" class="headerlink" title="（25）drop sequence"></a>（25）drop sequence</h5><p>语法：
drop sequence [if exists] sequence_name [, …] [cascade | restrict]
demo：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">drop</span> sequence person_id_seq;</span><br></pre></td></tr></table></figure>
<p>就先写这么多，楼主写着玩意写了两天，还不见底，postgresql真是博大精深啊。。</p>
]]></content>
      <categories>
        <category>开发</category>
      </categories>
      <tags>
        <tag>其他</tag>
        <tag>数据库</tag>
      </tags>
  </entry>
  <entry>
    <title>Web如何提高响应速度</title>
    <url>/2017/04/03/Web%E5%A6%82%E4%BD%95%E6%8F%90%E9%AB%98%E5%93%8D%E5%BA%94%E9%80%9F%E5%BA%A6/</url>
    <content><![CDATA[<p>web性能优化中有句话叫“前端为八、后端为二”，在前端进行优化往往能够起到立竿见影的效果。</p>
<h4 id="1-尽量减少前端的http请求"><a href="#1-尽量减少前端的http请求" class="headerlink" title="1. 尽量减少前端的http请求"></a>1. 尽量减少前端的http请求</h4><ul>
<li>合并CSS文件、JS文件，就是把多个CSS文件合成一个CSS文件，多个JS文件合成一个JS文件，去除里面的空格、换行等等。</li>
<li>把多张图片合成一张大图片，CSS Sprites利用CSS background相关元素进行背景图绝对定位，就可以从这张大图片中取出需要的部分。<span id="more"></span>
<h4 id="2-使用静态页面"><a href="#2-使用静态页面" class="headerlink" title="2. 使用静态页面"></a>2. 使用静态页面</h4></li>
<li>将不常更新的页面内容静态化。<h4 id="3-CDN加速"><a href="#3-CDN加速" class="headerlink" title="3. CDN加速"></a>3. CDN加速</h4></li>
<li>cdn加速是通过一个服务器集群对网站内容建立缓存和镜像，并且通过对网页静态资源的压缩来加快网站的最终访问速度。<h4 id="4-把JS脚本的加载放在页面加载的后面"><a href="#4-把JS脚本的加载放在页面加载的后面" class="headerlink" title="4. 把JS脚本的加载放在页面加载的后面"></a>4. 把JS脚本的加载放在页面加载的后面</h4></li>
<li>避免JS加载卡顿时，对页面加载产生影响。<h4 id="5-使用NOSQL"><a href="#5-使用NOSQL" class="headerlink" title="5. 使用NOSQL"></a>5. 使用NOSQL</h4></li>
<li>使用nosql提高应用服务器与数据库的数据库交互，从而提高web响应速度。<h4 id="6-使用分布式"><a href="#6-使用分布式" class="headerlink" title="6. 使用分布式"></a>6. 使用分布式</h4></li>
<li>比如说把原来一个服务器做的任务分发到两个服务器，建立专门图片服务器。<blockquote>
<p>分布式和集群的区别：集群是同一个业务部署在多台机器上，提高系统可用性。分布式是不同的业务模块拆分到不同的机器上，解决高并发的问题。打个比方，一个饭店，为了提高上菜效率，如果是雇佣多个厨师，就是集群，如果是把切菜、洗菜等工作分给不同的人做的话，就是分布式。集群主要的优点是增强服务器的容灾性。</p>
</blockquote>
<h4 id="7-使用缓存"><a href="#7-使用缓存" class="headerlink" title="7. 使用缓存"></a>7. 使用缓存</h4></li>
<li>服务器缓存、浏览器缓存等。<h4 id="8-升级硬件"><a href="#8-升级硬件" class="headerlink" title="8. 升级硬件"></a>8. 升级硬件</h4></li>
<li>升级硬件，提高服务器运算速度和网络传输速度。</li>
</ul>
]]></content>
      <categories>
        <category>开发</category>
      </categories>
      <tags>
        <tag>其他</tag>
        <tag>进阶</tag>
      </tags>
  </entry>
  <entry>
    <title>Win11 edge 时不时出现 youtobe 账号登录的弹窗</title>
    <url>/2024/10/20/Win11%20edge%20%E6%97%B6%E4%B8%8D%E6%97%B6%E5%87%BA%E7%8E%B0%20youtobe%20%E8%B4%A6%E5%8F%B7%E7%99%BB%E5%BD%95%E7%9A%84%E5%BC%B9%E7%AA%97/</url>
    <content><![CDATA[<p>半年前安装一些绿色软件，导致 google 账号下记住的其他账号密码泄露，而且 win11 自带的 edge 时不时弹出 各种 account 登录的页面，不胜其烦，昨天终于除掉了这块牛皮癣。</p>
<span id="more"></span>

<p>由于是存在第三方进程去调用 edge 打开网页，所以我先去 edge 的安装包下面，把 edge 的启动程序改下名字</p>
<p><img src="./1729396449566.png" alt="Alt text"></p>
<p>这个第三方进程如果继续调用 edge 就会出现多种情况，一种是无法调用 edge 而无法弹窗，一种是相关线程出现报错，其他的暂时没想到，也有可能超出了我现有的认知。</p>
<p>我运气很好，我的直接出现了弹窗。</p>
<p>直接使用 Process Explorer 软件分析一下这个弹窗是由谁产生的，过去直接把这个应用干掉就行了</p>
<p><img src="./1729396659018.png" alt="Alt text"></p>
<p>最后再把 edge 的应用程序名字改回去。</p>
<p><img src="./1729396699952.png" alt="Alt text"></p>
<p>测试了一上午，再也没有这个弹窗了。</p>
]]></content>
      <categories>
        <category>弹窗</category>
      </categories>
      <tags>
        <tag>其他</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows Server 2012 配置 FTP 服务</title>
    <url>/2024/10/20/Windows%20Server%202012%20%E9%85%8D%E7%BD%AE%20FTP%20%E6%9C%8D%E5%8A%A1/</url>
    <content><![CDATA[<p>1.3 FTP服务配置
1.3.1 安装FTP服务，新建一个FTP站点，并建立用户zhangsan密码为Ftp123;
1.3.2 FTP站点主目录为C:\ftproot，通过适当技术实现用户zhangsan通过匿名方式登录FTP站点时，只能浏览到“Public”子目录中的内容，若用个人账号登录FTP站点，则只能访问与用户名同名的自己的子文件夹；
1.3.3 设置FTP最大客户端连接数为100。设置无任何操作的超时时间为5分钟，设置数据连接的超时时间为2分钟</p>
<span id="more"></span>

<h3 id="安装FTP"><a href="#安装FTP" class="headerlink" title="安装FTP"></a>安装FTP</h3><p><img src="./1729402942959.png" alt="Alt text"></p>
<p><img src="./1729402971681.png" alt="Alt text"></p>
<p><img src="./1729402980734.png" alt="Alt text"></p>
<p><img src="./1729402994805.png" alt="Alt text"></p>
<p><img src="./1729403008940.png" alt="Alt text"></p>
<p><img src="./1729403018577.png" alt="Alt text"></p>
<p>注意这里要勾选 FTP 相关服务
<img src="./1729403029550.png" alt="Alt text"></p>
<p><img src="./1729403038276.png" alt="Alt text"></p>
<p>安装完成
<img src="./1729403121334.png" alt="Alt text"></p>
<h3 id="创建相关文件夹及文件"><a href="#创建相关文件夹及文件" class="headerlink" title="创建相关文件夹及文件"></a>创建相关文件夹及文件</h3><p><img src="./1729403925246.png" alt="Alt text"></p>
<p><img src="./1729403932537.png" alt="Alt text"></p>
<p><img src="./1729403941975.png" alt="Alt text"></p>
<h3 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h3><p>FTP服务器新增用户 zhangsan
<img src="./1729404073846.png" alt="Alt text"></p>
<p><img src="./1729404121286.png" alt="Alt text"></p>
<h3 id="IP配置"><a href="#IP配置" class="headerlink" title="IP配置"></a>IP配置</h3><p>FTP服务器
<img src="./1729403536807.png" alt="Alt text"></p>
<p>客户机
<img src="./1729403981697.png" alt="Alt text"></p>
<h3 id="FTP服务器防火墙配置"><a href="#FTP服务器防火墙配置" class="headerlink" title="FTP服务器防火墙配置"></a>FTP服务器防火墙配置</h3><p><img src="./1729403590329.png" alt="Alt text"></p>
<p><img src="./1729403700815.png" alt="Alt text"></p>
<h3 id="配置FTP"><a href="#配置FTP" class="headerlink" title="配置FTP"></a>配置FTP</h3><p>打开 IIS
<img src="./1729403192341.png" alt="Alt text"></p>
<p>右击添加 FTP 站点
<img src="./1729403306185.png" alt="Alt text"></p>
<p><img src="./1729403379564.png" alt="Alt text"></p>
<p><img src="./1729403390659.png" alt="Alt text"></p>
<p><img src="./1729403405381.png" alt="Alt text"></p>
<p><img src="./1729403791812.png" alt="Alt text"></p>
<p><img src="./1729402802092.png" alt="Alt text"></p>
<h3 id="访问FTP"><a href="#访问FTP" class="headerlink" title="访问FTP"></a>访问FTP</h3><p>客户机匿名访问 和 使用 zhangsan 账号访问</p>
<p><img src="./1729404236297.png" alt="Alt text"></p>
]]></content>
      <categories>
        <category>网络技术</category>
      </categories>
      <tags>
        <tag>Windows Server 2012 ftp</tag>
      </tags>
  </entry>
  <entry>
    <title>Zookeeper 群起脚本配置</title>
    <url>/2024/06/16/Zookeeper%20%E7%BE%A4%E8%B5%B7%E8%84%9A%E6%9C%AC%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<p>昨天刚做完 hadoop 高可用配置，里面的3台centos均安装了 Zookeeper，但是启动要一台台启动太麻烦了，这里抽空写一个Zookeeper的群起脚本，方便快速启动3台服务器的Zookeeper服务。</p>
<span id="more"></span>

<p>mkdir -p /home/hadoop/bin
vim /home/hadoop/bin/my_zk.sh</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line"></span><br><span class="line">#检验参数</span><br><span class="line">if [ $# -lt 1 ]</span><br><span class="line">then</span><br><span class="line"> echo &#39;参数不能为空！！！&#39;</span><br><span class="line"> exit </span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">#循环遍历每一台机器，分别启动或者停止ZK服务</span><br><span class="line"></span><br><span class="line">for host in hadoop112 hadoop113 hadoop114</span><br><span class="line">do</span><br><span class="line">  case $1 in</span><br><span class="line">   &quot;start&quot;)</span><br><span class="line">	echo &quot;*****************start $host zookeeper****************&quot;</span><br><span class="line">		ssh $host &#x2F;devops&#x2F;apache-zookeeper-3.5.7-bin&#x2F;bin&#x2F;zkServer.sh $1</span><br><span class="line">   ;;</span><br><span class="line">	</span><br><span class="line">   &quot;stop&quot;)</span><br><span class="line">	echo &quot;*****************stop $host zookeeper****************&quot;</span><br><span class="line">		ssh $host &#x2F;devops&#x2F;apache-zookeeper-3.5.7-bin&#x2F;bin&#x2F;zkServer.sh $1</span><br><span class="line">   ;;</span><br><span class="line">  </span><br><span class="line">   &quot;status&quot;)</span><br><span class="line">	echo &quot;*****************status $host zookeeper****************&quot;</span><br><span class="line">		ssh $host &#x2F;devops&#x2F;apache-zookeeper-3.5.7-bin&#x2F;bin&#x2F;zkServer.sh $1</span><br><span class="line">   ;;</span><br><span class="line">  </span><br><span class="line">   *)</span><br><span class="line">	   echo &#39;参数有误！！！&#39;</span><br><span class="line">	   exit</span><br><span class="line">   ;;</span><br><span class="line">  esac</span><br><span class="line">done</span><br></pre></td></tr></table></figure>

<p>chmod 744 my_zk.sh</p>
<p><img src="./1718468813797.png" alt="Alt text"></p>
<p><img src="./1718468858727.png" alt="Alt text"></p>
<p>搞定</p>
]]></content>
      <categories>
        <category>Zookeeper</category>
      </categories>
      <tags>
        <tag>其他</tag>
      </tags>
  </entry>
  <entry>
    <title>can&#39;t push to git  use https</title>
    <url>/2018/01/06/can%E2%80%99t%20push%20to%20git%20%20use%20https/</url>
    <content><![CDATA[<p>今天楼主使用 ssh key 拉取仓库后，发现只能 commit 不能 push，特此记录。exception ：can’t push to git://github.com/xxx/xxx.git use <a href="https://github.com/xxx/xxx.git">https://github.com/xxx/xxx.git</a></p>
<span id="more"></span>

<h4 id="Step-1：get-current-remote"><a href="#Step-1：get-current-remote" class="headerlink" title="Step 1：get current remote"></a>Step 1：get current remote</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git remote</span><br></pre></td></tr></table></figure>

<p><img src="./1515238644390.png" alt="Alt text"></p>
<h4 id="Step-2：reset-remote-url"><a href="#Step-2：reset-remote-url" class="headerlink" title="Step 2：reset remote url"></a>Step 2：reset remote url</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git remote set-url <span class="string">&quot;your remote&quot;</span> git://github.com/<span class="string">&quot;your .ssh config host &quot;</span>/demos.git</span><br></pre></td></tr></table></figure>

<p><img src="./1515238839549.png" alt="Alt text"></p>
<p>这里咱们比较一下，是要对 url 做一定修改的</p>
<p><img src="./1515238901188.png" alt="Alt text"></p>
<p><img src="./1515238920292.png" alt="Alt text"></p>
<p><img src="./1515239011085.png" alt="Alt text"></p>
<h4 id="Step-3：push"><a href="#Step-3：push" class="headerlink" title="Step 3：push"></a>Step 3：push</h4><p>由于楼主前面已经 commit 过了，所以这里直接 push</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git push</span><br></pre></td></tr></table></figure>

<p><img src="./1515239102273.png" alt="Alt text"></p>
]]></content>
      <categories>
        <category>开发</category>
      </categories>
      <tags>
        <tag>github</tag>
      </tags>
  </entry>
  <entry>
    <title>eclipse pull repository by ssh key</title>
    <url>/2018/01/06/eclipse%20pull%20repository%20by%20ssh%20key/</url>
    <content><![CDATA[<p>eclipse 使用 ssh 方式拉取 github 仓库。</p>
<span id="more"></span>

<h4 id="Step-1：set-ssh-key-file-in-eclipse"><a href="#Step-1：set-ssh-key-file-in-eclipse" class="headerlink" title="Step 1：set ssh key file in eclipse"></a>Step 1：set ssh key file in eclipse</h4><p><img src="./1515243104842.png" alt="Alt text"></p>
<p><strong>注意：</strong> 没有 .pub 后缀那个才是 key 文件</p>
<h4 id="Step-2：import-git-project"><a href="#Step-2：import-git-project" class="headerlink" title="Step 2：import git project"></a>Step 2：import git project</h4><p>file -&gt; import -&gt; git -&gt; project from git -&gt; clone uri</p>
<p><img src="./1515243156659.png" alt="Alt text"></p>
<p>-&gt; next -&gt; choose your derectory -&gt; next -&gt; cancel</p>
<h4 id="Step-4：import-as-a-maven-project"><a href="#Step-4：import-as-a-maven-project" class="headerlink" title="Step 4：import as a maven project"></a>Step 4：import as a maven project</h4><p>如果你们是其他类型的 project 可以采用其他类型 project 的 import。</p>
<p><img src="./1515240594046.png" alt="Alt text"></p>
]]></content>
      <categories>
        <category>开发</category>
      </categories>
      <tags>
        <tag>github</tag>
        <tag>eclipse</tag>
      </tags>
  </entry>
  <entry>
    <title>eve-ng 使用 Windows 配置 锐捷防火墙</title>
    <url>/2024/06/01/eve-ng%20%E4%BD%BF%E7%94%A8%20Windows%20%E9%85%8D%E7%BD%AE%20%E9%94%90%E6%8D%B7%E9%98%B2%E7%81%AB%E5%A2%99/</url>
    <content><![CDATA[<p>使用 VMware Workstation 安装 eve-ng 环境，再把 锐捷防火墙和 win7 的 qcow2 镜像放入 /opt/unetlab/addons/qemu 下，在到浏览器中访问 eve 创建 lab 搭建网络结构。</p>
<span id="more"></span>

<p>先简单列一下命令</p>
<figure class="highlight bat"><table><tr><td class="code"><pre><span class="line">scp -r F:\ruijieFirewall_all\Ruijiefirewall.yml root@<span class="number">192</span>.<span class="number">168</span>.<span class="number">64</span>.<span class="number">11</span>:/opt/unetlab/html/templates/intel</span><br><span class="line"></span><br><span class="line">scp -r F:\ruijieFirewall_all\ruijiefirewall.png root@<span class="number">192</span>.<span class="number">168</span>.<span class="number">64</span>.<span class="number">11</span>:/opt/unetlab/html/images/icons </span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> -p /opt/unetlab/addons/qemu/Ruijiefirewall-<span class="number">1</span>.<span class="number">0</span> </span><br><span class="line"></span><br><span class="line">scp -r F:\ruijieFirewall_all\Ruijiefirewall-V1.<span class="number">03</span>\hda.qcow2 root@<span class="number">192</span>.<span class="number">168</span>.<span class="number">64</span>.<span class="number">11</span>:/opt/unetlab/addons/qemu/Ruijiefirewall-<span class="number">1</span>.<span class="number">0</span> </span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> -p /opt/unetlab/addons/qemu/win-xp</span><br><span class="line"></span><br><span class="line">scp -r F:\xp_qcow2\virtioa.qcow2 root@<span class="number">192</span>.<span class="number">168</span>.<span class="number">64</span>.<span class="number">11</span>:/opt/unetlab/addons/qemu/win-xp</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> -p /opt/unetlab/addons/qemu/win-<span class="number">7</span></span><br><span class="line"></span><br><span class="line">scp -r F:\win-<span class="number">7</span>-Ent-main\virtioa.qcow2 root@<span class="number">192</span>.<span class="number">168</span>.<span class="number">64</span>.<span class="number">11</span>:/opt/unetlab/addons/qemu/win-<span class="number">7</span></span><br><span class="line"></span><br><span class="line">scp -r F:\Ruijie_switch\Ruijieswitch.yml root@<span class="number">192</span>.<span class="number">168</span>.<span class="number">64</span>.<span class="number">11</span>:/opt/unetlab/html/templates/intel</span><br><span class="line"></span><br><span class="line">scp -r F:\Ruijie_switch\ruijieswitch.png root@<span class="number">192</span>.<span class="number">168</span>.<span class="number">64</span>.<span class="number">11</span>:/opt/unetlab/html/images/icons</span><br><span class="line"></span><br><span class="line">scp -r F:\Ruijie_switch\config_ruijie.py root@<span class="number">192</span>.<span class="number">168</span>.<span class="number">64</span>.<span class="number">11</span>:/opt/unetlab/scripts</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> -p /opt/unetlab/addons/qemu/Ruijieswitch-<span class="number">1</span>.<span class="number">0</span></span><br><span class="line"></span><br><span class="line">scp -r F:\Ruijie_switch\Ruijieswitch-V1.<span class="number">06</span>\hda.qcow2 root@<span class="number">192</span>.<span class="number">168</span>.<span class="number">64</span>.<span class="number">11</span>:/opt/unetlab/addons/qemu/Ruijieroute-<span class="number">1</span>.<span class="number">0</span></span><br><span class="line"></span><br><span class="line">/opt/unetlab/wrappers/unl_wrapper -a fixpermissions</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="首先下载-eve-ng-镜像"><a href="#首先下载-eve-ng-镜像" class="headerlink" title="首先下载 eve-ng 镜像"></a>首先下载 eve-ng 镜像</h4><p>我下载的地址是 <a href="https://www.ityww.cn/1982.html">https://www.ityww.cn/1982.html</a></p>
<p>然后把镜像安装到 VMware Workstation 虚拟机</p>
<h4 id="配置好-eve-ng-的静态-IP"><a href="#配置好-eve-ng-的静态-IP" class="headerlink" title="配置好 eve-ng 的静态 IP"></a>配置好 eve-ng 的静态 IP</h4><p><img src="./1718371153613.png" alt="Alt text"></p>
<h4 id="本地运行可以关闭防火墙"><a href="#本地运行可以关闭防火墙" class="headerlink" title="本地运行可以关闭防火墙"></a>本地运行可以关闭防火墙</h4><p><img src="./1718371379678.png" alt="Alt text"></p>
<h4 id="直接用浏览器访问配置的静态IP就行"><a href="#直接用浏览器访问配置的静态IP就行" class="headerlink" title="直接用浏览器访问配置的静态IP就行"></a>直接用浏览器访问配置的静态IP就行</h4><p>eve-ng 有开机自启动，启动虚拟机后可以直接使用浏览器访问</p>
<p><img src="./1718370749435.png" alt="Alt text"></p>
<p>记录一下，我设置的账号是 admin 密码是 eve</p>
<h4 id="根据锐捷的文档按步骤进行"><a href="#根据锐捷的文档按步骤进行" class="headerlink" title="根据锐捷的文档按步骤进行"></a>根据锐捷的文档按步骤进行</h4><p><img src="./1718372254231.png" alt="Alt text"></p>
<p><img src="./1718372349830.png" alt="Alt text"></p>
<p><img src="./1718372378492.png" alt="Alt text"></p>
<p><img src="./1718372401504.png" alt="Alt text"></p>
<p><img src="./1718372419274.png" alt="Alt text"></p>
<p><img src="./1718372431265.png" alt="Alt text"></p>
<p><img src="./1718372441000.png" alt="Alt text"></p>
<p><img src="./1718372466896.png" alt="Alt text"></p>
<p><img src="./1718372504385.png" alt="Alt text"></p>
<h4 id="用类似的方式再导入其他模拟元件"><a href="#用类似的方式再导入其他模拟元件" class="headerlink" title="用类似的方式再导入其他模拟元件"></a>用类似的方式再导入其他模拟元件</h4><p><img src="./1718372552508.png" alt="Alt text"></p>
<p><img src="./1718372599065.png" alt="Alt text"></p>
<h4 id="新建-lab-就可以使用了"><a href="#新建-lab-就可以使用了" class="headerlink" title="新建 lab 就可以使用了"></a>新建 lab 就可以使用了</h4><p><img src="./1718372639943.png" alt="Alt text"></p>
<p><img src="./1718372668936.png" alt="Alt text"></p>
<h4 id="锐捷防火墙的界面"><a href="#锐捷防火墙的界面" class="headerlink" title="锐捷防火墙的界面"></a>锐捷防火墙的界面</h4><p>可以使用 lab 中 win7 模拟设备访问 锐捷防火墙，最外部的物理机需要通过 VNC View 相关软件才能连接到 lab 中的 win7 虚拟机</p>
<p><img src="./1718376845601.png" alt="Alt text"></p>
<p>默认账号是 admin 密码被我改成了 root@1234</p>
<p><img src="./1718379434045.png" alt="Alt text"></p>
<p><img src="./1718379449769.png" alt="Alt text"></p>
<p><img src="./1718379474862.png" alt="Alt text"></p>
]]></content>
      <categories>
        <category>网络技术</category>
      </categories>
      <tags>
        <tag>其他</tag>
      </tags>
  </entry>
  <entry>
    <title>git 提交忽略一些文件、文件夹</title>
    <url>/2017/06/18/git%20%E6%8F%90%E4%BA%A4%E5%BF%BD%E7%95%A5%E4%B8%80%E4%BA%9B%E6%96%87%E4%BB%B6%E3%80%81%E6%96%87%E4%BB%B6%E5%A4%B9/</url>
    <content><![CDATA[<p>由于楼主使用的 idea 在 new project 的时候，会自动生成一个 .idea 文件，即一个 idea project 的配置文件，楼主并不想把他提交到 github，因为每个环境的 .idea 都是不一样的。</p>
<span id="more"></span>

<h4 id="Step-1：创建一个-gitignore-文件"><a href="#Step-1：创建一个-gitignore-文件" class="headerlink" title="Step 1：创建一个 .gitignore 文件"></a>Step 1：创建一个 .gitignore 文件</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">touch .gitignore</span><br></pre></td></tr></table></figure>

<h4 id="Step-2：往-gitignore-中添加需要忽略的文件、文件夹"><a href="#Step-2：往-gitignore-中添加需要忽略的文件、文件夹" class="headerlink" title="Step 2：往 .gitignore 中添加需要忽略的文件、文件夹"></a>Step 2：往 .gitignore 中添加需要忽略的文件、文件夹</h4><p>楼主这里需要忽略 .idea，直接写就好，貌似是支持正则表达式的，由于暂时没有用到，用到的时候再补充吧（比如 *.class 可以忽略 java 编译后产生的文件）</p>
<p><img src="./1497777915898.png" alt="Alt text"></p>
<h4 id="Step-3：直接使用-add-就好"><a href="#Step-3：直接使用-add-就好" class="headerlink" title="Step 3：直接使用 add . 就好"></a>Step 3：直接使用 add . 就好</h4><p>这样就不需要一个个 add 了，可以直接使用 add . 添加需要提交的文件，写在 .gitignore 中的文件不会 add 进去</p>
<p><img src="./1497778156022.png" alt="Alt text"></p>
]]></content>
      <categories>
        <category>开发</category>
      </categories>
      <tags>
        <tag>其他</tag>
        <tag>github</tag>
      </tags>
  </entry>
  <entry>
    <title>h5 在微信内置浏览器Safari踩的一些小坑(click、audio)</title>
    <url>/2021/02/07/h5%20%E5%9C%A8%E5%BE%AE%E4%BF%A1%E5%86%85%E7%BD%AE%E6%B5%8F%E8%A7%88%E5%99%A8Safari%E8%B8%A9%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B0%8F%E5%9D%91(click%E3%80%81audio)/</url>
    <content><![CDATA[<p>使用github page做了一个小静态网页，发现 click 时间、audio 在不同浏览器中的使用有细微差异。</p>
<span id="more"></span>

<h3 id="click"><a href="#click" class="headerlink" title="click"></a>click</h3><p>onclick 事件在微信内置浏览器中是无法正常被监听的，如果引用了 jquery 的话，可以参考如下写法</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="string">&quot;#id&quot;</span>).on(<span class="string">&quot;click&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;&#125;);</span><br></pre></td></tr></table></figure>

<h3 id="audio"><a href="#audio" class="headerlink" title="audio"></a>audio</h3><p>现今主流浏览器是无法支持 audio autostart 功能的，楼主只发现在 Edge 浏览器中还支持 autostart 自动播放功能，大多数浏览器（chrome、Safari）是需要用户一个交互事件才能实现 audio 音频的播放；
微信内置浏览器、Safari还无法实现 audio 的 preload 预加载功能， 需要把 audio 的 load 绑定到一个用户交互事件上，采用手动加载，如</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="string">&quot;#id&quot;</span>).on(<span class="string">&quot;click&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;$(<span class="string">&quot;#audio&quot;</span>)[<span class="number">0</span>].load()&#125;);</span><br></pre></td></tr></table></figure>

<p>先更这么多，以后有新发现再补充。</p>
<p>参考资料：
<a href="https://xiaohuazheng.github.io/2017/04/18/audio-player/">HTML audio基础API完全使用指南</a>
<a href="https://www.zhangxinxu.com/wordpress/2019/07/html-audio-api-guide/">Audio采坑</a></p>
]]></content>
      <categories>
        <category>h5</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo yelee local search 不能使用</title>
    <url>/2017/07/22/hexo%20yelee%20local%20search%20%E4%B8%8D%E8%83%BD%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<p>前几天楼主发现自家的博客的搜索功能不能用，在看了看文档和别人的 hexo 博客后，解决了这个问题，仅此记录。</p>
<span id="more"></span>

<h4 id="Step-1："><a href="#Step-1：" class="headerlink" title="Step 1："></a>Step 1：</h4><p>在安装了 npm 的情况下运行</p>
<figure class="highlight bat"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>

<p>安装 hexo-generator-search</p>
<h4 id="Step-2："><a href="#Step-2：" class="headerlink" title="Step 2："></a>Step 2：</h4><p>配置<strong>博客根目录</strong>下的 _config.yml</p>
<figure class="highlight bat"><table><tr><td class="code"><pre><span class="line"><span class="function">url: <span class="title">http</span>://<span class="title">yoursite.com</span></span></span><br></pre></td></tr></table></figure>

<p>楼主的是这个：</p>
<p><img src="./1500698623090.png" alt="Alt text"></p>
<h4 id="Step-3："><a href="#Step-3：" class="headerlink" title="Step 3："></a>Step 3：</h4><p>配置 <strong>yelee 主题</strong>下的  _config.yml</p>
<figure class="highlight bat"><table><tr><td class="code"><pre><span class="line"><span class="function">search: </span></span><br><span class="line"><span class="function">  <span class="title">on</span>: <span class="title">true</span></span></span><br><span class="line"><span class="function">  <span class="title">onload</span>: <span class="title">true</span></span></span><br></pre></td></tr></table></figure>

<h4 id="Step-4："><a href="#Step-4：" class="headerlink" title="Step 4："></a>Step 4：</h4><figure class="highlight bat"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s -p <span class="number">5000</span></span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>

<p>大功告成！</p>
]]></content>
      <categories>
        <category>开发</category>
      </categories>
      <tags>
        <tag>其他</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo&amp;马克飞象图片不能正常显示问题</title>
    <url>/2017/04/03/hexo&amp;%E9%A9%AC%E5%85%8B%E9%A3%9E%E8%B1%A1%E5%9B%BE%E7%89%87%E4%B8%8D%E8%83%BD%E6%AD%A3%E5%B8%B8%E6%98%BE%E7%A4%BA%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<p>楼主发现马克飞象写的文章虽然可以markdown导出，但是如果文章中有插图的话，却是生成一个.zip的压缩文件，如果直接把这个压缩文件解压缩放到 source_posts 目录下，使用 hexo s 可以发布，但是图片不能正常显示。</p>
<p>楼主忙活了大半天，找到了一个 hexo 插件<a href="https://github.com/CodeFalling/hexo-asset-image"><strong>hexo-asset-image</strong></a>，这个东西的使用方法如下：</p>
<span id="more"></span>
<h4 id="Step-1："><a href="#Step-1：" class="headerlink" title="Step 1："></a>Step 1：</h4><ul>
<li>安装hexo-asset-image，只需要在命令行中输入下列命令，就可以安装好。<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">npm install hexo-asset-image --save</span><br></pre></td></tr></table></figure>
<h4 id="Step-2："><a href="#Step-2：" class="headerlink" title="Step 2："></a>Step 2：</h4></li>
<li>修改hexo配置文件<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">url: https:<span class="comment">//github.com  </span></span><br><span class="line"></span><br><span class="line">post_asset_folder: <span class="keyword">true</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>对于这个 url 参数：
这个参数会用来定位图片的路径，可以影响 md 生成 html 的图片路径
如果你博客不是部署到github仓库的master branch下，会有所区别，这个逻辑有点复杂，楼主这里就不啰嗦了，如果不清楚可以自行改变这个值，然后看 hexo 发布网页中图片路径，或者看 hexo-asset-image 的源码
楼主使用的是master branch，所以这样写就好了，楼主博客的github 地址是 <a href="https://github.com/KnightDevelop/knightdevelop.github.io">https://github.com/KnightDevelop/knightdevelop.github.io</a></p>
</blockquote>
<h4 id="Step-3："><a href="#Step-3：" class="headerlink" title="Step 3："></a>Step 3：</h4></li>
<li>马克飞象导出markdown
<img src="./1491200548325.png" alt="Alt text"></li>
<li>导出的markdown解压缩，解压缩之后大概是这样的
<img src="./1491200654357.png" alt="Alt text"></li>
<li>然后把这个文件夹里的 .md 文件剪切到到 source_posts；把这个文件夹扔到 source_posts 下，注意文件夹名称和刚才剪切的 .md文件 保持一致
<img src="./1491200816484.png" alt="Alt text"><h4 id="Step-4："><a href="#Step-4：" class="headerlink" title="Step 4："></a>Step 4：</h4></li>
<li>hexo clean</li>
<li>hexo g</li>
<li>hexo s -p 5000</li>
<li>浏览器访问 <a href="http://localhost:5000/">http://localhost:5000/</a></li>
<li>图片显示正常
<img src="./1491200934249.png" alt="Alt text">
大功告成</li>
</ul>
]]></content>
      <categories>
        <category>开发</category>
      </categories>
      <tags>
        <tag>其他</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo blog 迁移到另一台电脑小记</title>
    <url>/2021/02/08/hexo%20blog%20%E8%BF%81%E7%A7%BB%E5%88%B0%E5%8F%A6%E4%B8%80%E5%8F%B0%E7%94%B5%E8%84%91%E5%B0%8F%E8%AE%B0/</url>
    <content><![CDATA[<p>最开始那套 hexo 是部署笔记本上的，台式机上一直没有部署，由于发 blog 不方便，顺便迁移一下</p>
<span id="more"></span>

<h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><ul>
<li>所有文件通过百度网盘备份一下</li>
</ul>
<p><img src="./1612770720951.png" alt="Alt text"></p>
<ul>
<li>安装 cmder、node.js、npm使用淘宝镜像、Git安装、git插件安装走一套</li>
</ul>
<p>参考命令：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br><span class="line">npm install hexo-cli -g</span><br><span class="line">hexo init</span><br><span class="line">npm install hexo --save</span><br><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>

<ul>
<li>github 添加好 ssh key</li>
</ul>
<p>楼主的 ssh-keygen 没有在 /c/Users/username 路径下生成 .ssh 文件夹，使用 cmder 手动生成了一个，把 kd_rsa（命名别的也行）、kd_ras.pub、config 文件手动放进去了</p>
<p>拷贝 kd_ras.pub 中的 key 放入 github ssh key， github 添加 ssh key 的页面为 <a href="https://github.com/settings/keys">https://github.com/settings/keys</a></p>
<p>生成空的 git config 文件，并配置，可参照 <a href="https://knightdevelop.github.io/2017/04/03/%E6%9C%AC%E5%9C%B0%E6%9C%89%E5%A4%9A%E4%B8%AAgithub%E8%B4%A6%E5%8F%B7%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8hexo%E9%83%A8%E7%BD%B2%E5%88%B0%E7%89%B9%E5%AE%9A%E8%B4%A6%E5%8F%B7/">https://knightdevelop.github.io/2017/04/03/%E6%9C%AC%E5%9C%B0%E6%9C%89%E5%A4%9A%E4%B8%AAgithub%E8%B4%A6%E5%8F%B7%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8hexo%E9%83%A8%E7%BD%B2%E5%88%B0%E7%89%B9%E5%AE%9A%E8%B4%A6%E5%8F%B7/</a>
配置好的 config 为</p>
<p><img src="./1612772237502.png" alt="Alt text"></p>
<p>Host knightdevelop
    Hostname github.com
    User git 
    IdentityFile ~/.ssh/kd_rsa</p>
<p>参考命令：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C “Knight-JXNU@outlook.com”</span><br><span class="line">clip &lt; ~/.ssh/kd_rsa.pub</span><br><span class="line">touch config</span><br></pre></td></tr></table></figure>

<p><img src="./1612771664703.png" alt="Alt text"></p>
<ul>
<li>hexo 升级后的配置变化（external_link）</li>
</ul>
<p>旧 external_link 配置</p>
<p>external_link: true</p>
<p><img src="./1612772737968.png" alt="Alt text"></p>
<p>新 external_link 配置</p>
<p>external_link: # Open external links in new tab，在新选项中打开链接
  enable: true # Open external links in new tab
  field: site # Apply to the whole site
  exclude: ‘’ </p>
<p><img src="./1612772774857.png" alt="Alt text"></p>
<ul>
<li>hexo deploy</li>
</ul>
<p>把网盘里备份的 source 放入新的 blog source 文件夹中 （主要看 _config.yml 文件 source_dir 配置的是啥，楼主这里是 source）</p>
<p>本以为 hexo d 就完事了，没想到出现了一个意外情况，copying 完没有 commit push 到 github page</p>
<p><img src="./1612772550677.png" alt="Alt text"></p>
<p>重装一下 hexo-deployer-git 插件好了</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">npm un hexo-deployer-git</span><br><span class="line">npm i hexojs/hexo-deployer-git</span><br></pre></td></tr></table></figure>

<p>参考资料：
<a href="https://github.com/hexojs/hexo/issues/4634">https://github.com/hexojs/hexo/issues/4634</a></p>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>hibernate jpa</title>
    <url>/2017/04/04/hibernate%20jpa/</url>
    <content><![CDATA[<p>楼主认为，hibernate 的 jpa 是使用 Class 和 table 的映射关系，在数据库中创建 table 的一种功能。</p>
<span id="more"></span>
<h4 id="1、一些基础的注解"><a href="#1、一些基础的注解" class="headerlink" title="1、一些基础的注解"></a>1、一些基础的注解</h4><h5 id="Entity"><a href="#Entity" class="headerlink" title="@Entity"></a>@Entity</h5><p>实体注解，使用这个注解并配置 hibernate 扫描包后，不需要写 xml 映射文件，一般写在 model class 上。</p>
<h5 id="Table"><a href="#Table" class="headerlink" title="@Table"></a>@Table</h5><ul>
<li>name
使用哪张表（table name）</li>
<li>catalog
使用哪个database</li>
<li>index
指定索引</li>
<li>scheme
指定scheme</li>
<li>uniqueConstraints
表上的唯一约束（保证是唯一的，没有重复的）
demo：<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Entity  <span class="comment">//实体的注解</span></span><br><span class="line"><span class="meta">@Table(name = &quot;T_PERSON&quot;,  //表名</span></span><br><span class="line"><span class="meta">		catalog = &quot;jpa&quot;,  //数据库</span></span><br><span class="line"><span class="meta">		schema = &quot;&quot;,</span></span><br><span class="line"><span class="meta">		uniqueConstraints = &#123; @UniqueConstraint(columnNames = &#123; &quot;id&quot; &#125;) &#125;)</span>  <span class="comment">//唯一约束</span></span><br></pre></td></tr></table></figure>
<h5 id="Id"><a href="#Id" class="headerlink" title="@Id"></a>@Id</h5>指定主键<h5 id="GeneratedValue"><a href="#GeneratedValue" class="headerlink" title="@GeneratedValue"></a>@GeneratedValue</h5></li>
<li>strategy
主键生成策略，有AUTO、INDENTITY、SEQUENCE 、 TABLE 4种</li>
</ul>
<blockquote>
</blockquote>
<p>TABLE：使用一个特定的数据库表格来保存主键。 （适用于跨不同数据库平台，了解即可）
SEQUENCE：根据底层数据库的序列来生成主键，条件是数据库支持序列。 （适用于oracle数据库）
IDENTITY：主键由数据库自动生成（主要是自动增长型） （适用于mysql等数据库）
AUTO：主键由程序控制。</p>
<ul>
<li>generator
主键生成器，这个要结合 @SequenceGenerator 或 @TableGenerator使用
demo：<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Id</span> <span class="comment">//指定主键</span></span><br><span class="line"><span class="meta">@SequenceGenerator(name = &quot;id_seq&quot;, sequenceName = &quot;person_id_seq&quot;)</span></span><br><span class="line"><span class="meta">@GeneratedValue(strategy = GenerationType.IDENTITY,</span></span><br><span class="line"><span class="meta">				generator=&quot;id_seq&quot;)</span></span><br><span class="line"><span class="comment">//strategy主键生成策略，有</span></span><br><span class="line"><span class="comment">//TABLE：使用一个特定的数据库表格来保存主键。 （适用于跨不同数据库平台，了解即可）</span></span><br><span class="line"><span class="comment">//SEQUENCE：根据底层数据库的序列来生成主键，条件是数据库支持序列。 （适用于oracle数据库）</span></span><br><span class="line"><span class="comment">//IDENTITY：主键由数据库自动生成（主要是自动增长型） （适用于mysql等数据库）</span></span><br><span class="line"><span class="comment">//AUTO：主键由程序控制。</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> id;</span><br></pre></td></tr></table></figure>
<h5 id="SequenceGenerator"><a href="#SequenceGenerator" class="headerlink" title="@SequenceGenerator"></a>@SequenceGenerator</h5></li>
<li><strong>name</strong> 
name属性是必传参数</li>
<li>allocationSize
序列号增量</li>
<li>initialValue
初始值，不能小于1</li>
<li>schema</li>
<li>sequenceName
demo：<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@SequenceGenerator(name = &quot;id_seq&quot;, </span></span><br><span class="line"><span class="meta">					sequenceName = &quot;person_id_seq&quot;, </span></span><br><span class="line"><span class="meta">					allocationSize = 2,</span></span><br><span class="line"><span class="meta">					initialValue = 3,</span></span><br><span class="line"><span class="meta">					schema = &quot;&quot;,</span></span><br><span class="line"><span class="meta">					catalog = &quot;jpa&quot;)</span></span><br></pre></td></tr></table></figure>
<h5 id="Column"><a href="#Column" class="headerlink" title="@Column"></a>@Column</h5></li>
<li>columnDefinition
建表时插入的sql片段</li>
<li>insertable
hibernate insert 语句是否包含此字段，默认为true</li>
<li>length
长度</li>
<li>name</li>
<li>nullable
是否可以为空</li>
<li>precision
位数（十进制），貌似在postgresql中不起作用</li>
<li>scale
小数位数（十进制），貌似在postgresql中不起作用</li>
<li>table</li>
<li>unique
是否唯一</li>
<li>updatable
hibernate update 语句是否包含此字段，默认为true</li>
</ul>
<p>project url：<a href="https://github.com/Knight-JNXU/JavaFundation/tree/HibernateJpa">https://github.com/Knight-JNXU/JavaFundation/tree/HibernateJpa</a>
未完待续
    </p>
]]></content>
      <categories>
        <category>开发</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>hibernate</tag>
      </tags>
  </entry>
  <entry>
    <title>java的装箱、拆箱</title>
    <url>/2017/04/17/java%E7%9A%84%E8%A3%85%E7%AE%B1%E3%80%81%E6%8B%86%E7%AE%B1/</url>
    <content><![CDATA[<p>从Integer出发，理解java的装箱、拆箱机制。
楼主遇到一个问题</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Integer m &#x3D; 1;</span><br><span class="line">Integer n &#x3D; 1;</span><br><span class="line">System.out.println(m&#x3D;&#x3D;n);</span><br><span class="line">Integer p &#x3D; 1000;</span><br><span class="line">Integer q &#x3D; 1000;</span><br><span class="line">System.out.println(p&#x3D;&#x3D;q);</span><br></pre></td></tr></table></figure>
<p>答案是：
true
false
为什么会出现这种结果呢，就是因为 java 的装箱和拆箱机制，且听楼主慢慢道来。</p>
<span id="more"></span>

<p>**注：全篇使用 JDK 1.7 **</p>
<h4 id="1-1-but-1000-1000"><a href="#1-1-but-1000-1000" class="headerlink" title="1==1 but 1000!=1000"></a>1==1 but 1000!=1000</h4><p>查阅了一些资料，发现当 Integer 在 [-128, 127]（闭区间）之间时，temp1==temp2，不在此区间时 temp1!=temp2，源码如下</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@author</span> knight</span></span><br><span class="line"><span class="comment">* <span class="doctag">@createtime</span> : 下午1:16:15</span></span><br><span class="line"><span class="comment">* <span class="doctag">@description</span> : </span></span><br><span class="line"><span class="comment">* <span class="doctag">@result</span> : </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IntegerEqualQuestion</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> start = -<span class="number">129</span>;</span><br><span class="line">        <span class="keyword">int</span> end = <span class="number">128</span>;</span><br><span class="line">        Integer temp1;</span><br><span class="line">        Integer temp2;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=start; i&lt;=end; i++)&#123;</span><br><span class="line">            temp1 = i;</span><br><span class="line">            temp2 = i;</span><br><span class="line">            System.out.println(<span class="string">&quot;new Integer(&quot;</span> + i + <span class="string">&quot;):&quot;</span> + (temp1==temp2));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>运行 IntegerEqualQuestion main</p>
<p><img src="./temp-129.png" alt="Alt text"></p>
<p><img src="./temp128.png" alt="Alt text"></p>
<p>一眼看不出装箱、拆箱的痕迹，看看编译器有没有做什么手脚
使用 javac 编译上述文件
把编译后的 .class 文件与 .java 文件对比</p>
<p><img src="./1492431783296.png" alt="Alt text"></p>
<p>发现原来的直接赋值被替换成了 Integer.valueOf</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Returns an &#123;<span class="doctag">@code</span> Integer&#125; instance representing the specified</span></span><br><span class="line"><span class="comment">* &#123;<span class="doctag">@code</span> int&#125; value.  If a new &#123;<span class="doctag">@code</span> Integer&#125; instance is not</span></span><br><span class="line"><span class="comment">* required, this method should generally be used in preference to</span></span><br><span class="line"><span class="comment">* the constructor &#123;<span class="doctag">@link</span> #Integer(int)&#125;, as this method is likely</span></span><br><span class="line"><span class="comment">* to yield significantly better space and time performance by</span></span><br><span class="line"><span class="comment">* caching frequently requested values.</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* This method will always cache values in the range -128 to 127,</span></span><br><span class="line"><span class="comment">* inclusive, and may cache other values outside of this range.</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span>  i an &#123;<span class="doctag">@code</span> int&#125; value.</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span> an &#123;<span class="doctag">@code</span> Integer&#125; instance representing &#123;<span class="doctag">@code</span> i&#125;.</span></span><br><span class="line"><span class="comment">* <span class="doctag">@since</span>  1.5</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Integer <span class="title">valueOf</span><span class="params">(<span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line">   <span class="comment">//断言 high&gt;=127</span></span><br><span class="line">   <span class="keyword">assert</span> IntegerCache.high &gt;= <span class="number">127</span>;  </span><br><span class="line">   <span class="comment">//判断传入参数 i 是否在范围之间</span></span><br><span class="line">   <span class="comment">//如果是，返回 IntegerCache.cache 数组中索引为 i + (-IntegerCache.low) 的元素</span></span><br><span class="line">   <span class="comment">//如果不是，返回一个新的 Integer 对像</span></span><br><span class="line">   <span class="keyword">if</span> (i &gt;= IntegerCache.low &amp;&amp; i &lt;= IntegerCache.high)  </span><br><span class="line">       <span class="keyword">return</span> IntegerCache.cache[i + (-IntegerCache.low)];</span><br><span class="line">   <span class="keyword">return</span> <span class="keyword">new</span> Integer(i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">IntegerCache</span> </span>&#123;</span><br><span class="line">	<span class="comment">//low定义为-128</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> low = -<span class="number">128</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> high;</span><br><span class="line">    <span class="comment">//定义一个 cache 数组</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> Integer cache[];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="comment">// high value may be configured by property</span></span><br><span class="line">        <span class="keyword">int</span> h = <span class="number">127</span>;</span><br><span class="line">        <span class="comment">//大概是从 jvm 中取出Integer对象缓冲池的high值，没有仔细研究</span></span><br><span class="line">        String integerCacheHighPropValue =</span><br><span class="line">            sun.misc.VM.getSavedProperty(<span class="string">&quot;java.lang.Integer.IntegerCache.high&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (integerCacheHighPropValue != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">int</span> i = parseInt(integerCacheHighPropValue);</span><br><span class="line">            i = Math.max(i, <span class="number">127</span>);</span><br><span class="line">            <span class="comment">// Maximum array size is Integer.MAX_VALUE</span></span><br><span class="line">            h = Math.min(i, Integer.MAX_VALUE - (-low));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//给high赋值</span></span><br><span class="line">        high = h;</span><br><span class="line"></span><br><span class="line">		<span class="comment">//创建数组对象赋值给 cache</span></span><br><span class="line">		<span class="comment">//大小为 (high-low)+1</span></span><br><span class="line">		<span class="comment">//类型为 Integer</span></span><br><span class="line">        cache = <span class="keyword">new</span> Integer[(high - low) + <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">int</span> j = low;</span><br><span class="line">        <span class="comment">//给 cache 中的元素赋值，满足 cache[i]=i+low</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; cache.length; k++)</span><br><span class="line">            cache[k] = <span class="keyword">new</span> Integer(j++);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">IntegerCache</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="延伸：探究-sun-misc-VM-getSavedProperty-“java-lang-Integer-IntegerCache-high”"><a href="#延伸：探究-sun-misc-VM-getSavedProperty-“java-lang-Integer-IntegerCache-high”" class="headerlink" title="延伸：探究 sun.misc.VM.getSavedProperty(“java.lang.Integer.IntegerCache.high”);"></a>延伸：探究 sun.misc.VM.getSavedProperty(“java.lang.Integer.IntegerCache.high”);</h4><p>发现这个值是可以通过 jvm 参数设置的，默认是 127，如下可以将这个值设置为200</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">-Djava.lang.Integer.IntegerCache.high=<span class="number">200</span></span><br></pre></td></tr></table></figure>
<p>运行 IntegerEqualQuestion main</p>
<p><img src="./1492434502062.png" alt="Alt text"></p>
<h4 id="结论："><a href="#结论：" class="headerlink" title="结论："></a>结论：</h4><p>当使用 Integer a = b; b为一个int类型的数据创建一个 Integer 时
如果 b 满足 b&lt;=high &amp;&amp; b&gt;=low (默认 high=127，low=-128，可以设置 high 的值)，返回 cache[b+high]
如果 b 不满足上述条件，返回一个新的 Integer
所以，</p>
<blockquote>
<p>有 Integer m=1; Integer n=1; 时
m==n;<br>此时m、n 都是 cache[1+high]</p>
</blockquote>
<hr>
<blockquote>
<p>有 Integer p=1000; Integer q=1000; 时
p!=q;
此时 p 是一个新创建的 Integer 对象，q 是一个新创建的 Integer 对象</p>
</blockquote>
<h4 id="简单的流程图"><a href="#简单的流程图" class="headerlink" title="简单的流程图"></a>简单的流程图</h4><p><img src="./1492436330412.png" alt="Alt text"></p>
]]></content>
      <categories>
        <category>开发</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>基础</tag>
      </tags>
  </entry>
  <entry>
    <title>linux 环境变量设置</title>
    <url>/2018/07/12/linux%20%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E8%AE%BE%E7%BD%AE/</url>
    <content><![CDATA[<p>近期，公司业务需要用到设置的环境变量进行加、解密操作，楼主在移除环境变量时，掉坑里了，特此记录T T，以下皆为 Ubuntu 的环境变量配置。</p>
<span id="more"></span>

<h3 id="profile-与-etc-environment"><a href="#profile-与-etc-environment" class="headerlink" title="~/.profile 与 /etc/environment"></a>~/.profile 与 /etc/environment</h3><blockquote>
<p><strong>~/.profile：</strong>用户环境变量</p>
</blockquote>
<blockquote>
<p><strong>/etc/environment：</strong>系统环境变量</p>
</blockquote>
<h3 id="新增、修改、删除环境变量"><a href="#新增、修改、删除环境变量" class="headerlink" title="新增、修改、删除环境变量"></a>新增、修改、删除环境变量</h3><p>编辑  /etc/environment ，保存退出即可</p>
]]></content>
      <categories>
        <category>系统</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>log4j debug info warn error</title>
    <url>/2017/04/17/log4j%20debug%20info%20warn%20error/</url>
    <content><![CDATA[<p>简单谈谈 log4j 的 info warn debug error 四个日志级别的使用场景的理解</p>
<table>
<thead>
<tr>
  <th align="center">日志级别</th>
  <th align="center">使用场景</th>
</tr>
</thead>
<tbody><tr>
  <td align="center">debug</td>
  <td align="center">可用于junit单元测试</td>
</tr>
<tr>
  <td align="center">info</td>
  <td align="center">可用于controller、manager、dao追踪程序执行流程</td>
</tr>
<tr>
  <td align="center">warn</td>
  <td align="center">输出具有潜在风险的信息，暂时没有使用过</td>
</tr>
<tr>
  <td align="center">error</td>
  <td align="center">可用于异常处理，比如全局异常的处理，使用error级别输出异常信息</td>
</tr>
</tbody></table>]]></content>
      <categories>
        <category>开发</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>log4j</tag>
      </tags>
  </entry>
  <entry>
    <title>maven build debug 无法进入 .class 文件</title>
    <url>/2017/06/07/maven%20build%20debug%20%E6%97%A0%E6%B3%95%E8%BF%9B%E5%85%A5%20.class%20%E6%96%87%E4%BB%B6/</url>
    <content><![CDATA[<p>今天楼主在做开发的时候，发现使用 maven build 运行的 project 无法再 debug 模式下进入断点，在同事的帮助下弄好了，特此记录！</p>
<span id="more"></span>

<h4 id="Step-1："><a href="#Step-1：" class="headerlink" title="Step 1："></a>Step 1：</h4><p>找到相应的 .class 文件，ctrl+shift+t 找到源文件位置</p>
<p><img src="./1497154356802.png" alt="Alt text"></p>
<h4 id="Step-2："><a href="#Step-2：" class="headerlink" title="Step 2："></a>Step 2：</h4><ul>
<li>配置 maven build 的 resource</li>
</ul>
<p><img src="./1496847135868.png" alt="Alt text"></p>
<ul>
<li>选择 java classpath variable -&gt; ok</li>
</ul>
<p><img src="./1496847158462.png" alt="Alt text"></p>
<ul>
<li>选择 maven 的 repository -&gt; extend…</li>
</ul>
<p><img src="./1496847181696.png" alt="Alt text"></p>
<ul>
<li>选择相应 jar 包就好</li>
</ul>
<p><img src="./1496847198941.png" alt="Alt text"></p>
<h4 id="Step-3："><a href="#Step-3：" class="headerlink" title="Step 3："></a>Step 3：</h4><p>重新 maven build debug 就好！</p>
]]></content>
      <categories>
        <category>开发</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>其他</tag>
      </tags>
  </entry>
  <entry>
    <title>post &amp; get</title>
    <url>/2017/04/06/post%20&amp;%20get/</url>
    <content><![CDATA[<p>post 和 get 的比较</p>
<table>
<tr>
  <th align="center">–</th>
  <th align="center">get</th>
  <th align="center">post</th>
</tr>
<tr>
  <td align="center">幂等性</td>
  <td align="center">幂等</td>
  <td align="center">不幂等</td>
</tr>
<tr>
  <td align="center">服务器</td>
  <td align="center">服务器资源没有被改变</td>
  <td align="center">服务器资源被改变</td>
</tr>
<tr>
  <td align="center">传输数据</td>
  <td align="center">传输的数据容易暴露</td>
  <td align="center">传输的数据不容易暴露</td>
</tr>
</table>

<p>思来想去发现只能写这么多。。</p>
]]></content>
      <categories>
        <category>开发</category>
      </categories>
      <tags>
        <tag>其他</tag>
        <tag>web</tag>
      </tags>
  </entry>
  <entry>
    <title>maven tomcat plugin 使用</title>
    <url>/2017/04/05/maven%20tomcat%20plugin%20%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<p>使用 maven 的 tomcat plugin 插件运行 webapp 不需要配置 tomcat server，直接使用 maven build 就可以运行。</p>
<span id="more"></span>
<h4 id="Step-1-创建一个基于-maven-的webapp"><a href="#Step-1-创建一个基于-maven-的webapp" class="headerlink" title="Step 1: 创建一个基于 maven 的webapp"></a>Step 1: 创建一个基于 maven 的webapp</h4><p>file -&gt; new -&gt; maven project -&gt; input group id &amp; artifact id </p>
<p><img src="./1491400558891.png" alt="Alt text">
<img src="./1491400593758.png" alt="Alt text"></p>
<h4 id="Step-2-add-tomcat-plugins-in-pom-xml"><a href="#Step-2-add-tomcat-plugins-in-pom-xml" class="headerlink" title="Step 2 : add tomcat plugins in pom.xml"></a>Step 2 : add tomcat plugins in pom.xml</h4><figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;build&gt;</span><br><span class="line">  &lt;finalName&gt;the name your want&lt;/finalName&gt;</span><br><span class="line">  &lt;plugins&gt;</span><br><span class="line">	&lt;plugin&gt;</span><br><span class="line">    	&lt;groupId&gt;org.apache.tomcat.maven&lt;/groupId&gt;</span><br><span class="line">    	&lt;artifactId&gt;tomcat7-maven-plugin&lt;/artifactId&gt;</span><br><span class="line">    	&lt;version&gt;2.2&lt;/version&gt;</span><br><span class="line">    	&lt;configuration&gt;</span><br><span class="line">	   	&lt;path&gt;/&lt;/path&gt;</span><br><span class="line">	  	&lt;/configuration&gt;</span><br><span class="line">    &lt;/plugin&gt;</span><br><span class="line">&lt;/plugins&gt;</span><br><span class="line">&lt;/build&gt;</span><br></pre></td></tr></table></figure>
<p>选中 project -&gt; 右键 -&gt; maven -&gt; update project…</p>
<h4 id="Step-3-maven-clean-amp-maven-install"><a href="#Step-3-maven-clean-amp-maven-install" class="headerlink" title="Step 3 : maven clean &amp; maven install"></a>Step 3 : maven clean &amp; maven install</h4><p>选中 project -&gt; 右键 -&gt; maven clean -&gt; maven install</p>
<p><img src="./1491400733115.png" alt="Alt text"></p>
<h4 id="Step-4-maven-build"><a href="#Step-4-maven-build" class="headerlink" title="Step 4 : maven build"></a>Step 4 : maven build</h4><p>点击 debug 标志上的三角形 -&gt; debug configurations… -&gt; 点击 workspace -&gt; select your workspace -&gt; input tomcat7:run in goals -&gt; apply -&gt; debug</p>
<p><img src="./1491400843256.png" alt="Alt text">
<img src="./1491400935546.png" alt="Alt text"></p>
<h4 id="Step-5-visit-your-webapp"><a href="#Step-5-visit-your-webapp" class="headerlink" title="Step 5 : visit your webapp"></a>Step 5 : visit your webapp</h4><p><img src="./1491401082499.png" alt="Alt text"></p>
<p>如果没有抛任何异常，表明 webapp 成功在 maven tomcat plugin 上启动了
，访问相应的 url 就行了</p>
<p><img src="./1491401173279.png" alt="Alt text"></p>
]]></content>
      <categories>
        <category>开发</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>eclipse</tag>
        <tag>maven</tag>
      </tags>
  </entry>
  <entry>
    <title>python 文件打包 exe</title>
    <url>/2024/10/20/python%20%E6%96%87%E4%BB%B6%E6%89%93%E5%8C%85%20exe/</url>
    <content><![CDATA[<p>写了自动解压个马克飞象md压缩包的python代码，打算把它转成 exe 文件</p>
<span id="more"></span>

<p>安装 pyinstaller</p>
<p><img src="./1729409565843.png" alt="Alt text"></p>
<p>直接执行
pyinstaller –onefile 解压马克飞象打包的md文件.py 搞定</p>
<p><img src="./1729409944385.png" alt="Alt text"></p>
<p><img src="./1729409871520.png" alt="Alt text"></p>
]]></content>
      <categories>
        <category>其他</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>solr+db</title>
    <url>/2017/05/28/solr+db/</url>
    <content><![CDATA[<p>solr 可以从数据库中取出数据建立 index，这样就可以通过 solr 查询数据库中的数据了。
那么 solr 如何结合数据库使用？</p>
<span id="more"></span>

<h4 id="Step-1：创建-database、table"><a href="#Step-1：创建-database、table" class="headerlink" title="Step 1：创建 database、table"></a>Step 1：创建 database、table</h4><p>创建 solrdb 数据库</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> database solrdb;</span><br></pre></td></tr></table></figure>
<p>创建自增序列</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> sequence serial_id increment <span class="keyword">by</span> <span class="number">1</span> minvalue <span class="number">1</span> <span class="keyword">no</span> maxvalue <span class="keyword">start</span> <span class="keyword">with</span> <span class="number">1</span>;</span><br></pre></td></tr></table></figure>
<p>创建表</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> t_item_category</span><br><span class="line">(</span><br><span class="line">	id int8 <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">primary</span> <span class="keyword">key</span> <span class="keyword">default</span> nextval(<span class="string">&#x27;serial_id&#x27;</span>),</span><br><span class="line">	item_id int8,</span><br><span class="line">	category_id int8</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> t_item</span><br><span class="line">(</span><br><span class="line">	id int8 <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">primary</span> <span class="keyword">key</span>,</span><br><span class="line">	name <span class="type">varchar</span>(<span class="number">256</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> t_category</span><br><span class="line">(</span><br><span class="line">	id int8 <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">primary</span> <span class="keyword">key</span>,</span><br><span class="line">	name <span class="type">varchar</span>(<span class="number">256</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure>
<p>插入数据</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_item_category(item_id, category_id) <span class="keyword">values</span>(<span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_item_category(item_id, category_id) <span class="keyword">values</span>(<span class="number">2</span>, <span class="number">1</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_item <span class="keyword">values</span>(<span class="number">1</span>, <span class="string">&#x27;Reebok GL 6000 ND&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_item <span class="keyword">values</span>(<span class="number">2</span>, <span class="string">&#x27;Reebok AZTEC RETRO &#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_category <span class="keyword">values</span>(<span class="number">1</span>, <span class="string">&#x27;鞋 &#x27;</span>);</span><br></pre></td></tr></table></figure>

<p><strong>postgresql表结构</strong></p>
<p><img src="./1495945601699.png" alt="Alt text"></p>
<h4 id="Step-2：solr配置"><a href="#Step-2：solr配置" class="headerlink" title="Step 2：solr配置"></a>Step 2：solr配置</h4><p>在 solr\example\example-DIH\solr 拷贝一个文件夹，重命名（我这里是 solrdb）</p>
<p><img src="./1495953857895.png" alt="Alt text"></p>
<p>把数据库与java连接的jar放入solrdb\lib中，我这里是 postgresql-9.2-1002-jdbc4.jar 包</p>
<p><img src="./1495954126695.png" alt="Alt text"></p>
<p>进入 solrdb\conf ，修改 solrconfig.xml、db-data-config.xml、managed-schema 配置文件</p>
<p><img src="./1495953948307.png" alt="Alt text"></p>
<p>solrconfig.xml 配置
找到 </p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;lib dir=<span class="string">&quot;$&#123;solr.install.dir:../../../..&#125;/dist/&quot;</span> regex=<span class="string">&quot;solr-velocity-\d.*\.jar&quot;</span> /&gt; </span><br></pre></td></tr></table></figure>
<p>在下面添加 postgresql-9.2-1002-jdbc4.jar 的引用</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;lib dir=<span class="string">&quot;C:/Users/hasee/Desktop/solr-6.5.1/solr-6.5.1/example/example-DIH/solr/pgdb/lib/&quot;</span> regex=<span class="string">&quot;postgresql-9.2-1002-jdbc4.jar&quot;</span>/&gt;</span><br></pre></td></tr></table></figure>

<p>db-data-config.xml 配置
数据库配置</p>
<figure class="highlight vbscript-html"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">dataConfig</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;JdbcDataSource&quot;</span> </span></span></span><br><span class="line"><span class="xml">              driver=&quot;org.postgresql.Driver&quot;</span></span><br><span class="line"><span class="xml">              url=&quot;jdbc:postgresql://127.0.0.1/solrdb&quot; </span></span><br><span class="line"><span class="xml">              user=&quot;postgres&quot;</span></span><br><span class="line"><span class="xml">              encoding=&quot;UTF-8&quot;</span></span><br><span class="line"><span class="xml">              password=&quot;4005&quot;/&gt;</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">document</span>&gt;</span></span></span><br><span class="line"><span class="xml">		<span class="comment">&lt;!--分类--&gt;</span></span></span><br><span class="line"><span class="xml">		<span class="tag">&lt;<span class="name">entity</span> <span class="attr">name</span>=<span class="string">&quot;tItemIdCategory&quot;</span> <span class="attr">pk</span>=<span class="string">&quot;id&quot;</span></span></span></span><br><span class="line"><span class="xml">		query=&quot;select id, item_id, category_id from t_item_category&quot;&gt;</span></span><br><span class="line"><span class="xml">			<span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;id&quot;</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">			<span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;item_id&quot;</span> <span class="attr">column</span>=<span class="string">&quot;item_id&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">			<span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;category_id&quot;</span> <span class="attr">column</span>=<span class="string">&quot;category_id&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">			<span class="tag">&lt;<span class="name">entity</span> <span class="attr">name</span>=<span class="string">&quot;categoryName&quot;</span> <span class="attr">query</span>=<span class="string">&quot;select id, name from t_category where id=&#x27;$&#123;tItemIdCategory.category_id&#125;&#x27;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">				<span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;category_name&quot;</span> <span class="attr">column</span>=<span class="string">&quot;name&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">			<span class="tag">&lt;/<span class="name">entity</span>&gt;</span></span></span><br><span class="line"><span class="xml">		<span class="tag">&lt;/<span class="name">entity</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">document</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">dataConfig</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<p>managed-schema 配置
公共部分，定义一些数据类型</p>
<figure class="highlight vbscript-html"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="comment">&lt;!-- 表示id是必须出现的键 --&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">uniqueKey</span>&gt;</span>id<span class="tag">&lt;/<span class="name">uniqueKey</span>&gt;</span> </span></span><br><span class="line"></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">fieldType</span> <span class="attr">name</span>=<span class="string">&quot;alphaOnlySort&quot;</span> <span class="attr">class</span>=<span class="string">&quot;solr.TextField&quot;</span> <span class="attr">omitNorms</span>=<span class="string">&quot;true&quot;</span> <span class="attr">sortMissingLast</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">tokenizer</span> <span class="attr">class</span>=<span class="string">&quot;solr.KeywordTokenizerFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.LowerCaseFilterFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.TrimFilterFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.PatternReplaceFilterFactory&quot;</span> <span class="attr">pattern</span>=<span class="string">&quot;([^a-z])&quot;</span> <span class="attr">replace</span>=<span class="string">&quot;all&quot;</span> <span class="attr">replacement</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">fieldType</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">fieldType</span> <span class="attr">name</span>=<span class="string">&quot;ancestor_path&quot;</span> <span class="attr">class</span>=<span class="string">&quot;solr.TextField&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">analyzer</span> <span class="attr">type</span>=<span class="string">&quot;index&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">tokenizer</span> <span class="attr">class</span>=<span class="string">&quot;solr.KeywordTokenizerFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">analyzer</span> <span class="attr">type</span>=<span class="string">&quot;query&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">tokenizer</span> <span class="attr">class</span>=<span class="string">&quot;solr.PathHierarchyTokenizerFactory&quot;</span> <span class="attr">delimiter</span>=<span class="string">&quot;/&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">fieldType</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">fieldType</span> <span class="attr">name</span>=<span class="string">&quot;binary&quot;</span> <span class="attr">class</span>=<span class="string">&quot;solr.BinaryField&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">fieldType</span> <span class="attr">name</span>=<span class="string">&quot;boolean&quot;</span> <span class="attr">class</span>=<span class="string">&quot;solr.BoolField&quot;</span> <span class="attr">sortMissingLast</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">fieldType</span> <span class="attr">name</span>=<span class="string">&quot;currency&quot;</span> <span class="attr">class</span>=<span class="string">&quot;solr.CurrencyField&quot;</span> <span class="attr">currencyConfig</span>=<span class="string">&quot;currency.xml&quot;</span> <span class="attr">defaultCurrency</span>=<span class="string">&quot;USD&quot;</span> <span class="attr">precisionStep</span>=<span class="string">&quot;8&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">fieldType</span> <span class="attr">name</span>=<span class="string">&quot;date&quot;</span> <span class="attr">class</span>=<span class="string">&quot;solr.TrieDateField&quot;</span> <span class="attr">positionIncrementGap</span>=<span class="string">&quot;0&quot;</span> <span class="attr">precisionStep</span>=<span class="string">&quot;0&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">fieldType</span> <span class="attr">name</span>=<span class="string">&quot;descendent_path&quot;</span> <span class="attr">class</span>=<span class="string">&quot;solr.TextField&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">analyzer</span> <span class="attr">type</span>=<span class="string">&quot;index&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">tokenizer</span> <span class="attr">class</span>=<span class="string">&quot;solr.PathHierarchyTokenizerFactory&quot;</span> <span class="attr">delimiter</span>=<span class="string">&quot;/&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">analyzer</span> <span class="attr">type</span>=<span class="string">&quot;query&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">tokenizer</span> <span class="attr">class</span>=<span class="string">&quot;solr.KeywordTokenizerFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">fieldType</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">fieldType</span> <span class="attr">name</span>=<span class="string">&quot;double&quot;</span> <span class="attr">class</span>=<span class="string">&quot;solr.TrieDoubleField&quot;</span> <span class="attr">positionIncrementGap</span>=<span class="string">&quot;0&quot;</span> <span class="attr">precisionStep</span>=<span class="string">&quot;0&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">fieldType</span> <span class="attr">name</span>=<span class="string">&quot;float&quot;</span> <span class="attr">class</span>=<span class="string">&quot;solr.TrieFloatField&quot;</span> <span class="attr">positionIncrementGap</span>=<span class="string">&quot;0&quot;</span> <span class="attr">precisionStep</span>=<span class="string">&quot;0&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">fieldType</span> <span class="attr">name</span>=<span class="string">&quot;ignored&quot;</span> <span class="attr">class</span>=<span class="string">&quot;solr.StrField&quot;</span> <span class="attr">indexed</span>=<span class="string">&quot;false&quot;</span> <span class="attr">stored</span>=<span class="string">&quot;false&quot;</span> <span class="attr">multiValued</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">fieldType</span> <span class="attr">name</span>=<span class="string">&quot;int&quot;</span> <span class="attr">class</span>=<span class="string">&quot;solr.TrieIntField&quot;</span> <span class="attr">positionIncrementGap</span>=<span class="string">&quot;0&quot;</span> <span class="attr">precisionStep</span>=<span class="string">&quot;0&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">fieldType</span> <span class="attr">name</span>=<span class="string">&quot;location&quot;</span> <span class="attr">class</span>=<span class="string">&quot;solr.LatLonType&quot;</span> <span class="attr">subFieldSuffix</span>=<span class="string">&quot;_coordinate&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">fieldType</span> <span class="attr">name</span>=<span class="string">&quot;location_rpt&quot;</span> <span class="attr">class</span>=<span class="string">&quot;solr.SpatialRecursivePrefixTreeFieldType&quot;</span> <span class="attr">geo</span>=<span class="string">&quot;true&quot;</span> <span class="attr">maxDistErr</span>=<span class="string">&quot;0.001&quot;</span> <span class="attr">distErrPct</span>=<span class="string">&quot;0.025&quot;</span> <span class="attr">distanceUnits</span>=<span class="string">&quot;kilometers&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">fieldType</span> <span class="attr">name</span>=<span class="string">&quot;long&quot;</span> <span class="attr">class</span>=<span class="string">&quot;solr.TrieLongField&quot;</span> <span class="attr">positionIncrementGap</span>=<span class="string">&quot;0&quot;</span> <span class="attr">precisionStep</span>=<span class="string">&quot;0&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">fieldType</span> <span class="attr">name</span>=<span class="string">&quot;lowercase&quot;</span> <span class="attr">class</span>=<span class="string">&quot;solr.TextField&quot;</span> <span class="attr">positionIncrementGap</span>=<span class="string">&quot;100&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">tokenizer</span> <span class="attr">class</span>=<span class="string">&quot;solr.KeywordTokenizerFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.LowerCaseFilterFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">fieldType</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">fieldType</span> <span class="attr">name</span>=<span class="string">&quot;payloads&quot;</span> <span class="attr">class</span>=<span class="string">&quot;solr.TextField&quot;</span> <span class="attr">indexed</span>=<span class="string">&quot;true&quot;</span> <span class="attr">stored</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">tokenizer</span> <span class="attr">class</span>=<span class="string">&quot;solr.WhitespaceTokenizerFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.DelimitedPayloadTokenFilterFactory&quot;</span> <span class="attr">encoder</span>=<span class="string">&quot;float&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">fieldType</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">fieldType</span> <span class="attr">name</span>=<span class="string">&quot;phonetic&quot;</span> <span class="attr">class</span>=<span class="string">&quot;solr.TextField&quot;</span> <span class="attr">indexed</span>=<span class="string">&quot;true&quot;</span> <span class="attr">stored</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">tokenizer</span> <span class="attr">class</span>=<span class="string">&quot;solr.StandardTokenizerFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.DoubleMetaphoneFilterFactory&quot;</span> <span class="attr">inject</span>=<span class="string">&quot;false&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">fieldType</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">fieldType</span> <span class="attr">name</span>=<span class="string">&quot;point&quot;</span> <span class="attr">class</span>=<span class="string">&quot;solr.PointType&quot;</span> <span class="attr">subFieldSuffix</span>=<span class="string">&quot;_d&quot;</span> <span class="attr">dimension</span>=<span class="string">&quot;2&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">fieldType</span> <span class="attr">name</span>=<span class="string">&quot;random&quot;</span> <span class="attr">class</span>=<span class="string">&quot;solr.RandomSortField&quot;</span> <span class="attr">indexed</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="comment">&lt;!-- 排序字段值缺失，是排前面还是排后面 --&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">fieldType</span> <span class="attr">name</span>=<span class="string">&quot;string&quot;</span> <span class="attr">class</span>=<span class="string">&quot;solr.StrField&quot;</span> <span class="attr">sortMissingLast</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">fieldType</span> <span class="attr">name</span>=<span class="string">&quot;tdate&quot;</span> <span class="attr">class</span>=<span class="string">&quot;solr.TrieDateField&quot;</span> <span class="attr">positionIncrementGap</span>=<span class="string">&quot;0&quot;</span> <span class="attr">precisionStep</span>=<span class="string">&quot;6&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">fieldType</span> <span class="attr">name</span>=<span class="string">&quot;tdouble&quot;</span> <span class="attr">class</span>=<span class="string">&quot;solr.TrieDoubleField&quot;</span> <span class="attr">positionIncrementGap</span>=<span class="string">&quot;0&quot;</span> <span class="attr">precisionStep</span>=<span class="string">&quot;8&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">fieldType</span> <span class="attr">name</span>=<span class="string">&quot;text_ar&quot;</span> <span class="attr">class</span>=<span class="string">&quot;solr.TextField&quot;</span> <span class="attr">positionIncrementGap</span>=<span class="string">&quot;100&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">tokenizer</span> <span class="attr">class</span>=<span class="string">&quot;solr.StandardTokenizerFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.LowerCaseFilterFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.StopFilterFactory&quot;</span> <span class="attr">words</span>=<span class="string">&quot;lang/stopwords_ar.txt&quot;</span> <span class="attr">ignoreCase</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.ArabicNormalizationFilterFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.ArabicStemFilterFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">fieldType</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">fieldType</span> <span class="attr">name</span>=<span class="string">&quot;text_bg&quot;</span> <span class="attr">class</span>=<span class="string">&quot;solr.TextField&quot;</span> <span class="attr">positionIncrementGap</span>=<span class="string">&quot;100&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">tokenizer</span> <span class="attr">class</span>=<span class="string">&quot;solr.StandardTokenizerFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.LowerCaseFilterFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.StopFilterFactory&quot;</span> <span class="attr">words</span>=<span class="string">&quot;lang/stopwords_bg.txt&quot;</span> <span class="attr">ignoreCase</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.BulgarianStemFilterFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">fieldType</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">fieldType</span> <span class="attr">name</span>=<span class="string">&quot;text_ca&quot;</span> <span class="attr">class</span>=<span class="string">&quot;solr.TextField&quot;</span> <span class="attr">positionIncrementGap</span>=<span class="string">&quot;100&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">tokenizer</span> <span class="attr">class</span>=<span class="string">&quot;solr.StandardTokenizerFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.ElisionFilterFactory&quot;</span> <span class="attr">articles</span>=<span class="string">&quot;lang/contractions_ca.txt&quot;</span> <span class="attr">ignoreCase</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.LowerCaseFilterFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.StopFilterFactory&quot;</span> <span class="attr">words</span>=<span class="string">&quot;lang/stopwords_ca.txt&quot;</span> <span class="attr">ignoreCase</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.SnowballPorterFilterFactory&quot;</span> <span class="attr">language</span>=<span class="string">&quot;Catalan&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">fieldType</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">fieldType</span> <span class="attr">name</span>=<span class="string">&quot;text_cjk&quot;</span> <span class="attr">class</span>=<span class="string">&quot;solr.TextField&quot;</span> <span class="attr">positionIncrementGap</span>=<span class="string">&quot;100&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">tokenizer</span> <span class="attr">class</span>=<span class="string">&quot;solr.StandardTokenizerFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.CJKWidthFilterFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.LowerCaseFilterFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.CJKBigramFilterFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">fieldType</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">fieldType</span> <span class="attr">name</span>=<span class="string">&quot;text_ckb&quot;</span> <span class="attr">class</span>=<span class="string">&quot;solr.TextField&quot;</span> <span class="attr">positionIncrementGap</span>=<span class="string">&quot;100&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">tokenizer</span> <span class="attr">class</span>=<span class="string">&quot;solr.StandardTokenizerFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.SoraniNormalizationFilterFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.LowerCaseFilterFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.StopFilterFactory&quot;</span> <span class="attr">words</span>=<span class="string">&quot;lang/stopwords_ckb.txt&quot;</span> <span class="attr">ignoreCase</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.SoraniStemFilterFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">fieldType</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">fieldType</span> <span class="attr">name</span>=<span class="string">&quot;text_cz&quot;</span> <span class="attr">class</span>=<span class="string">&quot;solr.TextField&quot;</span> <span class="attr">positionIncrementGap</span>=<span class="string">&quot;100&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">tokenizer</span> <span class="attr">class</span>=<span class="string">&quot;solr.StandardTokenizerFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.LowerCaseFilterFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.StopFilterFactory&quot;</span> <span class="attr">words</span>=<span class="string">&quot;lang/stopwords_cz.txt&quot;</span> <span class="attr">ignoreCase</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.CzechStemFilterFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">fieldType</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">fieldType</span> <span class="attr">name</span>=<span class="string">&quot;text_da&quot;</span> <span class="attr">class</span>=<span class="string">&quot;solr.TextField&quot;</span> <span class="attr">positionIncrementGap</span>=<span class="string">&quot;100&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">tokenizer</span> <span class="attr">class</span>=<span class="string">&quot;solr.StandardTokenizerFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.LowerCaseFilterFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.StopFilterFactory&quot;</span> <span class="attr">format</span>=<span class="string">&quot;snowball&quot;</span> <span class="attr">words</span>=<span class="string">&quot;lang/stopwords_da.txt&quot;</span> <span class="attr">ignoreCase</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.SnowballPorterFilterFactory&quot;</span> <span class="attr">language</span>=<span class="string">&quot;Danish&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">fieldType</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">fieldType</span> <span class="attr">name</span>=<span class="string">&quot;text_de&quot;</span> <span class="attr">class</span>=<span class="string">&quot;solr.TextField&quot;</span> <span class="attr">positionIncrementGap</span>=<span class="string">&quot;100&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">tokenizer</span> <span class="attr">class</span>=<span class="string">&quot;solr.StandardTokenizerFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.LowerCaseFilterFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.StopFilterFactory&quot;</span> <span class="attr">format</span>=<span class="string">&quot;snowball&quot;</span> <span class="attr">words</span>=<span class="string">&quot;lang/stopwords_de.txt&quot;</span> <span class="attr">ignoreCase</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.GermanNormalizationFilterFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.GermanLightStemFilterFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">fieldType</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">fieldType</span> <span class="attr">name</span>=<span class="string">&quot;text_el&quot;</span> <span class="attr">class</span>=<span class="string">&quot;solr.TextField&quot;</span> <span class="attr">positionIncrementGap</span>=<span class="string">&quot;100&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">tokenizer</span> <span class="attr">class</span>=<span class="string">&quot;solr.StandardTokenizerFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.GreekLowerCaseFilterFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.StopFilterFactory&quot;</span> <span class="attr">words</span>=<span class="string">&quot;lang/stopwords_el.txt&quot;</span> <span class="attr">ignoreCase</span>=<span class="string">&quot;false&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.GreekStemFilterFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">fieldType</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">fieldType</span> <span class="attr">name</span>=<span class="string">&quot;text_en&quot;</span> <span class="attr">class</span>=<span class="string">&quot;solr.TextField&quot;</span> <span class="attr">positionIncrementGap</span>=<span class="string">&quot;100&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">analyzer</span> <span class="attr">type</span>=<span class="string">&quot;index&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">tokenizer</span> <span class="attr">class</span>=<span class="string">&quot;solr.StandardTokenizerFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.StopFilterFactory&quot;</span> <span class="attr">words</span>=<span class="string">&quot;lang/stopwords_en.txt&quot;</span> <span class="attr">ignoreCase</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.LowerCaseFilterFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.EnglishPossessiveFilterFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.KeywordMarkerFilterFactory&quot;</span> <span class="attr">protected</span>=<span class="string">&quot;protwords.txt&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.PorterStemFilterFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">analyzer</span> <span class="attr">type</span>=<span class="string">&quot;query&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">tokenizer</span> <span class="attr">class</span>=<span class="string">&quot;solr.StandardTokenizerFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.SynonymFilterFactory&quot;</span> <span class="attr">expand</span>=<span class="string">&quot;true&quot;</span> <span class="attr">ignoreCase</span>=<span class="string">&quot;true&quot;</span> <span class="attr">synonyms</span>=<span class="string">&quot;synonyms.txt&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.StopFilterFactory&quot;</span> <span class="attr">words</span>=<span class="string">&quot;lang/stopwords_en.txt&quot;</span> <span class="attr">ignoreCase</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.LowerCaseFilterFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.EnglishPossessiveFilterFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.KeywordMarkerFilterFactory&quot;</span> <span class="attr">protected</span>=<span class="string">&quot;protwords.txt&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.PorterStemFilterFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">fieldType</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">fieldType</span> <span class="attr">name</span>=<span class="string">&quot;text_en_splitting&quot;</span> <span class="attr">class</span>=<span class="string">&quot;solr.TextField&quot;</span> <span class="attr">autoGeneratePhraseQueries</span>=<span class="string">&quot;true&quot;</span> <span class="attr">positionIncrementGap</span>=<span class="string">&quot;100&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">analyzer</span> <span class="attr">type</span>=<span class="string">&quot;index&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">tokenizer</span> <span class="attr">class</span>=<span class="string">&quot;solr.WhitespaceTokenizerFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.StopFilterFactory&quot;</span> <span class="attr">words</span>=<span class="string">&quot;lang/stopwords_en.txt&quot;</span> <span class="attr">ignoreCase</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.WordDelimiterFilterFactory&quot;</span> <span class="attr">catenateNumbers</span>=<span class="string">&quot;1&quot;</span> <span class="attr">generateNumberParts</span>=<span class="string">&quot;1&quot;</span> <span class="attr">splitOnCaseChange</span>=<span class="string">&quot;1&quot;</span> <span class="attr">generateWordParts</span>=<span class="string">&quot;1&quot;</span> <span class="attr">catenateAll</span>=<span class="string">&quot;0&quot;</span> <span class="attr">catenateWords</span>=<span class="string">&quot;1&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.LowerCaseFilterFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.KeywordMarkerFilterFactory&quot;</span> <span class="attr">protected</span>=<span class="string">&quot;protwords.txt&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.PorterStemFilterFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">analyzer</span> <span class="attr">type</span>=<span class="string">&quot;query&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">tokenizer</span> <span class="attr">class</span>=<span class="string">&quot;solr.WhitespaceTokenizerFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.SynonymFilterFactory&quot;</span> <span class="attr">expand</span>=<span class="string">&quot;true&quot;</span> <span class="attr">ignoreCase</span>=<span class="string">&quot;true&quot;</span> <span class="attr">synonyms</span>=<span class="string">&quot;synonyms.txt&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.StopFilterFactory&quot;</span> <span class="attr">words</span>=<span class="string">&quot;lang/stopwords_en.txt&quot;</span> <span class="attr">ignoreCase</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.WordDelimiterFilterFactory&quot;</span> <span class="attr">catenateNumbers</span>=<span class="string">&quot;0&quot;</span> <span class="attr">generateNumberParts</span>=<span class="string">&quot;1&quot;</span> <span class="attr">splitOnCaseChange</span>=<span class="string">&quot;1&quot;</span> <span class="attr">generateWordParts</span>=<span class="string">&quot;1&quot;</span> <span class="attr">catenateAll</span>=<span class="string">&quot;0&quot;</span> <span class="attr">catenateWords</span>=<span class="string">&quot;0&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.LowerCaseFilterFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.KeywordMarkerFilterFactory&quot;</span> <span class="attr">protected</span>=<span class="string">&quot;protwords.txt&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.PorterStemFilterFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">fieldType</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">fieldType</span> <span class="attr">name</span>=<span class="string">&quot;text_en_splitting_tight&quot;</span> <span class="attr">class</span>=<span class="string">&quot;solr.TextField&quot;</span> <span class="attr">autoGeneratePhraseQueries</span>=<span class="string">&quot;true&quot;</span> <span class="attr">positionIncrementGap</span>=<span class="string">&quot;100&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">tokenizer</span> <span class="attr">class</span>=<span class="string">&quot;solr.WhitespaceTokenizerFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.SynonymFilterFactory&quot;</span> <span class="attr">expand</span>=<span class="string">&quot;false&quot;</span> <span class="attr">ignoreCase</span>=<span class="string">&quot;true&quot;</span> <span class="attr">synonyms</span>=<span class="string">&quot;synonyms.txt&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.StopFilterFactory&quot;</span> <span class="attr">words</span>=<span class="string">&quot;lang/stopwords_en.txt&quot;</span> <span class="attr">ignoreCase</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.WordDelimiterFilterFactory&quot;</span> <span class="attr">catenateNumbers</span>=<span class="string">&quot;1&quot;</span> <span class="attr">generateNumberParts</span>=<span class="string">&quot;0&quot;</span> <span class="attr">generateWordParts</span>=<span class="string">&quot;0&quot;</span> <span class="attr">catenateAll</span>=<span class="string">&quot;0&quot;</span> <span class="attr">catenateWords</span>=<span class="string">&quot;1&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.LowerCaseFilterFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.KeywordMarkerFilterFactory&quot;</span> <span class="attr">protected</span>=<span class="string">&quot;protwords.txt&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.EnglishMinimalStemFilterFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.RemoveDuplicatesTokenFilterFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">fieldType</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">fieldType</span> <span class="attr">name</span>=<span class="string">&quot;text_es&quot;</span> <span class="attr">class</span>=<span class="string">&quot;solr.TextField&quot;</span> <span class="attr">positionIncrementGap</span>=<span class="string">&quot;100&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">tokenizer</span> <span class="attr">class</span>=<span class="string">&quot;solr.StandardTokenizerFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.LowerCaseFilterFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.StopFilterFactory&quot;</span> <span class="attr">format</span>=<span class="string">&quot;snowball&quot;</span> <span class="attr">words</span>=<span class="string">&quot;lang/stopwords_es.txt&quot;</span> <span class="attr">ignoreCase</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.SpanishLightStemFilterFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">fieldType</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">fieldType</span> <span class="attr">name</span>=<span class="string">&quot;text_eu&quot;</span> <span class="attr">class</span>=<span class="string">&quot;solr.TextField&quot;</span> <span class="attr">positionIncrementGap</span>=<span class="string">&quot;100&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">tokenizer</span> <span class="attr">class</span>=<span class="string">&quot;solr.StandardTokenizerFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.LowerCaseFilterFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.StopFilterFactory&quot;</span> <span class="attr">words</span>=<span class="string">&quot;lang/stopwords_eu.txt&quot;</span> <span class="attr">ignoreCase</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.SnowballPorterFilterFactory&quot;</span> <span class="attr">language</span>=<span class="string">&quot;Basque&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">fieldType</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">fieldType</span> <span class="attr">name</span>=<span class="string">&quot;text_fa&quot;</span> <span class="attr">class</span>=<span class="string">&quot;solr.TextField&quot;</span> <span class="attr">positionIncrementGap</span>=<span class="string">&quot;100&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">charFilter</span> <span class="attr">class</span>=<span class="string">&quot;solr.PersianCharFilterFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">tokenizer</span> <span class="attr">class</span>=<span class="string">&quot;solr.StandardTokenizerFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.LowerCaseFilterFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.ArabicNormalizationFilterFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.PersianNormalizationFilterFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.StopFilterFactory&quot;</span> <span class="attr">words</span>=<span class="string">&quot;lang/stopwords_fa.txt&quot;</span> <span class="attr">ignoreCase</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">fieldType</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">fieldType</span> <span class="attr">name</span>=<span class="string">&quot;text_fi&quot;</span> <span class="attr">class</span>=<span class="string">&quot;solr.TextField&quot;</span> <span class="attr">positionIncrementGap</span>=<span class="string">&quot;100&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">tokenizer</span> <span class="attr">class</span>=<span class="string">&quot;solr.StandardTokenizerFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.LowerCaseFilterFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.StopFilterFactory&quot;</span> <span class="attr">format</span>=<span class="string">&quot;snowball&quot;</span> <span class="attr">words</span>=<span class="string">&quot;lang/stopwords_fi.txt&quot;</span> <span class="attr">ignoreCase</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.SnowballPorterFilterFactory&quot;</span> <span class="attr">language</span>=<span class="string">&quot;Finnish&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">fieldType</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">fieldType</span> <span class="attr">name</span>=<span class="string">&quot;text_fr&quot;</span> <span class="attr">class</span>=<span class="string">&quot;solr.TextField&quot;</span> <span class="attr">positionIncrementGap</span>=<span class="string">&quot;100&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">tokenizer</span> <span class="attr">class</span>=<span class="string">&quot;solr.StandardTokenizerFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.ElisionFilterFactory&quot;</span> <span class="attr">articles</span>=<span class="string">&quot;lang/contractions_fr.txt&quot;</span> <span class="attr">ignoreCase</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.LowerCaseFilterFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.StopFilterFactory&quot;</span> <span class="attr">format</span>=<span class="string">&quot;snowball&quot;</span> <span class="attr">words</span>=<span class="string">&quot;lang/stopwords_fr.txt&quot;</span> <span class="attr">ignoreCase</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.FrenchLightStemFilterFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">fieldType</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">fieldType</span> <span class="attr">name</span>=<span class="string">&quot;text_ga&quot;</span> <span class="attr">class</span>=<span class="string">&quot;solr.TextField&quot;</span> <span class="attr">positionIncrementGap</span>=<span class="string">&quot;100&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">tokenizer</span> <span class="attr">class</span>=<span class="string">&quot;solr.StandardTokenizerFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.ElisionFilterFactory&quot;</span> <span class="attr">articles</span>=<span class="string">&quot;lang/contractions_ga.txt&quot;</span> <span class="attr">ignoreCase</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.StopFilterFactory&quot;</span> <span class="attr">words</span>=<span class="string">&quot;lang/hyphenations_ga.txt&quot;</span> <span class="attr">ignoreCase</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.IrishLowerCaseFilterFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.StopFilterFactory&quot;</span> <span class="attr">words</span>=<span class="string">&quot;lang/stopwords_ga.txt&quot;</span> <span class="attr">ignoreCase</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.SnowballPorterFilterFactory&quot;</span> <span class="attr">language</span>=<span class="string">&quot;Irish&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">fieldType</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">fieldType</span> <span class="attr">name</span>=<span class="string">&quot;text_general&quot;</span> <span class="attr">class</span>=<span class="string">&quot;solr.TextField&quot;</span> <span class="attr">positionIncrementGap</span>=<span class="string">&quot;100&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">analyzer</span> <span class="attr">type</span>=<span class="string">&quot;index&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">tokenizer</span> <span class="attr">class</span>=<span class="string">&quot;solr.StandardTokenizerFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.StopFilterFactory&quot;</span> <span class="attr">words</span>=<span class="string">&quot;stopwords.txt&quot;</span> <span class="attr">ignoreCase</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.LowerCaseFilterFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">analyzer</span> <span class="attr">type</span>=<span class="string">&quot;query&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">tokenizer</span> <span class="attr">class</span>=<span class="string">&quot;solr.StandardTokenizerFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.StopFilterFactory&quot;</span> <span class="attr">words</span>=<span class="string">&quot;stopwords.txt&quot;</span> <span class="attr">ignoreCase</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.SynonymFilterFactory&quot;</span> <span class="attr">expand</span>=<span class="string">&quot;true&quot;</span> <span class="attr">ignoreCase</span>=<span class="string">&quot;true&quot;</span> <span class="attr">synonyms</span>=<span class="string">&quot;synonyms.txt&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.LowerCaseFilterFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">fieldType</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">fieldType</span> <span class="attr">name</span>=<span class="string">&quot;text_general_rev&quot;</span> <span class="attr">class</span>=<span class="string">&quot;solr.TextField&quot;</span> <span class="attr">positionIncrementGap</span>=<span class="string">&quot;100&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">analyzer</span> <span class="attr">type</span>=<span class="string">&quot;index&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">tokenizer</span> <span class="attr">class</span>=<span class="string">&quot;solr.StandardTokenizerFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.StopFilterFactory&quot;</span> <span class="attr">words</span>=<span class="string">&quot;stopwords.txt&quot;</span> <span class="attr">ignoreCase</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.LowerCaseFilterFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.ReversedWildcardFilterFactory&quot;</span> <span class="attr">maxPosQuestion</span>=<span class="string">&quot;2&quot;</span> <span class="attr">maxFractionAsterisk</span>=<span class="string">&quot;0.33&quot;</span> <span class="attr">maxPosAsterisk</span>=<span class="string">&quot;3&quot;</span> <span class="attr">withOriginal</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">analyzer</span> <span class="attr">type</span>=<span class="string">&quot;query&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">tokenizer</span> <span class="attr">class</span>=<span class="string">&quot;solr.StandardTokenizerFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.SynonymFilterFactory&quot;</span> <span class="attr">expand</span>=<span class="string">&quot;true&quot;</span> <span class="attr">ignoreCase</span>=<span class="string">&quot;true&quot;</span> <span class="attr">synonyms</span>=<span class="string">&quot;synonyms.txt&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.StopFilterFactory&quot;</span> <span class="attr">words</span>=<span class="string">&quot;stopwords.txt&quot;</span> <span class="attr">ignoreCase</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.LowerCaseFilterFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">fieldType</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">fieldType</span> <span class="attr">name</span>=<span class="string">&quot;text_gl&quot;</span> <span class="attr">class</span>=<span class="string">&quot;solr.TextField&quot;</span> <span class="attr">positionIncrementGap</span>=<span class="string">&quot;100&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">tokenizer</span> <span class="attr">class</span>=<span class="string">&quot;solr.StandardTokenizerFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.LowerCaseFilterFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.StopFilterFactory&quot;</span> <span class="attr">words</span>=<span class="string">&quot;lang/stopwords_gl.txt&quot;</span> <span class="attr">ignoreCase</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.GalicianStemFilterFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">fieldType</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">fieldType</span> <span class="attr">name</span>=<span class="string">&quot;text_hi&quot;</span> <span class="attr">class</span>=<span class="string">&quot;solr.TextField&quot;</span> <span class="attr">positionIncrementGap</span>=<span class="string">&quot;100&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">tokenizer</span> <span class="attr">class</span>=<span class="string">&quot;solr.StandardTokenizerFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.LowerCaseFilterFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.IndicNormalizationFilterFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.HindiNormalizationFilterFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.StopFilterFactory&quot;</span> <span class="attr">words</span>=<span class="string">&quot;lang/stopwords_hi.txt&quot;</span> <span class="attr">ignoreCase</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.HindiStemFilterFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">fieldType</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">fieldType</span> <span class="attr">name</span>=<span class="string">&quot;text_hu&quot;</span> <span class="attr">class</span>=<span class="string">&quot;solr.TextField&quot;</span> <span class="attr">positionIncrementGap</span>=<span class="string">&quot;100&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">tokenizer</span> <span class="attr">class</span>=<span class="string">&quot;solr.StandardTokenizerFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.LowerCaseFilterFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.StopFilterFactory&quot;</span> <span class="attr">format</span>=<span class="string">&quot;snowball&quot;</span> <span class="attr">words</span>=<span class="string">&quot;lang/stopwords_hu.txt&quot;</span> <span class="attr">ignoreCase</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.SnowballPorterFilterFactory&quot;</span> <span class="attr">language</span>=<span class="string">&quot;Hungarian&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">fieldType</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">fieldType</span> <span class="attr">name</span>=<span class="string">&quot;text_hy&quot;</span> <span class="attr">class</span>=<span class="string">&quot;solr.TextField&quot;</span> <span class="attr">positionIncrementGap</span>=<span class="string">&quot;100&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">tokenizer</span> <span class="attr">class</span>=<span class="string">&quot;solr.StandardTokenizerFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.LowerCaseFilterFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.StopFilterFactory&quot;</span> <span class="attr">words</span>=<span class="string">&quot;lang/stopwords_hy.txt&quot;</span> <span class="attr">ignoreCase</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.SnowballPorterFilterFactory&quot;</span> <span class="attr">language</span>=<span class="string">&quot;Armenian&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">fieldType</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">fieldType</span> <span class="attr">name</span>=<span class="string">&quot;text_id&quot;</span> <span class="attr">class</span>=<span class="string">&quot;solr.TextField&quot;</span> <span class="attr">positionIncrementGap</span>=<span class="string">&quot;100&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">tokenizer</span> <span class="attr">class</span>=<span class="string">&quot;solr.StandardTokenizerFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.LowerCaseFilterFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.StopFilterFactory&quot;</span> <span class="attr">words</span>=<span class="string">&quot;lang/stopwords_id.txt&quot;</span> <span class="attr">ignoreCase</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.IndonesianStemFilterFactory&quot;</span> <span class="attr">stemDerivational</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">fieldType</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">fieldType</span> <span class="attr">name</span>=<span class="string">&quot;text_it&quot;</span> <span class="attr">class</span>=<span class="string">&quot;solr.TextField&quot;</span> <span class="attr">positionIncrementGap</span>=<span class="string">&quot;100&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">tokenizer</span> <span class="attr">class</span>=<span class="string">&quot;solr.StandardTokenizerFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.ElisionFilterFactory&quot;</span> <span class="attr">articles</span>=<span class="string">&quot;lang/contractions_it.txt&quot;</span> <span class="attr">ignoreCase</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.LowerCaseFilterFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.StopFilterFactory&quot;</span> <span class="attr">format</span>=<span class="string">&quot;snowball&quot;</span> <span class="attr">words</span>=<span class="string">&quot;lang/stopwords_it.txt&quot;</span> <span class="attr">ignoreCase</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.ItalianLightStemFilterFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">fieldType</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">fieldType</span> <span class="attr">name</span>=<span class="string">&quot;text_ja&quot;</span> <span class="attr">class</span>=<span class="string">&quot;solr.TextField&quot;</span> <span class="attr">autoGeneratePhraseQueries</span>=<span class="string">&quot;false&quot;</span> <span class="attr">positionIncrementGap</span>=<span class="string">&quot;100&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">tokenizer</span> <span class="attr">class</span>=<span class="string">&quot;solr.JapaneseTokenizerFactory&quot;</span> <span class="attr">mode</span>=<span class="string">&quot;search&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.JapaneseBaseFormFilterFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.JapanesePartOfSpeechStopFilterFactory&quot;</span> <span class="attr">tags</span>=<span class="string">&quot;lang/stoptags_ja.txt&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.CJKWidthFilterFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.StopFilterFactory&quot;</span> <span class="attr">words</span>=<span class="string">&quot;lang/stopwords_ja.txt&quot;</span> <span class="attr">ignoreCase</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.JapaneseKatakanaStemFilterFactory&quot;</span> <span class="attr">minimumLength</span>=<span class="string">&quot;4&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.LowerCaseFilterFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">fieldType</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">fieldType</span> <span class="attr">name</span>=<span class="string">&quot;text_lv&quot;</span> <span class="attr">class</span>=<span class="string">&quot;solr.TextField&quot;</span> <span class="attr">positionIncrementGap</span>=<span class="string">&quot;100&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">tokenizer</span> <span class="attr">class</span>=<span class="string">&quot;solr.StandardTokenizerFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.LowerCaseFilterFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.StopFilterFactory&quot;</span> <span class="attr">words</span>=<span class="string">&quot;lang/stopwords_lv.txt&quot;</span> <span class="attr">ignoreCase</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.LatvianStemFilterFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">fieldType</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">fieldType</span> <span class="attr">name</span>=<span class="string">&quot;text_nl&quot;</span> <span class="attr">class</span>=<span class="string">&quot;solr.TextField&quot;</span> <span class="attr">positionIncrementGap</span>=<span class="string">&quot;100&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">tokenizer</span> <span class="attr">class</span>=<span class="string">&quot;solr.StandardTokenizerFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.LowerCaseFilterFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.StopFilterFactory&quot;</span> <span class="attr">format</span>=<span class="string">&quot;snowball&quot;</span> <span class="attr">words</span>=<span class="string">&quot;lang/stopwords_nl.txt&quot;</span> <span class="attr">ignoreCase</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.StemmerOverrideFilterFactory&quot;</span> <span class="attr">dictionary</span>=<span class="string">&quot;lang/stemdict_nl.txt&quot;</span> <span class="attr">ignoreCase</span>=<span class="string">&quot;false&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.SnowballPorterFilterFactory&quot;</span> <span class="attr">language</span>=<span class="string">&quot;Dutch&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">fieldType</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">fieldType</span> <span class="attr">name</span>=<span class="string">&quot;text_no&quot;</span> <span class="attr">class</span>=<span class="string">&quot;solr.TextField&quot;</span> <span class="attr">positionIncrementGap</span>=<span class="string">&quot;100&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">tokenizer</span> <span class="attr">class</span>=<span class="string">&quot;solr.StandardTokenizerFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.LowerCaseFilterFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.StopFilterFactory&quot;</span> <span class="attr">format</span>=<span class="string">&quot;snowball&quot;</span> <span class="attr">words</span>=<span class="string">&quot;lang/stopwords_no.txt&quot;</span> <span class="attr">ignoreCase</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.SnowballPorterFilterFactory&quot;</span> <span class="attr">language</span>=<span class="string">&quot;Norwegian&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">fieldType</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">fieldType</span> <span class="attr">name</span>=<span class="string">&quot;text_pt&quot;</span> <span class="attr">class</span>=<span class="string">&quot;solr.TextField&quot;</span> <span class="attr">positionIncrementGap</span>=<span class="string">&quot;100&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">tokenizer</span> <span class="attr">class</span>=<span class="string">&quot;solr.StandardTokenizerFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.LowerCaseFilterFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.StopFilterFactory&quot;</span> <span class="attr">format</span>=<span class="string">&quot;snowball&quot;</span> <span class="attr">words</span>=<span class="string">&quot;lang/stopwords_pt.txt&quot;</span> <span class="attr">ignoreCase</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.PortugueseLightStemFilterFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">fieldType</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">fieldType</span> <span class="attr">name</span>=<span class="string">&quot;text_ro&quot;</span> <span class="attr">class</span>=<span class="string">&quot;solr.TextField&quot;</span> <span class="attr">positionIncrementGap</span>=<span class="string">&quot;100&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">tokenizer</span> <span class="attr">class</span>=<span class="string">&quot;solr.StandardTokenizerFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.LowerCaseFilterFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.StopFilterFactory&quot;</span> <span class="attr">words</span>=<span class="string">&quot;lang/stopwords_ro.txt&quot;</span> <span class="attr">ignoreCase</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.SnowballPorterFilterFactory&quot;</span> <span class="attr">language</span>=<span class="string">&quot;Romanian&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">fieldType</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">fieldType</span> <span class="attr">name</span>=<span class="string">&quot;text_ru&quot;</span> <span class="attr">class</span>=<span class="string">&quot;solr.TextField&quot;</span> <span class="attr">positionIncrementGap</span>=<span class="string">&quot;100&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">tokenizer</span> <span class="attr">class</span>=<span class="string">&quot;solr.StandardTokenizerFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.LowerCaseFilterFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.StopFilterFactory&quot;</span> <span class="attr">format</span>=<span class="string">&quot;snowball&quot;</span> <span class="attr">words</span>=<span class="string">&quot;lang/stopwords_ru.txt&quot;</span> <span class="attr">ignoreCase</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.SnowballPorterFilterFactory&quot;</span> <span class="attr">language</span>=<span class="string">&quot;Russian&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">fieldType</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">fieldType</span> <span class="attr">name</span>=<span class="string">&quot;text_sv&quot;</span> <span class="attr">class</span>=<span class="string">&quot;solr.TextField&quot;</span> <span class="attr">positionIncrementGap</span>=<span class="string">&quot;100&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">tokenizer</span> <span class="attr">class</span>=<span class="string">&quot;solr.StandardTokenizerFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.LowerCaseFilterFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.StopFilterFactory&quot;</span> <span class="attr">format</span>=<span class="string">&quot;snowball&quot;</span> <span class="attr">words</span>=<span class="string">&quot;lang/stopwords_sv.txt&quot;</span> <span class="attr">ignoreCase</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.SnowballPorterFilterFactory&quot;</span> <span class="attr">language</span>=<span class="string">&quot;Swedish&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">fieldType</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">fieldType</span> <span class="attr">name</span>=<span class="string">&quot;text_th&quot;</span> <span class="attr">class</span>=<span class="string">&quot;solr.TextField&quot;</span> <span class="attr">positionIncrementGap</span>=<span class="string">&quot;100&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">tokenizer</span> <span class="attr">class</span>=<span class="string">&quot;solr.ThaiTokenizerFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.LowerCaseFilterFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.StopFilterFactory&quot;</span> <span class="attr">words</span>=<span class="string">&quot;lang/stopwords_th.txt&quot;</span> <span class="attr">ignoreCase</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">fieldType</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">fieldType</span> <span class="attr">name</span>=<span class="string">&quot;text_tr&quot;</span> <span class="attr">class</span>=<span class="string">&quot;solr.TextField&quot;</span> <span class="attr">positionIncrementGap</span>=<span class="string">&quot;100&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">tokenizer</span> <span class="attr">class</span>=<span class="string">&quot;solr.StandardTokenizerFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.ApostropheFilterFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.TurkishLowerCaseFilterFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.StopFilterFactory&quot;</span> <span class="attr">words</span>=<span class="string">&quot;lang/stopwords_tr.txt&quot;</span> <span class="attr">ignoreCase</span>=<span class="string">&quot;false&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;solr.SnowballPorterFilterFactory&quot;</span> <span class="attr">language</span>=<span class="string">&quot;Turkish&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">fieldType</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">fieldType</span> <span class="attr">name</span>=<span class="string">&quot;text_ws&quot;</span> <span class="attr">class</span>=<span class="string">&quot;solr.TextField&quot;</span> <span class="attr">positionIncrementGap</span>=<span class="string">&quot;100&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">tokenizer</span> <span class="attr">class</span>=<span class="string">&quot;solr.WhitespaceTokenizerFactory&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">analyzer</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">fieldType</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">fieldType</span> <span class="attr">name</span>=<span class="string">&quot;tfloat&quot;</span> <span class="attr">class</span>=<span class="string">&quot;solr.TrieFloatField&quot;</span> <span class="attr">positionIncrementGap</span>=<span class="string">&quot;0&quot;</span> <span class="attr">precisionStep</span>=<span class="string">&quot;8&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">fieldType</span> <span class="attr">name</span>=<span class="string">&quot;tint&quot;</span> <span class="attr">class</span>=<span class="string">&quot;solr.TrieIntField&quot;</span> <span class="attr">positionIncrementGap</span>=<span class="string">&quot;0&quot;</span> <span class="attr">precisionStep</span>=<span class="string">&quot;8&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">fieldType</span> <span class="attr">name</span>=<span class="string">&quot;tlong&quot;</span> <span class="attr">class</span>=<span class="string">&quot;solr.TrieLongField&quot;</span> <span class="attr">positionIncrementGap</span>=<span class="string">&quot;0&quot;</span> <span class="attr">precisionStep</span>=<span class="string">&quot;8&quot;</span>/&gt;</span></span></span><br></pre></td></tr></table></figure>

<p>与数据库表对应的配置</p>
<figure class="highlight vbscript-html"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="comment">&lt;!--</span></span></span><br><span class="line"><span class="xml">	multiValued:此字段是否可以存储多个值</span></span><br><span class="line"><span class="xml">	indexed:在搜索时是否使用该字段来查询或排序</span></span><br><span class="line"><span class="xml">	stored:是否将索引结果存储到索引库，如果选择false在solr的返回结果中将不会显示</span></span><br><span class="line"><span class="xml">	required:提示solr是否添加没有这个字段的任何文档，默认为false</span></span><br><span class="line"><span class="xml">	default:字段的默认值</span></span><br><span class="line"><span class="xml">--&gt;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;id&quot;</span> <span class="attr">type</span>=<span class="string">&quot;long&quot;</span> <span class="attr">multiValued</span>=<span class="string">&quot;false&quot;</span> <span class="attr">indexed</span>=<span class="string">&quot;true&quot;</span> <span class="attr">required</span>=<span class="string">&quot;true&quot;</span> <span class="attr">stored</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">	<span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;item_id&quot;</span> <span class="attr">type</span>=<span class="string">&quot;long&quot;</span> <span class="attr">multiValued</span>=<span class="string">&quot;true&quot;</span> <span class="attr">indexed</span>=<span class="string">&quot;true&quot;</span> <span class="attr">required</span>=<span class="string">&quot;false&quot;</span> <span class="attr">stored</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">	<span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;category_id&quot;</span> <span class="attr">type</span>=<span class="string">&quot;long&quot;</span> <span class="attr">multiValued</span>=<span class="string">&quot;true&quot;</span> <span class="attr">indexed</span>=<span class="string">&quot;true&quot;</span> <span class="attr">required</span>=<span class="string">&quot;false&quot;</span> <span class="attr">stored</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">	<span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;category_name&quot;</span> <span class="attr">type</span>=<span class="string">&quot;string&quot;</span> <span class="attr">multiValued</span>=<span class="string">&quot;true&quot;</span> <span class="attr">indexed</span>=<span class="string">&quot;true&quot;</span> <span class="attr">required</span>=<span class="string">&quot;false&quot;</span> <span class="attr">stored</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">		</span></span><br><span class="line"><span class="xml">	</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;_version_&quot;</span> <span class="attr">type</span>=<span class="string">&quot;long&quot;</span> <span class="attr">indexed</span>=<span class="string">&quot;true&quot;</span> <span class="attr">stored</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span></span><br></pre></td></tr></table></figure>
<p><strong>注意：</strong>db-data-config.xml 配置文件中的 field name 要和 managed-schema 中的 field name 对应</p>
<h4 id="Step-3：启动-solr"><a href="#Step-3：启动-solr" class="headerlink" title="Step 3：启动 solr"></a>Step 3：启动 solr</h4><p>进入 solr\bin 目录使用启动命令，启动 solr</p>
<p><img src="./1495954765616.png" alt="Alt text"></p>
<figure class="highlight bat"><table><tr><td class="code"><pre><span class="line">solr -e dih</span><br></pre></td></tr></table></figure>
<p>启动成功</p>
<p><img src="./1495954701595.png" alt="Alt text"></p>
<p>通过浏览器访问 solr
<a href="http://localhost:8983/solr/">http://localhost:8983/solr/</a></p>
<h4 id="Step-4：使用-solr"><a href="#Step-4：使用-solr" class="headerlink" title="Step 4：使用 solr"></a>Step 4：使用 solr</h4><p><img src="./1495954916798.png" alt="Alt text"></p>
<p>导入数据</p>
<p><img src="./1495954983190.png" alt="Alt text"></p>
<p>查询数据</p>
<p><img src="./1495955043090.png" alt="Alt text"></p>
<p><strong>注意：</strong>查询条件的写法是 key:value 形式的</p>
<h4 id="Step-5：关闭-solr"><a href="#Step-5：关闭-solr" class="headerlink" title="Step 5：关闭 solr"></a>Step 5：关闭 solr</h4><p>进入 solr\bin 目录使用关闭命令，关闭 solr</p>
<figure class="highlight bat"><table><tr><td class="code"><pre><span class="line">solr stop -all</span><br></pre></td></tr></table></figure>






]]></content>
      <categories>
        <category>开发</category>
      </categories>
      <tags>
        <tag>数据库</tag>
        <tag>solr</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu 建站 - tomcat</title>
    <url>/2018/07/14/ubuntu%20%E5%BB%BA%E7%AB%99%20-%20tomcat/</url>
    <content><![CDATA[<p>去年看到腾讯云打折，忍不住买了一年，闲置半年了，感觉有点亏，就让它 run 起来吧。</p>
<span id="more"></span>

<h3 id="xshell-连服务器"><a href="#xshell-连服务器" class="headerlink" title="xshell 连服务器"></a>xshell 连服务器</h3><p><img src="./1531562440995.png" alt="Alt text"></p>
<p>input username (可以选择记住 username)</p>
<p>input password (可以选择记住 password)</p>
<h3 id="install-JDK"><a href="#install-JDK" class="headerlink" title="install JDK"></a>install JDK</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install openjdk-8-jdk</span><br><span class="line">y</span><br></pre></td></tr></table></figure>

<p>一顿操作过后，jdk 就装好了，如果不放心，可以使用 “java -version” 查看是否安装成功。</p>
<h3 id="install-tomcat"><a href="#install-tomcat" class="headerlink" title="install tomcat"></a>install tomcat</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get install tomcat8</span><br><span class="line">sudo apt-get install tomcat8-docs tomcat8-examples tomcat8-admin</span><br></pre></td></tr></table></figure>

<p>（感觉用了这么多 sudo 会出事。。到时出问题再补充好了。。）</p>
<h3 id="run-tomcat"><a href="#run-tomcat" class="headerlink" title="run tomcat"></a>run tomcat</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl start tomcat8</span><br><span class="line">systemctl stop tomcat8</span><br><span class="line">systemctl restart tomcat8</span><br></pre></td></tr></table></figure>

<p><a href="http://115.159.193.245:8080/">http://115.159.193.245:8080/</a></p>
<p><img src="./1531566556002.png" alt="Alt text"></p>
]]></content>
      <categories>
        <category>开发</category>
      </categories>
      <tags>
        <tag>web</tag>
      </tags>
  </entry>
  <entry>
    <title>tomcat8+solr6.5.1</title>
    <url>/2017/05/22/tomcat8+solr6.5.1/</url>
    <content><![CDATA[<h4 id="Step-1：下载solr6-5-1、tomcat8解压缩"><a href="#Step-1：下载solr6-5-1、tomcat8解压缩" class="headerlink" title="Step 1：下载solr6.5.1、tomcat8解压缩"></a>Step 1：下载solr6.5.1、tomcat8解压缩</h4><h4 id="Step-2：在tomcat8-webapps-下创建-solr-web应用"><a href="#Step-2：在tomcat8-webapps-下创建-solr-web应用" class="headerlink" title="Step 2：在tomcat8\webapps 下创建 solr web应用"></a>Step 2：在tomcat8\webapps 下创建 solr web应用</h4><ul>
<li>在 tomcat8\webapps 中创建 solr 文件夹</li>
</ul>
<span id="more"></span>

<p><img src="./1495463582551.png" alt="Alt text"></p>
<ul>
<li>把 solr-6.5.1\server\solr-webapp\webapp 中的所有文件复制到 tomcat8\webapps\solr 中</li>
</ul>
<p><img src="./1495463475692.png" alt="Alt text"></p>
<ul>
<li>把 solr-6.5.1\server\lib 中除了含有 jetty 的 jar  包复制到 tomcat8\webapps\solr\libs 中</li>
</ul>
<p><img src="./1495463719069.png" alt="Alt text"></p>
<ul>
<li>把 solr-6.5.1\server\lib\ext 中的所有 jar 包复制到 tomcat8\webapps\solr\lib</li>
</ul>
<p><img src="./1495463821276.png" alt="Alt text"></p>
<ul>
<li>把 solr-6.5.1\server\solr 中的文件复制到任意路径 (solrhomeurl) 的 solrhome 文件夹中（我这里是 E:\software\develop\Java\solrhome）</li>
</ul>
<p><img src="./1495463901831.png" alt="Alt text"></p>
<p><img src="./1495463972209.png" alt="Alt text"></p>
<ul>
<li>把 solr-6.5.1\server\resources 中的 log4j.properties 复制到 tomcat8\webapps\solr\WEB-INF\classes</li>
</ul>
<p><strong>注意：classes文件夹需要新建</strong></p>
<p><img src="./1495464103397.png" alt="Alt text"></p>
<p><img src="./1495464129438.png" alt="Alt text"></p>
<h4 id="Step-3：修改配置"><a href="#Step-3：修改配置" class="headerlink" title="Step 3：修改配置"></a>Step 3：修改配置</h4><ul>
<li>修改 tomcat8\webapps\solr\WEB-INF\web.xml，加上<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;env-entry&gt;</span><br><span class="line">  &lt;env-entry-name&gt;solr/home&lt;/env-entry-name&gt;</span><br><span class="line">  &lt;env-entry-value&gt;E:/software/develop/Java/solrhome&lt;/env-entry-value&gt;</span><br><span class="line">  &lt;env-entry-type&gt;java.lang.String&lt;/env-entry-type&gt;</span><br><span class="line">&lt;/env-entry&gt;</span><br></pre></td></tr></table></figure>

</li>
</ul>
<p><img src="./1495464285473.png" alt="Alt text"></p>
<p><img src="./1495464407098.png" alt="Alt text"></p>
<ul>
<li>修改 solr 的 log 路径，即修改 tomcat8\bin\catalina.bat 文件</li>
</ul>
<p><img src="./1495464487519.png" alt="Alt text"></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">set JAVA_OPTS=<span class="string">&quot;-Dsolr.log.dir=E:/software/develop/tomcats/apache-tomcat-8.5.11-solr/webapps/solr/logs&quot;</span></span><br></pre></td></tr></table></figure>

<p><img src="./1495464561276.png" alt="Alt text"></p>
<ul>
<li>注释掉拦截代码，修改 tomcat8\webapps\solr\WEB-INF\web.xml，注释到 security-constraint 那两段</li>
</ul>
<p><img src="./1495464742688.png" alt="Alt text"></p>
<h4 id="Step-3：启动-tomcat"><a href="#Step-3：启动-tomcat" class="headerlink" title="Step 3：启动 tomcat"></a>Step 3：启动 tomcat</h4><ul>
<li>访问 <a href="http://localhost:8081/solr/index.html#/">http://localhost:8081/solr/index.html#/</a> </li>
</ul>
<p><strong>注意：端口号看tomcat配置</strong></p>
<p><img src="./1495464866532.png" alt="Alt text"></p>
]]></content>
      <categories>
        <category>开发</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>solr</tag>
      </tags>
  </entry>
  <entry>
    <title>win7 Apache 部署静态网页</title>
    <url>/2024/10/27/win7%20Apache%20%E9%83%A8%E7%BD%B2%E9%9D%99%E6%80%81%E7%BD%91%E9%A1%B5/</url>
    <content><![CDATA[<p>学校机房是win7系统，试试在win上面部署MySQL闯关小游戏</p>
<span id="more"></span>

<h3 id="下载："><a href="#下载：" class="headerlink" title="下载："></a>下载：</h3><p><a href="https://www.apachelounge.com/download/#google_vignette">https://www.apachelounge.com/download/#google_vignette</a></p>
<p><img src="./1730014037118.png" alt="Alt text"></p>
<h3 id="安装-vc-redist-x64"><a href="#安装-vc-redist-x64" class="headerlink" title="安装  vc_redist_x64"></a>安装  vc_redist_x64</h3><p>先安装  vc_redist_x64</p>
<p><img src="./1730014642586.png" alt="Alt text"></p>
<h3 id="解压-httpd-2-4-62-240904-win64-VS17-zip"><a href="#解压-httpd-2-4-62-240904-win64-VS17-zip" class="headerlink" title="解压 httpd-2.4.62-240904-win64-VS17.zip"></a>解压 httpd-2.4.62-240904-win64-VS17.zip</h3><p>把 Apache24放入C盘根目录（这样放的原因是 Apache 配置文件默认路径是 C 盘）</p>
<p><img src="./1730014128124.png" alt="Alt text"></p>
<p>如果要放到其他路径下也可以，但是要改 httpd.conf 配置下的路径</p>
<p><img src="./1730014206126.png" alt="Alt text"></p>
<p>默认端口 80，也可以不改，我这里不改</p>
<p><img src="./1730014290836.png" alt="Alt text"></p>
<h3 id="命令提示符安装-Apache2-4"><a href="#命令提示符安装-Apache2-4" class="headerlink" title="命令提示符安装 Apache2.4"></a>命令提示符安装 Apache2.4</h3><p>注意使用管理员身份进入cmd，进入 bin 目录</p>
<p><img src="./1730014360987.png" alt="Alt text"></p>
<p>第一次输入 httpd.exe -k install，防火墙允许访问</p>
<p><img src="./1730014399959.png" alt="Alt text"></p>
<p>第二次输入 httpd.exe -k install</p>
<p><img src="./1730014456927.png" alt="Alt text"></p>
<p>这样 Apache2.4就安装成功了
注意在不指定 服务名称的时候，默认安装的是 Apache2.4</p>
<h3 id="启动-Apache2-4"><a href="#启动-Apache2-4" class="headerlink" title="启动 Apache2.4"></a>启动 Apache2.4</h3><p><img src="./1730014521513.png" alt="Alt text"></p>
<p>鼠标右击直接启动</p>
<p><img src="./1730014677838.png" alt="Alt text"></p>
<p>Apache部署完成</p>
<p><img src="./1730014703678.png" alt="Alt text"></p>
<h3 id="部署静态网页"><a href="#部署静态网页" class="headerlink" title="部署静态网页"></a>部署静态网页</h3><p>直接把 静态网页文件夹放入 htdocs 文件夹下</p>
<p><img src="./1730014822298.png" alt="Alt text"></p>
<p>直接访问，搞定</p>
<p><img src="./1730014870184.png" alt="Alt text"></p>
]]></content>
      <categories>
        <category>其他</category>
      </categories>
      <tags>
        <tag>Apache</tag>
      </tags>
  </entry>
  <entry>
    <title>zookeeper 从入门到放弃(00)</title>
    <url>/2020/02/11/zookeeper%20%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E6%94%BE%E5%BC%83(00)/</url>
    <content><![CDATA[<p>我司的定时任务就是使用 zookeeper 动态控制控制轮询的时间间隔，但是对于我这样沉迷于日常开发的童鞋来说，根本就不知道 zookeeper 到底是怎么玩起来的，刚好趁着非常时期，学习一下，共勉。</p>
<span id="more"></span>

<h3 id="download"><a href="#download" class="headerlink" title="download"></a>download</h3><p>镜像url：<a href="https://mirrors.tuna.tsinghua.edu.cn/apache/zookeeper/">https://mirrors.tuna.tsinghua.edu.cn/apache/zookeeper/</a></p>
<p>zookeeper folder 的目录结构如下：</p>
<p><img src="./1581424365229.png" alt="Alt text"></p>
<h3 id="server-run"><a href="#server-run" class="headerlink" title="server run"></a>server run</h3><p>凭直觉来说，bin目录下肯定有能 run 的东东。</p>
<p><img src="./1581424776709.png" alt="Alt text"></p>
<p>果不其然，run 一下看看</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">zkServer.<span class="built_in">cmd</span></span><br></pre></td></tr></table></figure>

<p><img src="./1581424907717.png" alt="Alt text"></p>
<p>conf/zoo.cfg file is missing</p>
<p>看看 conf 目录</p>
<p><img src="./1581424990184.png" alt="Alt text"></p>
<p>它里面有一个 zoo.cfg 的 sample，看起来还支持 log4j</p>
<p><img src="./1581425080575.png" alt="Alt text"></p>
<p>直接使用这个 sample 看看</p>
<p><img src="./1581425111763.png" alt="Alt text"></p>
<p>看样子是成功了</p>
<p><img src="./1581425145076.png" alt="Alt text"></p>
<h3 id="client-run"><a href="#client-run" class="headerlink" title="client run"></a>client run</h3><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">zkCli.<span class="built_in">cmd</span> localhost:<span class="number">2181</span></span><br></pre></td></tr></table></figure>

<p><img src="./1581425564050.png" alt="Alt text"></p>
<p>似乎除了点问题…</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">zkCli.<span class="built_in">cmd</span> <span class="number">127</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">1</span>:<span class="number">2181</span></span><br></pre></td></tr></table></figure>

<p><img src="./1581425616187.png" alt="Alt text"></p>
<p>还是不行</p>
<p>再看看 server</p>
<p><img src="./1581425733183.png" alt="Alt text"></p>
<p>强制关闭了现有链接？？？</p>
<p><strong>难道参数有问题？？？</strong></p>
<p>原来是 启动命令 出了问题</p>
<p>正确的启动命令</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">zkCli.<span class="built_in">cmd</span> -server <span class="number">127</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">1</span>:<span class="number">2181</span></span><br><span class="line">zkCli.<span class="built_in">cmd</span> -server localhost:<span class="number">2181</span></span><br></pre></td></tr></table></figure>

<p><img src="./1581484074711.png" alt="Alt text"></p>
<h3 id="simple-usage"><a href="#simple-usage" class="headerlink" title="simple usage"></a>simple usage</h3><p>看看 zookeeper 有哪些用法</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">help</span></span><br></pre></td></tr></table></figure>

<p><img src="./1581484314056.png" alt="Alt text"></p>
<p>启动两个 client 试试 简单的 create 语句，看看 work 不</p>
<p><img src="./1581484403601.png" alt="Alt text"></p>
<p><img src="./1581484422948.png" alt="Alt text"></p>
<p>看起来运转良好</p>
<p>参考资料：
<a href="https://blog.csdn.net/HeatDeath/article/details/79039411">win10 下安装 ZooKeeper 的方法</a>
<a href="https://yq.aliyun.com/articles/176505">Windows安装和使用zookeeper</a>
<a href="https://www.jianshu.com/p/fb190c6d9768">Windows(win 10)下安装ZooKeeper</a></p>
]]></content>
      <categories>
        <category>zookeeper</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>zookeeper 从入门到放弃(01)</title>
    <url>/2020/02/12/zookeeper%20%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E6%94%BE%E5%BC%83(01)/</url>
    <content><![CDATA[<p>看看 zookeeper 有哪些用法吧，共勉。</p>
<span id="more"></span>

<h3 id="help"><a href="#help" class="headerlink" title="help"></a>help</h3><p>可以列出 zookeeper 的用法</p>
<p><img src="./1581484562251.png" alt="Alt text"></p>
<h3 id="addauth-scheme-auth"><a href="#addauth-scheme-auth" class="headerlink" title="addauth scheme auth"></a>addauth scheme auth</h3><p>添加认证用户</p>
<p>scheme 可选值：</p>
<ul>
<li><strong>word</strong> 表示所有。创建节点的默认权限。有唯一的id是anyone授权的时候的模式为 world:anyone:rwadc 表示所有人都对这个节点有rwadc的权限。这里用的是id而不是expression</li>
<li><strong>ip</strong>     使用 IP 地址认证</li>
<li><strong>auth</strong>     不需要id。不过这里应该用expression来表示。即(scheme:expression:perm)</li>
<li><strong>host</strong>  使用用户主机名作为访问控制列表的id。但是这里需要注意的是表达式用的是主机名的后缀即可。举个例子。如果表达式设置为 corp.com可以匹配如host1.corp.com, host2.corp.com的主机名，但是不能匹配 host1.zookeeper.com这个主机名。</li>
<li><strong>digest</strong> 使用用户名:密码编码成md5的方式来作为访问控制列表的id。但是这里id不作为授权语句的一部分，这里也是用expression的方式。用户名: 密码先进行sha1编码后再用base64编码。这个比较恶心，后面再详细介绍。</li>
</ul>
<p>示例：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">addauth digest liuwen:<span class="number">123456</span></span><br></pre></td></tr></table></figure>

<h3 id="setAcl-s-v-version-R-path-acl"><a href="#setAcl-s-v-version-R-path-acl" class="headerlink" title="setAcl [-s] [-v version] [-R] path acl"></a>setAcl [-s] [-v version] [-R] path acl</h3><p>为节点设置权限</p>
<table>
<thead>
<tr>
<th align="left">权限</th>
<th align="right">ACL简写</th>
<th align="center">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left">CREATE</td>
<td align="right">c</td>
<td align="center">可以创建子节点</td>
</tr>
<tr>
<td align="left">DELETE</td>
<td align="right">d</td>
<td align="center">可以删除子节点（仅下一级节点）</td>
</tr>
<tr>
<td align="left">READ</td>
<td align="right">r</td>
<td align="center">可以读取节点数据及显示子节点列表</td>
</tr>
<tr>
<td align="left">WRITE</td>
<td align="right">w</td>
<td align="center">可以设置节点数据</td>
</tr>
<tr>
<td align="left">ADMIN</td>
<td align="right">a</td>
<td align="center">可以设置节点访问控制列表权限</td>
</tr>
</tbody></table>
<p>示例：</p>
<h4 id="1-auth"><a href="#1-auth" class="headerlink" title="1.auth"></a>1.auth</h4><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">create /test0 &quot;test0&quot;</span><br><span class="line">setAcl /test0 auth:liuwen:w</span><br></pre></td></tr></table></figure>
<p>这是为 addauth 添加的 liuwen 账号 对 节点 /test0 的一个 w 权限（即写权限），<strong>楼主无意中发现，如果不是 create 此节点的 client，是不能 对此节点设置权限的</strong>，报错如下：</p>
<p><img src="./1581486221327.png" alt="Alt text"></p>
<p>没有权限是不能访问的</p>
<p><img src="./1581486552704.png" alt="Alt text"></p>
<p>上述示例中，如果在新的客户端 addauth liuwen，是可以对 /test0 赋值的，因为 liuwen 有 test0 的 write 权限</p>
<p><img src="./1581487829840.png" alt="Alt text"></p>
<h4 id="2-world"><a href="#2-world" class="headerlink" title="2.world"></a>2.world</h4><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">create /test1 &quot;test1&quot;</span><br><span class="line">setAcl /test1 world:anyone:cdrwa</span><br></pre></td></tr></table></figure>

<p>任意 client 都可以随意访问</p>
<p><img src="./1581488731835.png" alt="Alt text"></p>
<p><img src="./1581488744096.png" alt="Alt text"></p>
<h3 id="getAcl-s-path"><a href="#getAcl-s-path" class="headerlink" title="getAcl [-s] path"></a>getAcl [-s] path</h3><p>获取节点acl信息</p>
<p><img src="./1581494878460.png" alt="Alt text"></p>
<h3 id="get-s-w-path"><a href="#get-s-w-path" class="headerlink" title="get [-s] [-w] path"></a>get [-s] [-w] path</h3><p>获取一个节点的 value</p>
<p><img src="./1581488899045.png" alt="Alt text"></p>
<p>看起来 zookeeper 是有持久化的，我关闭 server 和 clients 之后，依然可以访问到之前创建的 node </p>
<h3 id="close"><a href="#close" class="headerlink" title="close"></a>close</h3><p>关闭连接，会关闭当前 client ，但是不会影响其他 client</p>
<p><img src="./1581489049217.png" alt="Alt text"></p>
<h3 id="delete-v-version-path"><a href="#delete-v-version-path" class="headerlink" title="delete [-v version] path"></a>delete [-v version] path</h3><p>删除 node，没有 acl 权限的 client 也可以删除相应节点</p>
<p><img src="./1581489825419.png" alt="Alt text"></p>
<p><strong>注：如果一个节点下有子节点，使用delete是不行的，需要使用deleteall</strong></p>
<p><img src="./1581492769845.png" alt="Alt text"></p>
<h3 id="deleteall-path"><a href="#deleteall-path" class="headerlink" title="deleteall path"></a>deleteall path</h3><p>删除此节点及此节点下的子节点</p>
<p><strong>注：path必须是一个完整的节点path</strong></p>
<p><img src="./1581490020869.png" alt="Alt text"></p>
<p><img src="./1581490060309.png" alt="Alt text"></p>
<h3 id="setquota-n-b-val-path"><a href="#setquota-n-b-val-path" class="headerlink" title="setquota -n|-b val path"></a>setquota -n|-b val path</h3><ul>
<li><strong>-n</strong> 表示自身节点+子节点的最大个数</li>
<li><strong>-b</strong> 表示数据值的最大长度</li>
<li><strong>val</strong> 子节点最大个数或数据值的最大长度</li>
<li><strong>path</strong> 节点路径</li>
</ul>
<h4 id="n-设置自身节点-子节点的最大个数"><a href="#n-设置自身节点-子节点的最大个数" class="headerlink" title="-n 设置自身节点+子节点的最大个数"></a>-n 设置自身节点+子节点的最大个数</h4><p><img src="./1581490703165.png" alt="Alt text"></p>
<p><strong>注：比较坑的一点是，虽然可以设置子节点的最大个数，但是超过此个数create也是成功的！！！自身也算最大节点数中的一个</strong></p>
<p>超过个数限制的话，server端会出现警告信息</p>
<p><img src="./1581490966506.png" alt="Alt text"></p>
<h4 id="b-设置节点值的最大数值（单位-byte）"><a href="#b-设置节点值的最大数值（单位-byte）" class="headerlink" title="-b 设置节点值的最大数值（单位 byte）"></a>-b 设置节点值的最大数值（单位 byte）</h4><p><img src="./1581493360943.png" alt="Alt text"></p>
<p>设置的byte value也可以小于当前节点长度</p>
<p>重新set节点value byte长度如果大于设置值，server 也会看到相应的 warn 信息</p>
<p><img src="./1581493478728.png" alt="Alt text"></p>
<p><img src="./1581493500567.png" alt="Alt text"></p>
<p><strong>注：如果使用setquota，-n、-b是被锁定的，如果切换设置会提示，org.apache.commons.cli.AlreadySelectedException: The option ‘b’ was specified but an option from this group has already been selected: ‘n’，org.apache.commons.cli.AlreadySelectedException: The option ‘n’ was specified but an option from this group has already been selected: ‘b’，重新create的节点也会被锁定quota，需要关闭当前client，重新启动一个client，诡异？or坑爹？</strong></p>
<p><img src="./1581493719478.png" alt="Alt text"></p>
<p><img src="./1581493864410.png" alt="Alt text"></p>
<h3 id="delquota-n-b-path"><a href="#delquota-n-b-path" class="headerlink" title="delquota [-n|-b] path"></a>delquota [-n|-b] path</h3><p>移除节点数量、长度限制</p>
<p><strong>注：delete 节点的时候，是不是把 节点 的 quota 删除的</strong></p>
<p><img src="./1581492679794.png" alt="Alt text"></p>
<h3 id="listquota-path"><a href="#listquota-path" class="headerlink" title="listquota path"></a>listquota path</h3><p>显示节点的 quota 信息</p>
<p><img src="./1581494522504.png" alt="Alt text"></p>
<p><strong>注：Output quota 表示子节点 quota 信息，Output stat 表示当前节点 quota 信息，Output stat 里面的 bytes = （当前节点bytes+子节点bytes），-1表示没有限制</strong></p>
<h3 id="history"><a href="#history" class="headerlink" title="history"></a>history</h3><p>查看历史命令</p>
<p><img src="./1581495453077.png" alt="Alt text"></p>
<h3 id="ls-s-w-R-path"><a href="#ls-s-w-R-path" class="headerlink" title="ls [-s] [-w] [-R] path"></a>ls [-s] [-w] [-R] path</h3><ul>
<li>-s 状态</li>
<li>-w 添加监听</li>
<li>-R 节点及其子节点</li>
</ul>
<p><img src="./1581496142325.png" alt="Alt text"></p>
<p><img src="./1581496167114.png" alt="Alt text"></p>
<p><img src="./1581496188036.png" alt="Alt text"></p>
<p><strong>注：如果一个client a在一个节点添加了watcher监听，那么针对此节点增删子节点的改动将被监听到1次，但是别的client b对此节点做的改动，client a监听不到，超过一次，client a也监听不到，困惑，难道是为了节约资源，让程序员自己去控制监听？？？</strong></p>
<p><img src="./1581496808809.png" alt="Alt text"></p>
<h3 id="ls2-path-watch"><a href="#ls2-path-watch" class="headerlink" title="ls2 path [watch]"></a>ls2 path [watch]</h3><p>被 ls 取代</p>
<p><img src="./1581497078003.png" alt="Alt text"></p>
<h3 id="printwatches-on-off"><a href="#printwatches-on-off" class="headerlink" title="printwatches on|off"></a>printwatches on|off</h3><p>是否打印 watcher 信息，默认值是 on</p>
<p><img src="./1581497424788.png" alt="Alt text"></p>
<h3 id="quit"><a href="#quit" class="headerlink" title="quit"></a>quit</h3><p>关闭连接并且退出</p>
<h3 id="redo-cmdno"><a href="#redo-cmdno" class="headerlink" title="redo cmdno"></a>redo cmdno</h3><p>重新执行 command no 序列的命令</p>
<p><img src="./1581653360942.png" alt="Alt text"></p>
<h3 id="removewatches-path-c-d-a-l"><a href="#removewatches-path-c-d-a-l" class="headerlink" title="removewatches path [-c|-d|-a] [-l]"></a>removewatches path [-c|-d|-a] [-l]</h3><p>移除节点的 watcher</p>
<p>[-c|-d|-a] [-l] 代表什么意思，暂时没有搞懂，居然找不到官方 docs，这项目凉了吗？</p>
<p><img src="./1581654628713.png" alt="Alt text"></p>
<h3 id="rmr"><a href="#rmr" class="headerlink" title="rmr"></a>rmr</h3><p>被 deleteall 取代了</p>
<p><img src="./1581655247921.png" alt="Alt text"></p>
<p>但是节点及其子节点也能被实实在在地删除，真是坑的一匹啊</p>
<p><img src="./1581655371234.png" alt="Alt text"></p>
<h3 id="set-s-v-version-path-data"><a href="#set-s-v-version-path-data" class="headerlink" title="set [-s] [-v version] path data"></a>set [-s] [-v version] path data</h3><p>设置节点值</p>
<p><img src="./1581655449629.png" alt="Alt text"></p>
<h3 id="stat-w-path"><a href="#stat-w-path" class="headerlink" title="stat [-w] path"></a>stat [-w] path</h3><p>可以查看到 节点属性，并为之添加一个一次性 watcher</p>
<p><img src="./1581655628116.png" alt="Alt text"></p>
<h3 id="sync-path"><a href="#sync-path" class="headerlink" title="sync path"></a>sync path</h3><p>手动同步节点值</p>
<p>个人感觉在 zookeeper 集群运转正常的情况下，不需要使用这条语句</p>
<p><img src="./1581655746861.png" alt="Alt text"></p>
<h3 id="config-c-w-s"><a href="#config-c-w-s" class="headerlink" title="config [-c] [-w] [-s]"></a>config [-c] [-w] [-s]</h3><p>查看当前集zk server配置</p>
<ul>
<li>-c 仅输出与当前配置相对应的版本和客户端连接字符串</li>
<li>-w 用于在znode上设置watcher</li>
<li>-s 用于显示znode的统计信息</li>
</ul>
<p><img src="./1581669909482.png" alt="Alt text"></p>
<p><img src="./1581670449538.png" alt="Alt text"></p>
<h3 id="reconfig-s-v-version-file-path-members-serverID-host-port1-port2-port3-…-add-serverId-host-port1-port2-port3-…-remove-serverId-…"><a href="#reconfig-s-v-version-file-path-members-serverID-host-port1-port2-port3-…-add-serverId-host-port1-port2-port3-…-remove-serverId-…" class="headerlink" title="reconfig [-s] [-v version] [[-file path] | [-members serverID=host:port1:port2;port3[,…]]] | [-add serverId=host:port1:port2;port3[,…]] [-remove serverId[,…]*]"></a>reconfig [-s] [-v version] [[-file path] | [-members serverID=host:port1:port2;port3[,…]<em>]] | [-add serverId=host:port1:port2;port3[,…]]</em> [-remove serverId[,…]*]</h3><p>添加/删除/修改新机器到zookeeper集群</p>
<p>暂时没搞懂</p>
<p>参考资料：
<a href="http://www.yoonper.com/post.php?id=47">ZooKeeper ACL权限控制</a>
<a href="https://www.jianshu.com/p/147ca2533aff">Zookeeper权限管理之坑</a>
<a href="https://www.jianshu.com/p/aec61105d714">zookeeper-04-基本命令</a>
<a href="https://www.cnblogs.com/cc11001100/p/9971808.html">Zookeeper笔记之quota</a>
<a href="https://blog.csdn.net/weixin_42132763/article/details/103770230">Zookeeper源语（客户端命令）集合（3.5.6）</a>
<a href="https://www.cndba.cn/dave/article/3300">Zookeeper 客户端 zkCLI 命令详解</a>
<a href="http://zookeeper.apache.org/doc">Zookeeper docs</a></p>
]]></content>
      <categories>
        <category>zookeeper</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>zookeeper 从入门到放弃(02)</title>
    <url>/2020/02/14/zookeeper%20%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E6%94%BE%E5%BC%83(02)/</url>
    <content><![CDATA[<p>之前有探究如何启动多个zookeeper，但如果不形成集群的话，意义不大，那么zookeeper 集群如何搭建呢？</p>
<span id="more"></span>

<h3 id="create-zookeeper-server-folder"><a href="#create-zookeeper-server-folder" class="headerlink" title="create zookeeper server folder"></a>create zookeeper server folder</h3><p>复制多个 zookeepr folder</p>
<p>我这里拷贝了3个，但实际上为了简化过程我只使用了2个</p>
<p><img src="./1581658719736.png" alt="Alt text"></p>
<h3 id="set-config"><a href="#set-config" class="headerlink" title="set config"></a>set config</h3><p>server1 config</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># The number of milliseconds of each tick</span><br><span class="line">tickTime&#x3D;2000</span><br><span class="line"># The number of ticks that the initial </span><br><span class="line"># synchronization phase can take</span><br><span class="line">initLimit&#x3D;10</span><br><span class="line"># The number of ticks that can pass between </span><br><span class="line"># sending a request and getting an acknowledgement</span><br><span class="line">syncLimit&#x3D;5</span><br><span class="line"># the directory where the snapshot is stored.</span><br><span class="line"># do not use &#x2F;tmp for storage, &#x2F;tmp here is just </span><br><span class="line"># example sakes.</span><br><span class="line">dataDir&#x3D;..&#x2F;zkData</span><br><span class="line">dataLogDir&#x3D;..&#x2F;zkData&#x2F;log</span><br><span class="line"># the port at which the clients will connect</span><br><span class="line">clientPort&#x3D;2183</span><br><span class="line"># the maximum number of client connections.</span><br><span class="line"># increase this if you need to handle more clients</span><br><span class="line">maxClientCnxns&#x3D;60</span><br><span class="line">#</span><br><span class="line"># Be sure to read the maintenance section of the </span><br><span class="line"># administrator guide before turning on autopurge.</span><br><span class="line">#</span><br><span class="line"># http:&#x2F;&#x2F;zookeeper.apache.org&#x2F;doc&#x2F;current&#x2F;zookeeperAdmin.html#sc_maintenance</span><br><span class="line">#</span><br><span class="line"># The number of snapshots to retain in dataDir</span><br><span class="line">autopurge.snapRetainCount&#x3D;3</span><br><span class="line"># Purge task interval in hours</span><br><span class="line"># Set to &quot;0&quot; to disable auto purge feature</span><br><span class="line">autopurge.purgeInterval&#x3D;1</span><br><span class="line">reconfigEnabled&#x3D;true</span><br><span class="line">#server.1&#x3D;127.0.0.1:2081:2780:2783:participant;2791</span><br><span class="line">server.1&#x3D;127.0.0.1:2887:3887</span><br><span class="line">server.2&#x3D;127.0.0.1:2888:3888</span><br><span class="line">#server.3&#x3D;127.0.0.1:2889:3889</span><br><span class="line">admin.serverPort&#x3D;8081</span><br></pre></td></tr></table></figure>

<p>server1 config</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># The number of milliseconds of each tick</span><br><span class="line">tickTime&#x3D;2000</span><br><span class="line"># The number of ticks that the initial </span><br><span class="line"># synchronization phase can take</span><br><span class="line">initLimit&#x3D;10</span><br><span class="line"># The number of ticks that can pass between </span><br><span class="line"># sending a request and getting an acknowledgement</span><br><span class="line">syncLimit&#x3D;5</span><br><span class="line"># the directory where the snapshot is stored.</span><br><span class="line"># do not use &#x2F;tmp for storage, &#x2F;tmp here is just </span><br><span class="line"># example sakes.</span><br><span class="line">dataDir&#x3D;..&#x2F;zkData</span><br><span class="line">dataLogDir&#x3D;..&#x2F;zkData&#x2F;log</span><br><span class="line"># the port at which the clients will connect</span><br><span class="line">clientPort&#x3D;2182</span><br><span class="line"># the maximum number of client connections.</span><br><span class="line"># increase this if you need to handle more clients</span><br><span class="line">maxClientCnxns&#x3D;60</span><br><span class="line">#</span><br><span class="line"># Be sure to read the maintenance section of the </span><br><span class="line"># administrator guide before turning on autopurge.</span><br><span class="line">#</span><br><span class="line"># http:&#x2F;&#x2F;zookeeper.apache.org&#x2F;doc&#x2F;current&#x2F;zookeeperAdmin.html#sc_maintenance</span><br><span class="line">#</span><br><span class="line"># The number of snapshots to retain in dataDir</span><br><span class="line">autopurge.snapRetainCount&#x3D;3</span><br><span class="line"># Purge task interval in hours</span><br><span class="line"># Set to &quot;0&quot; to disable auto purge feature</span><br><span class="line">autopurge.purgeInterval&#x3D;1</span><br><span class="line">reconfigEnabled&#x3D;true</span><br><span class="line">#server.1&#x3D;127.0.0.1:2081:2780:2783:participant;2791</span><br><span class="line">server.1&#x3D;127.0.0.1:2887:3887</span><br><span class="line">server.2&#x3D;127.0.0.1:2888:3888</span><br><span class="line">#server.3&#x3D;127.0.0.1:2889:3889</span><br><span class="line">admin.serverPort&#x3D;8082</span><br></pre></td></tr></table></figure>

<h3 id="run-servers"><a href="#run-servers" class="headerlink" title="run servers"></a>run servers</h3><p>zkServer 分别启动两个 server</p>
<h3 id="test"><a href="#test" class="headerlink" title="test"></a>test</h3><p>ok，没有啥问题</p>
<p><img src="./1581659531077.png" alt="Alt text"></p>
<p><img src="./1581659569052.png" alt="Alt text"></p>
<p>有意思的是，当我关掉一台 server 时，分别连接 2 个 server 的 client 都出现了异常</p>
<p><img src="./1581659805921.png" alt="Alt text"></p>
<p><img src="./1581659815763.png" alt="Alt text"></p>
<p><img src="./1581659715318.png" alt="Alt text"></p>
<p><img src="./1581659729677.png" alt="Alt text"></p>
<p>那么集群的高可用性、健壮性是如何体现的呢？</p>
<p>当我启动3台server时，如果我关闭其中1台，那么，对应的3个client，只有连接关闭那台server的client受到了影响，<strong>这是因为 zk server 具有fast fail特性，当挂掉的 server 数量不超过 server 总量的 1/2 时，不影响其提供服务</strong></p>
<p>参考资料：
<a href="https://blog.csdn.net/sinat_34596644/article/details/78289842">win10环境下搭建zookeeper伪集群</a></p>
]]></content>
      <categories>
        <category>zookeeper</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>《后浪》观后感</title>
    <url>/2020/05/10/%E3%80%8A%E5%90%8E%E6%B5%AA%E3%80%8B%E8%A7%82%E5%90%8E%E6%84%9F/</url>
    <content><![CDATA[<p>2020年5月4日 B站发布后浪，引发热议，抒予己见，特此记录。</p>
<span id="more"></span>

<p>场景一：</p>
<p>同学小A是一位诗人，他认为，生活不仅有眼前的苟且，还有诗和远方。</p>
<p>同学小B是一位积极向上的青年，她认为，每当夕阳穿透高楼大厦的缝隙时，崭新的一天将在一个夜晚后开始。</p>
<p>同学小C是一位悲观抑郁的青年，他认为，生而为人，他感觉很抱歉。</p>
<p>同学小D是一位佛性青年，她认为，生活不必被辛苦的努力满满填充，随遇而安终其一生就好。</p>
<p>同学小E是一位充满斗志的青年，他认为，天下“王侯将相”非生而有其种，自己努力拼搏也会成功人士。</p>
<p>场景二：</p>
<p>先天失明的盲人甲，摸着大象的牙说道，“大象有点像大萝卜”。</p>
<p>先天失明的盲人乙，摸着大象的耳朵说道，“大象像簸箕”。</p>
<p>先天失明的盲人丙，摸着大象的尾巴说道，“大象好像一根绳子”。</p>
<p>先天失明的盲人丙，摸着大象的头说道，“大象应该是一块大石头”。</p>
<p>先天失明的盲人丁，摸着大象的鼻子说道，“大象跟棍子一样”。</p>
<p>先天失明的盲人戊，摸着大象的腿说道，“大象是四根粗木桩”。</p>
<p>先天失明的盲人己，躺在大象身上说，“大象就是一张床”。</p>
<p>先天失明的盲人庚，摸着大象的肚子说，“大象不就是一座翁吗”。</p>
<p>场景三：</p>
<p>无边无垠的灰白雾气涌现，阳光明媚波涛起伏的海面上，一根萝卜、一张簸箕、一根绳子、一块大石头、一根棍子、四根粗木桩、一张床、一座翁若隐若现，在一阵阵海风的吹拂下，渐渐汇聚成一头“象”，它挥舞着四根粗木桩，扇动着簸箕，缓慢的游向远方。</p>
<p><img src="./%E8%B1%A1.png" alt="Alt text"></p>
]]></content>
      <categories>
        <category>评论</category>
      </categories>
      <tags>
        <tag>其他</tag>
      </tags>
  </entry>
  <entry>
    <title>Hadoop单机/伪分布式部署</title>
    <url>/2024/06/14/%E4%BC%AA%E5%88%86%E5%B8%83%E5%BC%8F%E9%83%A8%E7%BD%B2/</url>
    <content><![CDATA[<p>使用 VMware Workstation 安装 1台centos 7，并在上面实现 hadoop 的单机部署。</p>
<span id="more"></span>

<h4 id="配置静态-IP"><a href="#配置静态-IP" class="headerlink" title="配置静态 IP"></a>配置静态 IP</h4><p>vim /etc/sysconfig/network-scripts/ifcfg-ens33</p>
<p><img src="./1718381886504.png" alt="Alt text"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">TYPE&#x3D;&quot;Ethernet&quot;</span><br><span class="line">PROXY_METHOD&#x3D;&quot;none&quot;</span><br><span class="line">BROWSER_ONLY&#x3D;&quot;no&quot;</span><br><span class="line">BOOTPROTO&#x3D;&quot;static&quot;</span><br><span class="line">DEFROUTE&#x3D;&quot;yes&quot;</span><br><span class="line">IPV4_FAILURE_FATAL&#x3D;&quot;no&quot;</span><br><span class="line">IPV6INIT&#x3D;&quot;yes&quot;</span><br><span class="line">IPV6_AUTOCONF&#x3D;&quot;yes&quot;</span><br><span class="line">IPV6_DEFROUTE&#x3D;&quot;yes&quot;</span><br><span class="line">IPV6_FAILURE_FATAL&#x3D;&quot;no&quot;</span><br><span class="line">IPV6_ADDR_GEN_MODE&#x3D;&quot;stable-privacy&quot;</span><br><span class="line">NAME&#x3D;&quot;ens33&quot;</span><br><span class="line">UUID&#x3D;&quot;cafa4500-048b-41a3-a880-0ea13ff55b07&quot;</span><br><span class="line">DEVICE&#x3D;&quot;ens33&quot;</span><br><span class="line">ONBOOT&#x3D;&quot;yes&quot;</span><br><span class="line">IPADDR&#x3D;192.168.64.111</span><br><span class="line">NETMASK&#x3D;255.255.255.0</span><br><span class="line">GATEWAY&#x3D;192.168.64.2</span><br><span class="line">DNS1&#x3D;192.168.64.2</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>sudo vim /etc/hostname</p>
<p><img src="./1718382005616.png" alt="Alt text"></p>
<p>sudo vim /etc/hosts</p>
<p><img src="./1718389310952.png" alt="Alt text"></p>
<h4 id="创建-hadoop-用户"><a href="#创建-hadoop-用户" class="headerlink" title="创建 hadoop 用户"></a>创建 hadoop 用户</h4><p>创建并设置密码</p>
<p><img src="./1718388205334.png" alt="Alt text"></p>
<p>vim /etc/sudoers</p>
<p><img src="./1718388380722.png" alt="Alt text"></p>
<h4 id="上传安装包"><a href="#上传安装包" class="headerlink" title="上传安装包"></a>上传安装包</h4><p>在 centos 根目录下创建 devops 目录
mkdir /devops</p>
<p>上传 Hadoop jar 包和 jdk jar 包</p>
<p><img src="./1718382458292.png" alt="Alt text"></p>
<h4 id="配置-java-环境"><a href="#配置-java-环境" class="headerlink" title="配置 java 环境"></a>配置 java 环境</h4><p>解压 jdk 包</p>
<p>tar zxvf jdk-8u212-linux-x64.tar.g</p>
<p><img src="./1718382589201.png" alt="Alt text"></p>
<p>创建 my_env.sh 环境变量脚本</p>
<p>vim /etc/profile.d/my_env.sh</p>
<p>内容如下</p>
<p><img src="./1718386153106.png" alt="Alt text"></p>
<p>使新配置的环境变量生效 </p>
<p>source /etc/profile</p>
<p><img src="./1718386197783.png" alt="Alt text"></p>
<h4 id="配置-Hadoop-环境"><a href="#配置-Hadoop-环境" class="headerlink" title="配置 Hadoop 环境"></a>配置 Hadoop 环境</h4><p>解压 Hadoop 包</p>
<p>tar -zxvf hadoop-3.1.3.tar.gz</p>
<p>编辑环境变量</p>
<p>vim /etc/profile.d/my_env.sh</p>
<p><img src="./1718386618212.png" alt="Alt text"></p>
<p>使新配置的环境变量生效</p>
<p>source /etc/profile</p>
<p><img src="./1718386678514.png" alt="Alt text"></p>
<h4 id="配置-Hadoop-配置文件"><a href="#配置-Hadoop-配置文件" class="headerlink" title="配置 Hadoop 配置文件"></a>配置 Hadoop 配置文件</h4><p>vim /devops/hadoop-3.1.3/etc/hadoop/core-site.xml</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;configuration&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 指定NameNode的地址 --&gt;</span><br><span class="line">        &lt;property&gt;</span><br><span class="line">                &lt;name&gt;fs.defaultFS&lt;&#x2F;name&gt;</span><br><span class="line">                &lt;value&gt;hdfs:&#x2F;&#x2F;hadoop111:9820&lt;&#x2F;value&gt;</span><br><span class="line">        &lt;&#x2F;property&gt;</span><br><span class="line">        &lt;!-- 指定hadoop数据的存储目录 --&gt;</span><br><span class="line">        &lt;property&gt;</span><br><span class="line">                &lt;name&gt;hadoop.tmp.dir&lt;&#x2F;name&gt;</span><br><span class="line">                &lt;value&gt;&#x2F;devops&#x2F;hadoop-3.1.3&#x2F;data&lt;&#x2F;value&gt;</span><br><span class="line">        &lt;&#x2F;property&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 配置HDFS网页登录使用的静态用户为hadoop --&gt;</span><br><span class="line">        &lt;property&gt;</span><br><span class="line">                &lt;name&gt;hadoop.http.staticuser.user&lt;&#x2F;name&gt;</span><br><span class="line">                &lt;value&gt;hadoop&lt;&#x2F;value&gt;</span><br><span class="line">        &lt;&#x2F;property&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 配置该hadoop用户(superUser)允许通过代理访问的主机节点 --&gt;</span><br><span class="line">        &lt;property&gt;</span><br><span class="line">                &lt;name&gt;hadoop.proxyuser.hadoop.hosts&lt;&#x2F;name&gt;</span><br><span class="line">                &lt;value&gt;*&lt;&#x2F;value&gt;</span><br><span class="line">        &lt;&#x2F;property&gt;</span><br><span class="line">        &lt;!-- 配置该hadoop用户(superUser)允许通过代理用户所属组 --&gt;</span><br><span class="line">        &lt;property&gt;</span><br><span class="line">                &lt;name&gt;hadoop.proxyuser.hadoop.groups&lt;&#x2F;name&gt;</span><br><span class="line">                &lt;value&gt;*&lt;&#x2F;value&gt;</span><br><span class="line">        &lt;&#x2F;property&gt;</span><br><span class="line">        &lt;!-- 配置该hadoop用户(superUser)允许通过代理的用户--&gt;</span><br><span class="line">        &lt;property&gt;</span><br><span class="line">                &lt;name&gt;hadoop.proxyuser.hadoop.groups&lt;&#x2F;name&gt;</span><br><span class="line">                &lt;value&gt;*&lt;&#x2F;value&gt;</span><br><span class="line">        &lt;&#x2F;property&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;configuration&gt;</span><br></pre></td></tr></table></figure>

<p>vim /devops/hadoop-3.1.3/etc/hadoop/hdfs-site.xml</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;configuration&gt;</span><br><span class="line">	&lt;!-- nn web端访问地址--&gt;</span><br><span class="line">	&lt;property&gt;</span><br><span class="line">        &lt;name&gt;dfs.namenode.http-address&lt;&#x2F;name&gt;</span><br><span class="line">        &lt;value&gt;hadoop111:9870&lt;&#x2F;value&gt;</span><br><span class="line">    &lt;&#x2F;property&gt;</span><br><span class="line">	&lt;!-- 2nn web端访问地址--&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;dfs.namenode.secondary.http-address&lt;&#x2F;name&gt;</span><br><span class="line">        &lt;value&gt;hadoop111:9868&lt;&#x2F;value&gt;</span><br><span class="line">    &lt;&#x2F;property&gt;</span><br><span class="line">	&lt;!-- NameNode存储其元数据的本地文件系统路径--&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">	&lt;name&gt;dfs.namenode.name.dir&lt;&#x2F;name&gt;</span><br><span class="line">	&lt;value&gt;file:&#x2F;&#x2F;$&#123;hadoop.tmp.dir&#125;&#x2F;dfs&#x2F;name&lt;&#x2F;value&gt;</span><br><span class="line">    &lt;&#x2F;property&gt;</span><br><span class="line">	&lt;!-- datanode数据存储目录--&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">	&lt;name&gt;dfs.datanode.data.dir&lt;&#x2F;name&gt;</span><br><span class="line">	&lt;value&gt;file:&#x2F;&#x2F;$&#123;hadoop.tmp.dir&#125;&#x2F;dfs&#x2F;data&lt;&#x2F;value&gt;</span><br><span class="line">    &lt;&#x2F;property&gt;</span><br><span class="line">	&lt;!-- HDFS中文件的数据块副本数量--&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;dfs.replication&lt;&#x2F;name&gt;</span><br><span class="line">        &lt;value&gt;1&lt;&#x2F;value&gt;</span><br><span class="line">    &lt;&#x2F;property&gt;</span><br><span class="line">&lt;&#x2F;configuration&gt;</span><br></pre></td></tr></table></figure>

<p>vim /devops/hadoop-3.1.3/etc/hadoop/yarn-site.xml</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;configuration&gt;</span><br><span class="line">	&lt;!-- 指定MR走shuffle --&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;yarn.nodemanager.aux-services&lt;&#x2F;name&gt;</span><br><span class="line">        &lt;value&gt;mapreduce_shuffle&lt;&#x2F;value&gt;</span><br><span class="line">	&lt;&#x2F;property&gt;</span><br><span class="line">	&lt;!-- 指定ResourceManager的地址--&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;yarn.resourcemanager.hostname&lt;&#x2F;name&gt;</span><br><span class="line">        &lt;value&gt;hadoop111&lt;&#x2F;value&gt;</span><br><span class="line">	&lt;&#x2F;property&gt;</span><br><span class="line">	&lt;!-- 环境变量的继承 --&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;yarn.nodemanager.env-whitelist&lt;&#x2F;name&gt;</span><br><span class="line">        &lt;value&gt;JAVA_HOME,HADOOP_COMMON_HOME,HADOOP_HDFS_HOME,HADOOP_CONF_DIR,CLASSPATH_PREPEND_DISTCACHE,HADOOP_YARN_HOME,HADOOP_MAPRED_HOME&lt;&#x2F;value&gt;</span><br><span class="line">	&lt;&#x2F;property&gt;</span><br><span class="line">	&lt;!-- yarn容器允许分配的最大最小内存 --&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;yarn.scheduler.minimum-allocation-mb&lt;&#x2F;name&gt;</span><br><span class="line">        &lt;value&gt;512&lt;&#x2F;value&gt;</span><br><span class="line">    &lt;&#x2F;property&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;yarn.scheduler.maximum-allocation-mb&lt;&#x2F;name&gt;</span><br><span class="line">        &lt;value&gt;4096&lt;&#x2F;value&gt;</span><br><span class="line">	&lt;&#x2F;property&gt;</span><br><span class="line">	&lt;!-- yarn容器允许管理的物理内存大小 --&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;yarn.nodemanager.resource.memory-mb&lt;&#x2F;name&gt;</span><br><span class="line">        &lt;value&gt;4096&lt;&#x2F;value&gt;</span><br><span class="line">	&lt;&#x2F;property&gt;</span><br><span class="line">	&lt;!-- 关闭yarn对物理内存和虚拟内存的限制检查 --&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;yarn.nodemanager.pmem-check-enabled&lt;&#x2F;name&gt;</span><br><span class="line">        &lt;value&gt;false&lt;&#x2F;value&gt;</span><br><span class="line">    &lt;&#x2F;property&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;yarn.nodemanager.vmem-check-enabled&lt;&#x2F;name&gt;</span><br><span class="line">        &lt;value&gt;false&lt;&#x2F;value&gt;</span><br><span class="line">    &lt;&#x2F;property&gt;</span><br><span class="line">&lt;&#x2F;configuration&gt;</span><br></pre></td></tr></table></figure>

<p>vim /devops/hadoop-3.1.3/etc/hadoop/mapred-site.xml</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;configuration&gt;</span><br><span class="line">	&lt;!-- 指定MapReduce程序运行在Yarn上 --&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;mapreduce.framework.name&lt;&#x2F;name&gt;</span><br><span class="line">        &lt;value&gt;yarn&lt;&#x2F;value&gt;</span><br><span class="line">    &lt;&#x2F;property&gt;</span><br><span class="line">&lt;&#x2F;configuration&gt;</span><br></pre></td></tr></table></figure>

<p>初始化NameNode的数据目录</p>
<p>hdfs namenode -format</p>
<p>由于前面一直使用root操作，所以 hadoop 安装目录的所有权不对，这里变更 hadoop 安装目录的所有权</p>
<p>sudo chown -R hadoop:hadoop hadoop-3.1.3</p>
<h4 id="设置-SSH-免密访问本地"><a href="#设置-SSH-免密访问本地" class="headerlink" title="设置 SSH 免密访问本地"></a>设置 SSH 免密访问本地</h4><p>su hadoop
注意下面这条命令连按两次回车
ssh-keygen
cat ~/.ssh/id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys
chmod 600 ~/.ssh/authorized_keys
chmod 700 ~/.ssh 
chmod 600 ~/.ssh/id_rsa</p>
<h4 id="启动和关闭-Hadoop"><a href="#启动和关闭-Hadoop" class="headerlink" title="启动和关闭 Hadoop"></a>启动和关闭 Hadoop</h4><p>由于前面配置了 /devops/hadoop-3.1.3/sbin 的环境变量，这里可以直接使用 start-all.sh 启动</p>
<p><img src="./1718393286251.png" alt="Alt text"></p>
<p><img src="./1718395765964.png" alt="Alt text"></p>
<p><img src="./1718395779537.png" alt="Alt text"></p>
<p><img src="./1718395797681.png" alt="Alt text"></p>
<p>使用 stop-all.sh 关闭 hadoop 服务</p>
<p><img src="./1718395847480.png" alt="Alt text"></p>
]]></content>
      <categories>
        <category>Hadoop</category>
      </categories>
      <tags>
        <tag>其他</tag>
      </tags>
  </entry>
  <entry>
    <title>土豆炖牛肉</title>
    <url>/2017/09/30/%E5%9C%9F%E8%B1%86%E7%82%96%E7%89%9B%E8%82%89/</url>
    <content><![CDATA[<p>好久没写博客了，得好好补补。</p>
<span id="more"></span>

<h4 id="Step-1："><a href="#Step-1：" class="headerlink" title="Step 1："></a>Step 1：</h4><p>配料：牛肉、土豆、胡萝卜、八角、大葱、姜、生抽、老抽、花生油、盐、醋</p>
<h4 id="Step-2："><a href="#Step-2：" class="headerlink" title="Step 2："></a>Step 2：</h4><p>牛肉洗净，切成小块；适量姜切片；适量八角洗净。</p>
<p><img src="./1506768137981.png" alt="Alt text"></p>
<h4 id="Step-3："><a href="#Step-3：" class="headerlink" title="Step 3："></a>Step 3：</h4><p>在锅中加入冷水，把上述准备好的 牛肉、姜、八角、少量盐  放入锅中大火煮沸，水沸腾后 2~3 分钟捞起（去掉白沫）。</p>
<p><img src="./IMG_20170916_110745.jpg" alt="Alt text"></p>
<p><img src="./IMG_20170916_111007.jpg" alt="Alt text"></p>
<h4 id="Step-4："><a href="#Step-4：" class="headerlink" title="Step 4："></a>Step 4：</h4><p>土豆、胡萝卜 洗净、削皮，切成小块；大葱洗净切成小段；切一小段姜，切碎。</p>
<p><img src="./IMG_20170916_110806.jpg" alt="Alt text"></p>
<p><img src="./IMG_20170916_111331.jpg" alt="Alt text"></p>
<h4 id="Step-5："><a href="#Step-5：" class="headerlink" title="Step 5："></a>Step 5：</h4><p>热油，依次加入 胡萝卜、土豆、大葱 翻炒至2层熟。</p>
<p><img src="./IMG_20170916_112232.jpg" alt="Alt text"></p>
<h4 id="Step-6："><a href="#Step-6：" class="headerlink" title="Step 6："></a>Step 6：</h4><p>锅中放入油，烧热，放入捞起的牛肉；翻炒片刻，加入生抽、老抽、姜末、盐炒一小会。</p>
<p><img src="./IMG_20170916_112657.jpg" alt="Alt text"></p>
<h4 id="Step-7："><a href="#Step-7：" class="headerlink" title="Step 7："></a>Step 7：</h4><p>炒到牛肉变色之后，导入适量的水（能完全淹没牛肉即可），盖上锅盖使用小火煮10分钟左右，时间可以根据牛肉的量自行调整。</p>
<p><img src="./IMG_20170916_121636.jpg" alt="Alt text"></p>
<h4 id="Step-8："><a href="#Step-8：" class="headerlink" title="Step 8："></a>Step 8：</h4><p>往锅中加入炒过的 胡萝卜、土豆、大葱，加入一定量的水淹没；滴入<strong>一滴醋</strong>（楼主不太喜欢吃酸的，所以放的少，可以根据口味自行调整；据说煮牛肉的时候加一点点醋可以让牛肉更容易煮烂，并且口感更鲜美），再盖上锅盖用小火煮20分钟左右；待土豆煮到7-8层熟，加入适量的盐，使用大火收水。</p>
<p><img src="./IMG_20170916_122039.jpg" alt="Alt text"></p>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>烹饪</tag>
      </tags>
  </entry>
  <entry>
    <title>大盘鸡</title>
    <url>/2017/09/30/%E5%A4%A7%E7%9B%98%E9%B8%A1/</url>
    <content><![CDATA[<p>炎炎夏日，来个大盘鸡一定不错（滑稽.jpg）</p>
<span id="more"></span>

<h4 id="Step-1："><a href="#Step-1：" class="headerlink" title="Step 1："></a>Step 1：</h4><p>配料：三黄鸡、土豆、青椒、豆瓣酱、葱、干辣椒、八角、姜、豆瓣酱、腌制酱辣椒（老妈做的）、啤酒、油、盐、生抽</p>
<p><img src="./IMG_20170902_101320.jpg" alt="Alt text"></p>
<p><img src="./IMG_20170902_101336.jpg" alt="Alt text"></p>
<h4 id="Step-2："><a href="#Step-2：" class="headerlink" title="Step 2："></a>Step 2：</h4><p>青椒切条，土豆去皮切成小块，姜、葱切碎，八角洗净，干辣椒洗净掰成小段。</p>
<p><img src="./IMG_20170902_101324.jpg" alt="Alt text"></p>
<p><img src="./IMG_20170902_101329.jpg" alt="Alt text"></p>
<p><img src="./IMG_20170902_101332.jpg" alt="Alt text"></p>
<h4 id="Step-3："><a href="#Step-3：" class="headerlink" title="Step 3："></a>Step 3：</h4><p>热油，加入三黄鸡、姜末、葱末、干辣椒、豆瓣酱、生抽，小炒片刻即可（熟的三黄鸡现炒真是败笔）；加入土豆翻炒至土豆5层熟；加入青椒、 酱辣椒翻炒片刻；加入半杯 500 ml 的啤酒；收干水分，起锅。</p>
<p><img src="./IMG_20170902_102057.jpg" alt="Alt text"></p>
<p><img src="./IMG_20170902_102332.jpg" alt="Alt text"></p>
<p><img src="./IMG_20170902_102856.jpg" alt="Alt text"></p>
<p><img src="./IMG_20170902_103252.jpg" alt="Alt text"></p>
<p><img src="./IMG_20170902_104316.jpg" alt="Alt text"></p>
<h4 id="感言："><a href="#感言：" class="headerlink" title="感言："></a>感言：</h4><p>楼主应该使用生鸡的，用熟鸡一下就炒烂了，而且应该先把土豆炒好起锅，下次一定改进 ~ _ ~</p>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>烹饪</tag>
      </tags>
  </entry>
  <entry>
    <title>新电脑 安装 node.js hexo</title>
    <url>/2024/06/16/%E6%96%B0%E7%94%B5%E8%84%91%20%E5%AE%89%E8%A3%85%20node.js%20hexo/</url>
    <content><![CDATA[<p>换了台新电脑，发现博客无法打包，需要安装 node.js 再安装 hexo。 </p>
<span id="more"></span>

<h4 id="安装-node-js"><a href="#安装-node-js" class="headerlink" title="安装 node.js"></a>安装 node.js</h4><p>去这里 <a href="https://nodejs.cn/download/">https://nodejs.cn/download/</a> 下载 win 版，再安装</p>
<h4 id="配置-npm"><a href="#配置-npm" class="headerlink" title="配置 npm"></a>配置 npm</h4><p>配置npm的全局安装路径
npm config set prefix “D:\nodejs\node_global”</p>
<p>设置npm的缓存路径
npm config set cache “E:\nodejs\node_cache”</p>
<p>配置环境变量
<img src="./1718545534787.png" alt="Alt text"></p>
<p><img src="./1718545855799.png" alt="Alt text"></p>
<p>设置npm使用的软件仓库地址
npm config set registry <a href="http://registry.npm.taobao.org/">http://registry.npm.taobao.org</a></p>
<p>安装 cnpm
npm install -g cnpm </p>
<p><img src="./1718546351156.png" alt="Alt text"></p>
<h4 id="安装-hexo"><a href="#安装-hexo" class="headerlink" title="安装 hexo"></a>安装 hexo</h4><p>cnpm install -g hexo-cli</p>
<p><img src="./1718546499145.png" alt="Alt text"></p>
<h4 id="测试-hexo"><a href="#测试-hexo" class="headerlink" title="测试 hexo"></a>测试 hexo</h4><p>进入我之前写 hexo 博客的路径</p>
<p>hexo clean
hexo g
hexo s -p 5000</p>
<p>搞定</p>
<p><img src="./1718546598003.png" alt="Alt text"></p>
]]></content>
      <categories>
        <category>npm</category>
      </categories>
      <tags>
        <tag>其他</tag>
      </tags>
  </entry>
  <entry>
    <title>本地启动多个 zookeeper server</title>
    <url>/2020/02/12/%E6%9C%AC%E5%9C%B0%E5%90%AF%E5%8A%A8%E5%A4%9A%E4%B8%AA%20zookeeper%20server/</url>
    <content><![CDATA[<p>在学习 reconfig 命令时，需要启动多个 zookeeper，但是会出现 8080 端口被占用的报错 org.apache.zookeeper.server.admin.AdminServer$AdminServerException: Problem starting AdminServer on address 0.0.0.0, port 8080 and command URL /commands，记录一下怎么解决的吧</p>
<span id="more"></span>

<p>我这里直接 copy 了 zoo.cfg、zkEnv.cmd、zkServer.cmd 重命名了，并改了一些文件指向、zookeeper server 端口等，如果想要 目录结构更清晰，或者不做这么麻烦的操作的话，可以把 zookeeper 复制几份出来。</p>
<p><img src="./1581498637902.png" alt="Alt text"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">admin.serverPort&#x3D;8081</span><br></pre></td></tr></table></figure>

<p>zookeeper server 启动时，会使用默认的8080端口启动 jetty ，如果想要启动多个 zookeeper server 服务，只需 更换 serverPort 的配置就行了。</p>
<p>参考资料:
<a href="https://www.jianshu.com/p/181a69836fe9">Zookeeper 3.5启动时 8080端口被占用</a></p>
]]></content>
      <categories>
        <category>zookeeper</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>本地配置多个github账号，如何使用指定账号提交</title>
    <url>/2018/01/04/%E6%9C%AC%E5%9C%B0%E9%85%8D%E7%BD%AE%E5%A4%9A%E4%B8%AAgithub%E8%B4%A6%E5%8F%B7%EF%BC%8C%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E6%8C%87%E5%AE%9A%E8%B4%A6%E5%8F%B7%E6%8F%90%E4%BA%A4/</url>
    <content><![CDATA[<p>楼主的博客和楼主常用的github账号不同，当楼主需要提交文章时，所以楼主提交不同的东西经常要用不同的github账号。记得楼主以前写过一篇多github hexo提交的问题，那篇文章的markdown版已经被手残的楼主删除T.T，这里也当成是补充篇。</p>
<span id="more"></span>

<h4 id="Step-1：配置-ssh-key"><a href="#Step-1：配置-ssh-key" class="headerlink" title="Step 1：配置 ssh key"></a>Step 1：配置 ssh key</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-keygen -C <span class="string">&quot;your github email&quot;</span> -t rsa</span><br></pre></td></tr></table></figure>
<p>选择生成 ssh key 文件的位置，楼主使用默认位置 C:\Users\hasee.ssh\id_rsa</p>
<p><img src="./1515081245373.png" alt="Alt text"></p>
<p>打开 C:\Users\hasee.ssh\id_rsa 拷贝里面的内容，把它放到github账号的ssh key里面去</p>
<p><img src="./1515081303235.png" alt="Alt text"></p>
<h4 id="Step-2：配置-ssh-config"><a href="#Step-2：配置-ssh-config" class="headerlink" title="Step 2：配置 ssh config"></a>Step 2：配置 ssh config</h4><p>打开 C:\Users\hasee.ssh\config 文件，配置好两个账号，比如楼主的是这么配置的</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Host knightdevelop</span><br><span class="line">    Hostname github.com</span><br><span class="line">    User git </span><br><span class="line">    IdentityFile ~/.ssh/kd_rsa</span><br><span class="line"></span><br><span class="line">Host knight-jnxu</span><br><span class="line">    Hostname github.com</span><br><span class="line">    User git </span><br><span class="line">    IdentityFile ~/.ssh/id_rsa</span><br></pre></td></tr></table></figure>

<p><img src="./1515081326147.png" alt="Alt text"></p>
<h4 id="Step-3：remote-repository"><a href="#Step-3：remote-repository" class="headerlink" title="Step 3：remote repository"></a>Step 3：remote repository</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure>

<p>git url 的获取</p>
<p><img src="./1515081366509.png" alt="Alt text"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git remote add demos git@github.com:<span class="string">&quot;one of your ssh config host&quot;</span>/xxx.git</span><br></pre></td></tr></table></figure>

<p><strong>注意：</strong>把 <a href="mailto:&#x67;&#x69;&#x74;&#64;&#x67;&#105;&#x74;&#x68;&#117;&#98;&#x2e;&#x63;&#x6f;&#109;">&#x67;&#x69;&#x74;&#64;&#x67;&#105;&#x74;&#x68;&#117;&#98;&#x2e;&#x63;&#x6f;&#109;</a>: 后面那串东西替换成你在 ssh config 里面的 Host，区分大小写</p>
<p><img src="./1515081415724.png" alt="Alt text"></p>
<h4 id="Step-4：常规的提交操作"><a href="#Step-4：常规的提交操作" class="headerlink" title="Step 4：常规的提交操作"></a>Step 4：常规的提交操作</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git add <span class="string">&quot;folder or file, split by space&quot;</span></span><br><span class="line">git commit -m <span class="string">&quot;your commit message&quot;</span></span><br><span class="line">git branch <span class="string">&quot;your branch&quot;</span></span><br><span class="line">git checkout <span class="string">&quot;your branch&quot;</span></span><br><span class="line">git push --set-upstream <span class="string">&quot;your repository&quot;</span> <span class="string">&quot;your branch&quot;</span></span><br></pre></td></tr></table></figure>

<p><img src="./1515081462725.png" alt="Alt text"></p>
<p><img src="./1515081474413.png" alt="Alt text"></p>
<p><img src="./1515081483356.png" alt="Alt text"></p>
<p><img src="./1515081492461.png" alt="Alt text"></p>
<p><img src="./1515081506785.png" alt="Alt text"></p>
<p>让楼主比较奇怪的一点是，新分支第一次提交，需要使用 <strong>git push –set-upstream “your repository” “your branch”</strong> ，之后的提交只需要使用 <strong>git push</strong> 就行了，下次要试试配置 push.default 一探究竟，今天先睡。</p>
]]></content>
      <categories>
        <category>开发</category>
      </categories>
      <tags>
        <tag>github</tag>
      </tags>
  </entry>
  <entry>
    <title>本地有多个github账号如何使用hexo部署到特定账号</title>
    <url>/2017/04/03/%E6%9C%AC%E5%9C%B0%E6%9C%89%E5%A4%9A%E4%B8%AAgithub%E8%B4%A6%E5%8F%B7%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8hexo%E9%83%A8%E7%BD%B2%E5%88%B0%E7%89%B9%E5%AE%9A%E8%B4%A6%E5%8F%B7/</url>
    <content><![CDATA[<h4 id="step-1："><a href="#step-1：" class="headerlink" title="step 1："></a>step 1：</h4><p>往这个github账号上添加本地的ssh
方法如下：</p>
<ul>
<li>ssh-keygen -t rsa -C “your github email”</li>
<li>kd_rsa
为这个key命名，注意不要与本地已有的key重名，楼主在这里使用的kd_rsa这个名字<span id="more"></span></li>
<li>clip &lt; ~/.ssh/yourPubFileName.pub
<img src="./1491124485344.png" alt="Alt text">
这样可以把yourPubFileName.pub里面的内容拷贝出来</li>
<li>github -&gt; settings -&gt; ssh and gpg keys -&gt; new ssh key -&gt; input your title -&gt; paste your ssh -&gt; add ssh key
<img src="./1491124666710.png" alt="Alt text">
<img src="./1491124803350.png" alt="Alt text">
多个账号就重复这一步骤<h4 id="step-2："><a href="#step-2：" class="headerlink" title="step 2："></a>step 2：</h4></li>
<li>touch config
在~/.ssh路径下生成config文件
<img src="./1491125010529.png" alt="Alt text"></li>
<li>编辑config<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Host name1</span><br><span class="line">    Hostname github.com</span><br><span class="line">    User git </span><br><span class="line">    IdentityFile ~/.ssh/yourKey1</span><br><span class="line"></span><br><span class="line">Host name2</span><br><span class="line">    Hostname github.com</span><br><span class="line">    User git </span><br><span class="line">    IdentityFile ~/.ssh/yourKey2</span><br></pre></td></tr></table></figure>
楼主的config文件如下：
<img src="./1491125314906.png" alt="Alt text"><h4 id="step-3："><a href="#step-3：" class="headerlink" title="step 3："></a>step 3：</h4></li>
<li>配置hexo
repo: name1:name1/yourRepository
<img src="./1491125404068.png" alt="Alt text"></li>
</ul>
]]></content>
      <categories>
        <category>开发</category>
      </categories>
      <tags>
        <tag>其他</tag>
        <tag>github</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>水煮牛肉</title>
    <url>/2017/04/03/%E6%B0%B4%E7%85%AE%E7%89%9B%E8%82%89/</url>
    <content><![CDATA[<p>最近，楼主尝试了一道新菜，没错，就是水煮牛肉，特此记录。</p>
<h4 id="Step-1："><a href="#Step-1：" class="headerlink" title="Step 1："></a>Step 1：</h4><p>准备 牛肉、碱、耗油、生抽、一个鸡蛋、生粉、金针菇、蒜、姜、老抽、花椒、豆瓣酱、火锅底料、料酒、鸡精、胡椒粉</p>
<span id="more"></span>
<h4 id="Step-2："><a href="#Step-2：" class="headerlink" title="Step 2："></a>Step 2：</h4><p>牛肉按纹理切好，加入水和少量的碱腌制30分钟左右；姜、蒜切泥；金针菇洗净用水煮一会，煮个7、8分熟就好；取少量生粉加水搅拌做成“水生粉”
<img src="./1491184986189.png" alt="Alt text">
<img src="./1491185009594.png" alt="Alt text">
<img src="./1491185041149.png" alt="Alt text"></p>
<h4 id="Step-3："><a href="#Step-3：" class="headerlink" title="Step 3："></a>Step 3：</h4><p>牛肉用碱水腌好后，放入少量耗油、适量生抽，打入一个蛋清，适量生粉，均匀搅拌后腌制5分钟
<img src="./1491185090371.png" alt="Alt text"></p>
<h4 id="Step-4："><a href="#Step-4：" class="headerlink" title="Step 4："></a>Step 4：</h4><p>热油，加入姜蒜泥、花椒、少量豆瓣酱炒香，放入腌制好的牛肉，加入老抽、料酒翻炒一会，倒入一碗水，加入火锅底料、水生粉，并均匀搅拌至牛肉7、8分熟，放入金针菇、胡椒粉，搅拌着煮熟，乘起，加入少量热油
<img src="./1491185661302.png" alt="Alt text">
<img src="./1491185626792.png" alt="Alt text">
<img src="./1491185643430.png" alt="Alt text">
这样，楼主的水煮牛肉就做好了
<img src="./1491185702277.png" alt="Alt text">
各位也可以按照自己的口味加入别的作料，或者替换一些食材
话说楼主这老抽加的有点多，逃~</p>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>烹饪</tag>
      </tags>
  </entry>
  <entry>
    <title>浅谈 jsoup</title>
    <url>/2017/07/29/%E6%B5%85%E8%B0%88%20jsoup/</url>
    <content><![CDATA[<p>最近遇到一个需要，是要提取 speedo 商品的商品描述，无奈这个字段是一段 html 的 string，咨询架构师之后，决定使用 jsoup 做 html 内容提取，特此记录。<span id="more"></span></p>
<h4 id="Step-1："><a href="#Step-1：" class="headerlink" title="Step 1："></a>Step 1：</h4><p>maven 导入 jsoup</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">version.jsoup</span>&gt;</span>1.7.3<span class="tag">&lt;/<span class="name">version.jsoup</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.jsoup<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jsoup<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;version.jsoup&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="Step-2："><a href="#Step-2：" class="headerlink" title="Step 2："></a>Step 2：</h4><p>使用 select 取值</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getInnerHtmlValueByClassNameAngTagName</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">    String fileStr = readFileJava8(<span class="string">&quot;D:/htmlContent.txt&quot;</span>);</span><br><span class="line">    Document document = Jsoup.parse(fileStr, <span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">    <span class="comment">// 获取 父节点class值为 description-text 的 h2 元素</span></span><br><span class="line">    Elements elements = document.select(<span class="string">&quot;.description-text h2&quot;</span>);</span><br><span class="line">    logger.info(elements.text());</span><br><span class="line"></span><br><span class="line">    elements = document.select(<span class="string">&quot;.text-a p&quot;</span>);</span><br><span class="line">    logger.info(elements.text());</span><br><span class="line"></span><br><span class="line">    elements = document.select(<span class="string">&quot;.text-a span&quot;</span>);</span><br><span class="line">    logger.info(elements.text());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>jsoup 详解请移步 <a href="http://www.open-open.com/jsoup/parsing-a-document.htm">http://www.open-open.com/jsoup/parsing-a-document.htm</a></p>
<p>project github url ： <a href="https://github.com/Knight-JNXU/OpenSourcePackage/tree/OpenSourcePackageUsage">https://github.com/Knight-JNXU/OpenSourcePackage/tree/OpenSourcePackageUsage</a></p>
]]></content>
      <categories>
        <category>开发</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>jsoup</tag>
      </tags>
  </entry>
  <entry>
    <title>浅谈junit（单元测试）</title>
    <url>/2017/04/10/%E6%B5%85%E8%B0%88junit%EF%BC%88%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95%EF%BC%89/</url>
    <content><![CDATA[<p>单元测试是被广大猿类使用的测试包，当你在跟团队做 java 开发时，往往面临三种选择：</p>
<ul>
<li>把整个 project 运行一下测试自己写的功能，可能会出现 project 启动慢，或者别人的代码有坑，导致 project 无法正常 run 的情况</li>
<li>使用 junit ，可以帮你节省大量的时间，首先，运行 junit 不需要运行整个 project 节省时间，其次，junit 可以只测试某段代码，或者某几段代码的功能，因此可以减少其他代码的影响</li>
<li>不测试就提交，呵呵…<span id="more"></span>
<h5 id="（1）-Test"><a href="#（1）-Test" class="headerlink" title="（1）@Test"></a>（1）@Test</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Test</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testMethod0</span><span class="params">()</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;test method 0&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>用@Test修饰用于单元测试的方法。</p>
</blockquote>
<h5 id="（2）-Before"><a href="#（2）-Before" class="headerlink" title="（2）@Before"></a>（2）@Before</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Before</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">beforeMethod0</span><span class="params">()</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;before method 0&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>被@Before修饰的方法会在@Test修饰的方法之前被执行；多个@Before修饰方法的执行顺序和书写顺序没有关系。</p>
</blockquote>
<h5 id="（3）-After"><a href="#（3）-After" class="headerlink" title="（3）@After"></a>（3）@After</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">After</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterMethod</span><span class="params">()</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;after method&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>被@After修饰的方法会在@Test修饰的方法之后执行；多个@After的执行顺序和书写顺序无关。</p>
</blockquote>
</li>
</ul>
<p><strong>注意：</strong>
当有多个@Before和多个@After修饰方法时
 @Before修饰方法的执行顺序是名称的倒序
 @After修饰方法的执行顺序是名称的顺序</p>
<h5 id="（4）-Ignore"><a href="#（4）-Ignore" class="headerlink" title="（4）@Ignore"></a>（4）@Ignore</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Ignore</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testMethod1</span><span class="params">()</span></span>&#123;</span><br><span class="line">   System.out.println(<span class="string">&quot;test method 1&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>被@Ignore修饰的@Test方法不会在单元测试中被执行；@Ignore注解对@Before和@After修饰的方法不产作用。</p>
</blockquote>
<h5 id="（5）-BeforeClass"><a href="#（5）-BeforeClass" class="headerlink" title="（5）@BeforeClass"></a>（5）@BeforeClass</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@BeforeClass</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">beforeClass</span><span class="params">()</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;before class&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>被@BeforeClass修饰的方法会在junit的测试类实例化之前执行，所以必须保证@BeforeClass此之前就已经被编译，通常用的方法就是加static，如果@Test所修饰的method不是static的话。</p>
</blockquote>
<h5 id="（6）-AfterClass"><a href="#（6）-AfterClass" class="headerlink" title="（6）@AfterClass"></a>（6）@AfterClass</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@AfterClass</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterClass</span><span class="params">()</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;after class&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>被@AfterClass修饰的方法会在junit的测试类</p>
</blockquote>
<h5 id="（7）-Parameters-amp-Parameter"><a href="#（7）-Parameters-amp-Parameter" class="headerlink" title="（7）@Parameters &amp; @Parameter"></a>（7）@Parameters &amp; @Parameter</h5><p>指定一些测试方法的参数</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DataOpration</span></span>&#123;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> par1, <span class="keyword">int</span> par2)</span></span>&#123;</span><br><span class="line">		<span class="keyword">return</span> (par1+par2);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@RunWith(Parameterized.class)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ParametersDemo</span> </span>&#123;</span><br><span class="line">	</span><br><span class="line">	<span class="meta">@Parameters(name = &quot;&#123;index&#125;:add(&#123;0&#125;, &#123;1&#125;)=&#123;2&#125;&quot;)</span></span><br><span class="line">	<span class="comment">//这里使用 Collection 和 Iterable 都行</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> Collection&lt;Object[]&gt; data()&#123;</span><br><span class="line"><span class="comment">//		public static Iterable&lt;Object[]&gt; data()&#123;</span></span><br><span class="line">		<span class="keyword">return</span> Arrays.asList(<span class="keyword">new</span> Object[][]&#123;</span><br><span class="line">			&#123;<span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>&#125;, &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;, &#123;<span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>&#125;</span><br><span class="line">		&#125;);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="meta">@Parameter(0)</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">int</span> par1;</span><br><span class="line">	<span class="meta">@Parameter(1)</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">int</span> par2;</span><br><span class="line">	<span class="meta">@Parameter(2)</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">int</span> sum;</span><br><span class="line">	</span><br><span class="line">	<span class="meta">@Test</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>&#123;</span><br><span class="line">		assertEquals(sum, DataOpration.add(par1, par2));</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="（8）exception"><a href="#（8）exception" class="headerlink" title="（8）exception"></a>（8）exception</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test(expected = NullPointerException.class)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testExceptionMessage0</span><span class="params">()</span></span>&#123;</span><br><span class="line">        String str = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">if</span>(str.equals(<span class="string">&quot;&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testExceptionMessage1</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        String str = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">if</span>(str.equals(<span class="string">&quot;&quot;</span>));</span><br><span class="line">        fail(<span class="string">&quot;Expected an NullPointerException to be thrown&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">catch</span> (NullPointerException anNullPointerException)&#123;</span><br><span class="line">        System.out.println(anNullPointerException.getMessage());</span><br><span class="line">        Assert.assertThat(anNullPointerException.getMessage(), is(nullValue()));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testExceptionMessage2</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">new</span> ArrayList&lt;Object&gt;().get(<span class="number">0</span>);</span><br><span class="line">        fail(<span class="string">&quot;Expected an IndexOutOfBoundsException to be thrown&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IndexOutOfBoundsException anIndexOutOfBoundsException) &#123;</span><br><span class="line">        System.out.println(anIndexOutOfBoundsException.getMessage());</span><br><span class="line">        Assert.assertThat(anIndexOutOfBoundsException.getMessage(), is(<span class="string">&quot;Index: 0, Size: 0&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Rule</span></span><br><span class="line"><span class="keyword">public</span> ExpectedException shouldThrown = ExpectedException.none();</span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testExceptionMessage3</span><span class="params">()</span> <span class="keyword">throws</span> NullPointerException</span>&#123;</span><br><span class="line">    String str = <span class="keyword">null</span>;</span><br><span class="line">    shouldThrown.expect(NullPointerException.class);</span><br><span class="line">    shouldThrown.expectMessage(<span class="keyword">new</span> IsNull&lt;String&gt;());</span><br><span class="line">    <span class="keyword">if</span>(str.equals(<span class="string">&quot;&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testExceptionMessage4</span><span class="params">()</span> <span class="keyword">throws</span> IndexOutOfBoundsException</span>&#123;</span><br><span class="line">    shouldThrown.expect(IndexOutOfBoundsException.class);</span><br><span class="line">    shouldThrown.expectMessage(<span class="string">&quot;Index: 0, Size: 0&quot;</span>);</span><br><span class="line">    <span class="keyword">new</span> ArrayList&lt;Object&gt;().get(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>使用junit测试抛出异常的方法有三种：
1、@Test(expected = XXXException.class)
2、Assert.assertThat(XXXException.getMessage(), expected value)); 
3、@Rule ExpectedException expect expectMessage
注意：null这样的值要特殊处理（可见上述代码）</p>
</blockquote>
<h5 id="（9）Assert"><a href="#（9）Assert" class="headerlink" title="（9）Assert"></a>（9）Assert</h5><p>断言，像 assertEquals、assertFalse、assertNotSame、assertNull、assertThat 等，具体用法见下</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 比较两个数组是否相等</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">arrayEqualsTest</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> array1[] = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> array2[] = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;;</span><br><span class="line">    Assert.assertArrayEquals(<span class="string">&quot;should be equal&quot;</span>, array1, array2);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 把两个 new StringBuffer(&quot;222&quot;) 做个比较，方便下面的<span class="doctag">@Test</span>结果预测</span></span><br><span class="line"><span class="comment"> * 注：equals方法在没有重写的情况下比较的是两个object的物理地址</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">compareTwoStringBuffer</span><span class="params">()</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="keyword">new</span> StringBuffer(<span class="string">&quot;222&quot;</span>).equals(<span class="keyword">new</span> StringBuffer(<span class="string">&quot;222&quot;</span>)));</span><br><span class="line">    System.out.println((<span class="keyword">new</span> StringBuffer(<span class="string">&quot;222&quot;</span>)) == (<span class="keyword">new</span> StringBuffer(<span class="string">&quot;222&quot;</span>)));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 判断两个object是否相等</span></span><br><span class="line"><span class="comment"> * 比较物理地址</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">assertEquallsTest</span><span class="params">()</span></span>&#123;</span><br><span class="line">    Assert.assertEquals(<span class="string">&quot;should be equal&quot;</span>, <span class="keyword">new</span> StringBuffer(<span class="string">&quot;222&quot;</span>), <span class="keyword">new</span> StringBuffer(<span class="string">&quot;222&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 判断两个object是否不相等</span></span><br><span class="line"><span class="comment"> * 比较物理地址</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">assertNotEquallsTest</span><span class="params">()</span></span>&#123;</span><br><span class="line">    Assert.assertNotEquals(<span class="string">&quot;should be not equal&quot;</span>, <span class="keyword">new</span> StringBuffer(<span class="string">&quot;222&quot;</span>), <span class="keyword">new</span> StringBuffer(<span class="string">&quot;222&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 预期值为false</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">assertFalseTest</span><span class="params">()</span></span>&#123;</span><br><span class="line">    Assert.assertFalse(<span class="string">&quot;should be false&quot;</span>, (<span class="keyword">new</span> StringBuffer(<span class="string">&quot;222&quot;</span>)).equals(<span class="keyword">new</span> StringBuffer(<span class="string">&quot;222&quot;</span>)));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 预期值为true</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">assertTrueTest</span><span class="params">()</span></span>&#123;</span><br><span class="line">    assertTrue(<span class="string">&quot;should be true&quot;</span>, <span class="keyword">new</span> StringBuffer(<span class="string">&quot;222&quot;</span>).equals(<span class="keyword">new</span> StringBuffer(<span class="string">&quot;222&quot;</span>)));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 是否不相等</span></span><br><span class="line"><span class="comment"> * 比较物理地址</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">assesrtNotSameTest</span><span class="params">()</span></span>&#123;</span><br><span class="line">    Assert.assertNotSame(<span class="string">&quot;should be not same&quot;</span>, <span class="keyword">new</span> StringBuffer(<span class="string">&quot;222&quot;</span>), <span class="keyword">new</span> StringBuffer(<span class="string">&quot;222&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 是否为null的判断</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">assertNullTest</span><span class="params">()</span></span>&#123;</span><br><span class="line">    Assert.assertNull(<span class="string">&quot;should be null&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 是否相等</span></span><br><span class="line"><span class="comment"> * 比较物理地址</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">assertSameTest</span><span class="params">()</span></span>&#123;</span><br><span class="line">    Integer integer = <span class="keyword">new</span> Integer(<span class="string">&quot;35&quot;</span>);</span><br><span class="line">    Assert.assertSame(<span class="string">&quot;should be same&quot;</span>, integer, <span class="number">35</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * both .and 是连接符</span></span><br><span class="line"><span class="comment"> * containsString 包含某个 String</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">bothAndContainsStringTest</span><span class="params">()</span></span>&#123;</span><br><span class="line">    Assert.assertThat(<span class="string">&quot;baby&quot;</span>,</span><br><span class="line">            both(containsString(<span class="string">&quot;ab&quot;</span>)).and(containsString(<span class="string">&quot;by&quot;</span>)));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * hasItems 是否包含某个item</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">hasItemsTest</span><span class="params">()</span></span>&#123;</span><br><span class="line">    Assert.assertThat(Arrays.asList(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>), hasItems(<span class="number">1</span>, <span class="number">2</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * everyItem 是不是每个item都满足XXX</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">everyItemTest</span><span class="params">()</span></span>&#123;</span><br><span class="line">    Assert.assertThat(Arrays.asList(<span class="keyword">new</span> String[]&#123;<span class="string">&quot;ab&quot;</span>, <span class="string">&quot;bc&quot;</span>, <span class="string">&quot;abc&quot;</span>&#125;),</span><br><span class="line">            everyItem(containsString(<span class="string">&quot;b&quot;</span>)));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">hamcrestCoreMatchersTest</span><span class="params">()</span></span>&#123;</span><br><span class="line">    Assert.assertThat(<span class="string">&quot;nice&quot;</span>, allOf(equalTo(<span class="string">&quot;nice&quot;</span>), startsWith(<span class="string">&quot;n&quot;</span>)));</span><br><span class="line">    assertThat(<span class="string">&quot;good&quot;</span>, not(allOf(equalTo(<span class="string">&quot;bad&quot;</span>), equalTo(<span class="string">&quot;good&quot;</span>))));</span><br><span class="line">    assertThat(<span class="string">&quot;good&quot;</span>, anyOf(equalTo(<span class="string">&quot;bad&quot;</span>), equalTo(<span class="string">&quot;good&quot;</span>)));</span><br><span class="line">    assertThat(<span class="number">7</span>, not(CombinableMatcher.&lt;Integer&gt; either(equalTo(<span class="number">3</span>)).or(equalTo(<span class="number">4</span>))));</span><br><span class="line">    assertThat(<span class="keyword">new</span> Object(), not(sameInstance(<span class="keyword">new</span> Object())));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="（10）spring-amp-junit"><a href="#（10）spring-amp-junit" class="headerlink" title="（10）spring &amp; junit"></a>（10）spring &amp; junit</h5><p>spring和junit的结合</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RunWith(SpringJUnit4ClassRunner.class)</span></span><br><span class="line"><span class="meta">@ContextConfiguration(&quot;classpath:spring-junit-conf.xml&quot;)</span></span><br><span class="line"><span class="meta">@Rollback(true)</span></span><br><span class="line"><span class="comment">//@TransactionConfiguration(transactionManager = &quot;transactionManager&quot;, defaultRollback = true) </span></span><br><span class="line"><span class="comment">//注意在新的spring版本中，@TransactionConfiguration注解被@Commit和@Rollback取代了，详情见官方文档</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringJunit0</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> SpringService springService;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSpringServiceImplinsertStudent</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            springService.insertStudent(<span class="keyword">new</span> StudentModel());</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>maven dependency</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">version</span>&gt;</span>3.2.17.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- 使用@Autowired标签需要 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">version</span>&gt;</span>3.2.17.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- 使用@Transactional标签需要 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-hibernate3<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.8<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">version</span>&gt;</span>3.2.17.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>project url：<a href="https://github.com/Knight-JNXU/JavaFundation/tree/JunitStudy">https://github.com/Knight-JNXU/JavaFundation/tree/JunitStudy</a></p>
]]></content>
      <categories>
        <category>开发</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>junit</tag>
      </tags>
  </entry>
  <entry>
    <title>神舟Z7-KP7S1 deepin 安装黑屏</title>
    <url>/2018/07/14/%E7%A5%9E%E8%88%9FZ7-KP7S1%20deepin%20%E5%AE%89%E8%A3%85%E9%BB%91%E5%B1%8F/</url>
    <content><![CDATA[<p>由于楼主萌生的装X心态，居然有一种装 windows+linux 双系统的强烈欲望，linux 选用的 deepin-15.6-amd64。linux 生态不好使真的，尤其是 deepin 这种主要是国内受众的 linux 系统，免不了一顿折腾T T。特此记录，引以为鉴。</p>
<span id="more"></span>

<h3 id="前奏"><a href="#前奏" class="headerlink" title="前奏"></a>前奏</h3><p>deepin下载：<a href="https://www.deepin.org/download/">https://www.deepin.org/download/</a> （解压出来有 deepin 的u盘启动工具 deepin-boot-maker，也可以另外下载 deepin-boot-maker）</p>
<p>deepin-boot-maker下载：<a href="https://www.deepin.org/original/deepin-boot-maker/">https://www.deepin.org/original/deepin-boot-maker/</a></p>
<p>直接使用 deepin-boot-maker.exe + deepin-15.6-amd64.iso + u盘制作u盘启动工具就好。</p>
<h3 id="deepin系统安装"><a href="#deepin系统安装" class="headerlink" title="deepin系统安装"></a>deepin系统安装</h3><p>神船是电脑开机时按 F2 进入 bios</p>
<p>boot 第一项选择 u盘启动的名称</p>
<p>exit &amp; save</p>
<p>install deepin</p>
<p><strong>此时deepin logo加载完毕之后陷入黑屏</strong></p>
<h3 id="解决黑屏问题"><a href="#解决黑屏问题" class="headerlink" title="解决黑屏问题"></a>解决黑屏问题</h3><blockquote>
<p>原因：神舟Z7-KP7S1有双显卡（集显+独显），deepin（貌似ubuntu也是）对双显卡支持很差</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">进入 bios</span><br><span class="line">advanced</span><br><span class="line">advanced chipset control</span><br><span class="line">MSHybrid or Discrete Switch 选用 discrete</span><br><span class="line">exit &amp; save</span><br><span class="line">install deepin</span><br></pre></td></tr></table></figure>

<p><strong>注：</strong>MSHybrid or Discrete Switch 选用 discrete是在bios中禁用掉集显（此时耗电会增加），只启动独立显卡，这样就等于把电脑变成了单显卡的。</p>
<p><img src="./1531532754859.png" alt="Alt text"></p>
<p><img src="./1531532796842.png" alt="Alt text"></p>
<p><img src="./1531532776457.png" alt="Alt text"></p>
<p>参考资料：</p>
<p><a href="https://blog.csdn.net/qq_39105012/article/details/80427792">https://blog.csdn.net/qq_39105012/article/details/80427792</a></p>
<p><a href="https://bbs.deepin.org/forum.php?mod=viewthread&amp;tid=40469&amp;extra=">https://bbs.deepin.org/forum.php?mod=viewthread&amp;tid=40469&amp;extra=</a></p>
]]></content>
      <categories>
        <category>系统</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>致准备进入IT行业学弟学妹们的一封信</title>
    <url>/2017/07/07/%E8%87%B4%E5%87%86%E5%A4%87%E8%BF%9B%E5%85%A5IT%E8%A1%8C%E4%B8%9A%E5%AD%A6%E5%BC%9F%E5%AD%A6%E5%A6%B9%E4%BB%AC%E7%9A%84%E4%B8%80%E5%B0%81%E4%BF%A1/</url>
    <content><![CDATA[<p>又是一年报考季，相信其中对IT行业充满兴趣的童鞋大有人在，作为一个在IT项目打杂半年、在IT公司打杂1年的学长，在此分享对IT行业以及如何进入IT行业的一些粗浅的看法和建议。</p>
<span id="more"></span>

<p>随着互联时代的到来，传统行业在见识了互联网带来巨大市场和利率后，开始往互联网化转型，比如传统的商店到淘宝、天猫等电商，传统的街机到联机网游，传统书本到电子书等。</p>
<p>so<del>咋们还是单刀直入吧(→_→)，随着互联网化程度的提高，对IT人员的需求量也在扩大之中，依楼主之见，在不发生战争的情况下，未来1</del>2年内，市场对IT人员的需求都是供&lt;求的情况(如有不实，纯属意外 手动微笑)。</p>
<p><img src="./1499351415407.png" alt="Alt text"></p>
<p>那么如何进入IT行业呢？关于bs（browser server）楼主总结了一下：IT行业的职能包括 业务、前端、后端、测试、运维。</p>
<ul>
<li><p>业务一般是指业务人员，但是也有例外，比如楼主现在所属的公司的业务是产品经理和运维，所以楼主总结了一下 业务就是根据市场需求对开发人员（包括前端、后端、运维）制定成果物的人。</p>
</li>
<li><p>前端是互联网产品外观的实现者，不同的公司会有不同的要求，比如楼主现在的公司对前端的要求低一点，只要会切图、用HTML画页面，会css样式，会一点JS就行(这TM算啥前端，明明就是个UI，不失礼貌的微笑)，</p>
</li>
</ul>
<p><img src="./1499351515594.png" alt="Alt text"></p>
<ul>
<li><p>但是楼主的上家公司对前端的要求就更高了，他们不仅需要用HTML绘制页面，会css样式，还需要写js脚本，需要向服务器请求数据、处理数据，不过倒是不用切图。上面说的是前端在bs类公司的职能，在cs类公司，比如QQ，前端需要使用Qt（一种能够编写出精美界面，类似c++的编程语言）；如果在游戏公司，前端就是建模师，游戏公司应该会有专门的UI，负责各类原画的绘制。</p>
</li>
<li><p>后端是后台代码逻辑的编写者，比较直观的说法就是看不见摸不着的那种逻辑处理就是后端写的，比如登录，校验用户名、密码是否正确，就是后端写的，后端是需要跟前端和数据库或者服务器交互的，所以技术的复杂度会相对高一些，需要对前端、数据库有所了解。</p>
</li>
<li><p>测试工作主要是负责检测开发成果物是否能按照既定逻辑运行，如果有问题要向开发说明什么情景下会有问题，要求对业务有比较全面的了解。</p>
</li>
<li><p>运维的主要工作是把开发写的功能放到服务器(可以理解为一台特殊的电脑)上，并保证功能不会因为开发问题之外的原因而不能正常运作。</p>
</li>
</ul>
<p>在bs中的上手复杂度大概是这样的：测试&lt;业务&lt;前端&lt;运维&lt;后端（前端和运维可根据公司要求互换）。</p>
<p>那么我们该怎么进入IT行业呢，楼主认为，最好选择有数据结构、算法、操作系统、计算机网络、数据库这几门课程的专业比较好（根据楼主的观察 计信学院 注意不是软件学院，下面设立的几个专业都是有这些基础课程的），如果想做游戏，可以学有图形学课程、c++、unity等课程的专业，如果是想做web开发，可以学习有HTML、css、JavaScript、Java、JSP等课程的专业。数据结构、算法、操作系统、计算机网络、数据库 这几门课程有助于一个IT开发人员的进阶，所以个人觉得比较重要，在上课过程中需要认真学，虽然可能一时派不上多大用场，还有就是这些课程的题目在笔试题中会有所体现，学好这些基础课程也可以大大提高笔试的成功率。</p>
<p>在此，楼主特别强调一个对于IT开发人员特别重要的几个技能——自学。说实话，楼主要不是靠着这个技能，也不可能这么快找到工作，说句实在话，现在在工作中用到的挺多技能都是楼主自学的；还有就是IT行业的技术迭代实在是太快了，学校只能学到一些比较基础，比较传（lao）统（jiu）的技能。</p>
<p><img src="./1499351652268.png" alt="Alt text"></p>
<p>还有就是尽量在寒暑假或者在校期间找到IT类的兼职（在一线城市应该会有更多机会），可以留意计信学院、软件学院的校企合作项目（楼主当初就是参加了校企合作项目），在校期间的一段IT兼职经历对以后出来找工作是很重要的。想当年学长也是在学校的校企合作项目中打杂，从而开启了新世界的大门，在这里不得不吐槽，校企合作项目的酬劳大部分都被校领导“窃”走了，虽然钱不多，但是带给你的成长往往是飞跃性质的。</p>
<p>在校期间，如果发现有acs竞赛、软考（高级）、数学建模竞赛，建议参加一下，acs竞赛可以提高编程思维、提高算法、数据结构能力，锻炼开发思维；软考话，初级不建议参加，作用不大，高级的话，挂靠一些公司是可以白拿钱的，如果对高级没有信心，可以先考个中级压压惊（微笑）；数学建模对找机器学习（当今风口）类工作是有一定帮助的，数学建模中的很多拟合方法被用于机器学习的预测（楼主当初没有想到这一层，所以没有去找机器学习相关的工作），数学建模中使用的MATLAB也被广泛机器学习广泛使用。</p>
<p>在学习的过程中，记得把学习的过程整理成博客哦，这对你以后找工作也是一个加分项。学长以前就是觉得自己写的文章太 low 了，不敢写博客，现在发现自己损失了一大笔财富（手动微笑）。博客的话，推荐 github page + hexo + markdown，这套也是学长现在在用的，暂时没有发现更好了，如果不会的话，学长提供手把手教学（一个纯洁的微笑），或者考虑 CSDN。</p>
<p><img src="./1499353562447.png" alt="Alt text"></p>
<p>个人觉得对所有行业都比较重要的一点，就是遵守规则，无论你进入什么行业、从事什么职业、做什么事情，遵守游戏规则都是很重要的一点，所有人都不愿意跟不遵守游戏规则的人共事，当然，在真正摸清楚规则的时候，就能打一些规则上的插边球了，比如逃课（手动微笑）。 </p>
<p><img src="./1499351709378.png" alt="Alt text"></p>
<p>最后我再来说说当今的几大风口吧——大数据、机器学习、ar、vr。从阿法狗打败李世石开始，互联网届就掀起了一股机器学习的浪潮，机器学习被用于数据预测、智能客服等领域，比如淘宝给你推荐的商品、微软小冰等；大数据是机器学习的根基，随着机器学习的兴起，大数据也随之崛起，大数据为机器学习提供预测依据，数据量越大、数据越准确，机器学习的预测越准确；ar、vr只能算是去年的风口，在电子试衣、全息游戏上表现出了巨大潜力，虽然现在还不够成熟，但是楼主相信在未来的5-6年里，ar、vr会再度冲上风口。</p>
<p>推荐个笔试刷题网站：<a href="https://www.nowcoder.com/">https://www.nowcoder.com/</a>
顺便不要脸的附个刷题成就，虽然不刷题好多年~</p>
<p><img src="./1499352357334.png" alt="Alt text"></p>
<p>别看楼主刷了500+道题，但是笔试还是个渣渣，仍然过不了 鹅厂、猪场、狼厂 … 的笔试（捂脸），各位学弟学妹好好加油哦，相信你们一定可以做的比学长更好</p>
<p><img src="./1499352724928.png" alt="Alt text"></p>
<p>面经推荐博客（仅限java）：</p>
<p><a href="http://blog.csdn.net/jackfrued/article/details/44921941">http://blog.csdn.net/jackfrued/article/details/44921941</a> </p>
<p><a href="http://blog.csdn.net/jackfrued/article/details/44931137">http://blog.csdn.net/jackfrued/article/details/44931137</a></p>
<p><a href="http://blog.csdn.net/jackfrued/article/details/44931161">http://blog.csdn.net/jackfrued/article/details/44931161</a></p>
<p>其他推荐：</p>
<p><a href="https://www.oschina.net/">https://www.oschina.net/</a></p>
<p><a href="https://github.com/">https://github.com/</a></p>
<img src="./1499354232840.png">

<p><a href="https://github.com/Knight-JNXU">┋◆冃.狌.交.伖，释.鲂.压.劦、棑.解.漃.瘼◆ 真 人】视||频. █网.址：wWw.gitHub. coM 。Knight-JNXU ◆┋
</a></p>
<p>最后…</p>
<p><img src="./1499352189209.png" alt="Alt text"></p>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>其他</tag>
      </tags>
  </entry>
  <entry>
    <title>蒜薹回锅肉</title>
    <url>/2017/07/30/%E8%92%9C%E8%96%B9%E5%9B%9E%E9%94%85%E8%82%89/</url>
    <content><![CDATA[<p>记得有次分享会的时候，楼主说要多练厨艺的，今天做了个比较复杂的菜（虽说以前也做过，但是没有记录），特此记录！<span id="more"></span></p>
<h4 id="Step-1："><a href="#Step-1：" class="headerlink" title="Step 1："></a>Step 1：</h4><p>准备 五花肉、姜、蒜、葱、干辣椒、食盐、蒜薹、辣椒罐头、蒜薹、豆瓣酱、八角、生抽、鸡精</p>
<h4 id="Step-2："><a href="#Step-2：" class="headerlink" title="Step 2："></a>Step 2：</h4><p>五花肉切小，姜、蒜、葱 切末</p>
<p><img src="./1501416567915.png" alt="Alt text"></p>
<h4 id="Step-3："><a href="#Step-3：" class="headerlink" title="Step 3："></a>Step 3：</h4><p>把切好的 五花肉、姜、蒜、葱 和 干辣椒、八角、盐、水 放入容器中煮 20 分钟，把五花肉稍微煮熟一些就行。</p>
<p><img src="./1501416717271.png" alt="Alt text"></p>
<h4 id="Step-4："><a href="#Step-4：" class="headerlink" title="Step 4："></a>Step 4：</h4><p>蒜薹切成小段，放入盐水中浸泡 10 分钟左右。</p>
<p><img src="./1501416784370.png" alt="Alt text"></p>
<h4 id="Step-5："><a href="#Step-5：" class="headerlink" title="Step 5："></a>Step 5：</h4><p>把煮好的五花肉捞起、切片，滤出一部分汤汁。</p>
<p><img src="./1501416858240.png" alt="Alt text"></p>
<h4 id="Step-6："><a href="#Step-6：" class="headerlink" title="Step 6："></a>Step 6：</h4><p>往锅中加入油清炒蒜薹至3层熟，捞起。</p>
<p><img src="./1501416916511.png" alt="Alt text"></p>
<h4 id="Step-7："><a href="#Step-7：" class="headerlink" title="Step 7："></a>Step 7：</h4><p>往锅中加入油，油热之后加入 豆瓣酱、辣椒罐头、姜，炒一小会 加入切好片的五花肉，边炒边加入生抽、煮肉的汤汁、3层熟的蒜薹、盐。</p>
<p><img src="./1501417367047.png" alt="Alt text"></p>
<p>大功告成！</p>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>烹饪</tag>
      </tags>
  </entry>
  <entry>
    <title>辣椒炒肉</title>
    <url>/2017/08/26/%E8%BE%A3%E6%A4%92%E7%82%92%E8%82%89/</url>
    <content><![CDATA[<p>家常菜系列。<span id="more"></span></p>
<h4 id="Step-1："><a href="#Step-1：" class="headerlink" title="Step 1："></a>Step 1：</h4><p>猪瘦肉、青椒、生抽、老抽、生粉、盐、炒菜料、腌制红椒（楼主老妈做的）</p>
<h4 id="Step-2："><a href="#Step-2：" class="headerlink" title="Step 2："></a>Step 2：</h4><p>猪瘦肉切小，加入老抽、生抽、生粉拌匀，腌制20min左右。</p>
<p><img src="./1503718007376.png" alt="Alt text"></p>
<h4 id="Step-3："><a href="#Step-3：" class="headerlink" title="Step 3："></a>Step 3：</h4><p>青椒切小，静置待用。</p>
<p><img src="./1503718048422.png" alt="Alt text"></p>
<h4 id="Step-4："><a href="#Step-4：" class="headerlink" title="Step 4："></a>Step 4：</h4><p>往锅中倒入适量的油，油热之后放入腌制好的猪肉，翻炒至7成熟。</p>
<p><img src="./1503718247241.png" alt="Alt text"></p>
<h4 id="Step-5："><a href="#Step-5：" class="headerlink" title="Step 5："></a>Step 5：</h4><p>加入青椒、腌制红椒，翻炒一小会，放入炒菜料，翻炒一小会加入盐，翻炒片刻，就大功告成了！</p>
<p><img src="./1503718385591.png" alt="Alt text"></p>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>烹饪</tag>
      </tags>
  </entry>
  <entry>
    <title>设计模式-原型模式-实战篇</title>
    <url>/2018/01/18/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E5%8E%9F%E5%9E%8B%E6%A8%A1%E5%BC%8F-%E5%AE%9E%E6%88%98%E7%AF%87/</url>
    <content><![CDATA[<p>近期，楼主老大给楼主优化代码的时候，使用了 bean 注入一个 httprequest 的方式减少了大量业务代码，同时提高了代码健壮性，在楼主苦思冥想一周后，发现这种做法是原型模式的一种应用，特此记录。</p>
<span id="more"></span>

<h2 id="背景交代"><a href="#背景交代" class="headerlink" title="背景交代"></a>背景交代</h2><p>楼主最近写了一个专门调用第三方服务的业务类，最先的设计是这样的</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">.properties文件 &#123;</span><br><span class="line">配置一些固定参数，如 key 什么的</span><br><span class="line">&#125;</span><br><span class="line">service层 &#123; </span><br><span class="line">	注入一堆业务参数</span><br><span class="line">	拼接 .properties 业务参数，根据某算法计算一个url参数值</span><br><span class="line">	拼接 .properties 业务参数、计算出来的参数、服务端口地址，得到请求 url</span><br><span class="line">	根据请求 url 获取返回值</span><br><span class="line">	解析返回值</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>可以发现，当需要 增加或者减少 url参数 后，需要修改 .properties 、service 层注入、<strong>service层两个拼接</strong>，比较麻烦。在楼主老大 code review 之后，代码设计变成了</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">.properties文件 &#123;</span><br><span class="line">配置一些固定参数，如 key 什么的</span><br><span class="line">&#125;</span><br><span class="line">.xml &#123;</span><br><span class="line">	把固定参数注入 com.feilong.net.entity.HttpRequest，使用 prototype</span><br><span class="line">&#125;</span><br><span class="line">service层 &#123; </span><br><span class="line">	使用HttpRequest自动拼接，根据某算法计算一个url参数值</span><br><span class="line">	把计算出的参数放入 HttpRequest.paramMap 自动拼接请求 url </span><br><span class="line">	根据请求 url 获取返回值</span><br><span class="line">	解析返回值</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>在优化之后，代码更加 简洁、优雅，在 增加或者减少 url参数 后，不用再做 <strong>繁杂的参数处理</strong>。</p>
<p><a href="https://github.com/Knight-JNXU/demos/tree/SpringPrototypePattern">优化demo</a></p>
<h2 id="以小见大"><a href="#以小见大" class="headerlink" title="以小见大"></a>以小见大</h2><p>当某个业务的需要用到<strong>一些特定参数的处理结果</strong>时，可以把这些参数封装成一个<strong>原型类</strong>，通用的参数处理规则、生成规则<strong>在原型类中进行封装</strong>。</p>
<p>指导：<a href="http://feitianbenyue.iteye.com/">飞天奔月</a> | <a href="https://github.com/venusdrogon">venusdrogon</a></p>
]]></content>
      <categories>
        <category>开发</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>设计模式</tag>
      </tags>
  </entry>
</search>
